/* Copyright (c) 2008 The Board of Trustees of The Leland Stanford Junior University */
/* Copyright (c) 2011, 2012 Open Networking Foundation */
/* Copyright (c) 2012, 2013 Big Switch Networks, Inc. */
/* See the file LICENSE.loci which should have been included in the source distribution */

/****************************************************************
 * File: loci.h
 *
 * DO NOT EDIT
 *
 * This file is automatically generated
 *
 ****************************************************************/


#if !defined(_LOCI_H_)
#define _LOCI_H_


#include <loci/loci_base.h>
#include <loci/of_message.h>
#include <loci/of_match.h>
#include <loci/of_object.h>
#include <loci/of_wire_buf.h>

/****************************************************************
 *
 * This file is divided into the following sections.
 *
 * A few object specific macros
 * Class typedefs (no struct definitions)
 * Per-data type accessor function typedefs
 * Per-class new/delete function typedefs
 * Per-class static delete functions
 * Per-class, per-member accessor declarations
 * Per-class structure definitions
 * Generic union (inheritance) definitions
 * Pointer set function declarations
 * Some special case macros
 *
 ****************************************************************/


typedef enum loci_log_level {
    LOCI_LOG_LEVEL_TRACE,
    LOCI_LOG_LEVEL_VERBOSE,
    LOCI_LOG_LEVEL_INFO,
    LOCI_LOG_LEVEL_WARN,
    LOCI_LOG_LEVEL_ERROR,
    LOCI_LOG_LEVEL_MSG
} loci_log_level_t;

/**
 * @brief Output a log message.
 * @param level The log level.
 * @param fname The function name.
 * @param file The file name.
 * @param line The line number.
 * @param format The message format string.
 */
typedef int (*loci_logger_f)(loci_log_level_t level,
                             const char *fname, const char *file, int line,
                             const char *format, ...);

/*
 * This variable should be set by the user of the library to redirect logs to
 * their log infrastructure. The default drops all logs.
 */
extern loci_logger_f loci_logger;

/**
 * Map a generic object to the underlying wire buffer
 *
 * Treat as private
 */
#define OF_OBJECT_TO_MESSAGE(obj) \
    ((of_message_t)(WBUF_BUF((obj)->wire_object.wbuf)))

/**
 * Macro for the fixed length part of an object
 *
 * @param obj The object whose extended length is being calculated
 * @returns length in bytes of non-variable part of the object
 */
#define OF_OBJECT_FIXED_LENGTH(obj) \
    (of_object_fixed_len[(obj)->version][(obj)->object_id])

/**
 * Return the length of the object beyond its fixed length
 *
 * @param obj The object whose extended length is being calculated
 * @returns length in bytes of non-variable part of the object
 *
 * Most variable length fields are alone at the end of a structure.
 * Their length is a simple calculation, just the total length of
 * the parent minus the length of the non-variable part of the
 * parent's class type.
 */

#define OF_OBJECT_VARIABLE_LENGTH(obj) \
    ((obj)->length - OF_OBJECT_FIXED_LENGTH(obj))

/* FIXME: Where do these go? */
/* Low level maps btwn wire version + type and object ids */
extern int of_message_is_stats_request(int type, int w_ver);
extern int of_message_is_stats_reply(int type, int w_ver);
extern int of_message_stats_reply_to_object_id(int stats_type, int w_ver);
extern int of_message_stats_request_to_object_id(int stats_type, int w_ver);
extern int of_message_type_to_object_id(int type, int w_ver);

extern int of_wire_buffer_of_match_get(of_object_t *obj, int offset,
                                    of_match_t *match);
extern int of_wire_buffer_of_match_set(of_object_t *obj, int offset,
                                    of_match_t *match, int cur_len);

/* LOCI inheritance parent typedefs */
typedef union of_queue_prop_u of_queue_prop_t;
typedef union of_hello_elem_u of_hello_elem_t;
typedef union of_bsn_vport_u of_bsn_vport_t;
typedef union of_table_feature_prop_u of_table_feature_prop_t;
typedef union of_action_u of_action_t;
typedef union of_instruction_u of_instruction_t;
typedef union of_instruction_id_u of_instruction_id_t;
typedef union of_meter_band_u of_meter_band_t;
typedef union of_action_id_u of_action_id_t;
typedef union of_oxm_u of_oxm_t;

/* LOCI object typedefs */
typedef of_object_t of_aggregate_stats_reply_t;
typedef of_object_t of_aggregate_stats_request_t;
typedef of_object_t of_async_get_reply_t;
typedef of_object_t of_async_get_request_t;
typedef of_object_t of_async_set_t;
typedef of_object_t of_bad_action_error_msg_t;
typedef of_object_t of_bad_instruction_error_msg_t;
typedef of_object_t of_bad_match_error_msg_t;
typedef of_object_t of_bad_request_error_msg_t;
typedef of_object_t of_barrier_reply_t;
typedef of_object_t of_barrier_request_t;
typedef of_object_t of_bsn_bw_clear_data_reply_t;
typedef of_object_t of_bsn_bw_clear_data_request_t;
typedef of_object_t of_bsn_bw_enable_get_reply_t;
typedef of_object_t of_bsn_bw_enable_get_request_t;
typedef of_object_t of_bsn_bw_enable_set_reply_t;
typedef of_object_t of_bsn_bw_enable_set_request_t;
typedef of_object_t of_bsn_flow_idle_t;
typedef of_object_t of_bsn_flow_idle_enable_get_reply_t;
typedef of_object_t of_bsn_flow_idle_enable_get_request_t;
typedef of_object_t of_bsn_flow_idle_enable_set_reply_t;
typedef of_object_t of_bsn_flow_idle_enable_set_request_t;
typedef of_object_t of_bsn_get_interfaces_reply_t;
typedef of_object_t of_bsn_get_interfaces_request_t;
typedef of_object_t of_bsn_get_ip_mask_reply_t;
typedef of_object_t of_bsn_get_ip_mask_request_t;
typedef of_object_t of_bsn_get_l2_table_reply_t;
typedef of_object_t of_bsn_get_l2_table_request_t;
typedef of_object_t of_bsn_get_mirroring_reply_t;
typedef of_object_t of_bsn_get_mirroring_request_t;
typedef of_object_t of_bsn_get_switch_pipeline_reply_t;
typedef of_object_t of_bsn_get_switch_pipeline_request_t;
typedef of_object_t of_bsn_header_t;
typedef of_object_t of_bsn_hybrid_get_reply_t;
typedef of_object_t of_bsn_hybrid_get_request_t;
typedef of_object_t of_bsn_lacp_convergence_notif_t;
typedef of_object_t of_bsn_lacp_stats_reply_t;
typedef of_object_t of_bsn_lacp_stats_request_t;
typedef of_object_t of_bsn_pdu_rx_reply_t;
typedef of_object_t of_bsn_pdu_rx_request_t;
typedef of_object_t of_bsn_pdu_rx_timeout_t;
typedef of_object_t of_bsn_pdu_tx_reply_t;
typedef of_object_t of_bsn_pdu_tx_request_t;
typedef of_object_t of_bsn_port_counter_stats_reply_t;
typedef of_object_t of_bsn_port_counter_stats_request_t;
typedef of_object_t of_bsn_set_ip_mask_t;
typedef of_object_t of_bsn_set_l2_table_reply_t;
typedef of_object_t of_bsn_set_l2_table_request_t;
typedef of_object_t of_bsn_set_lacp_reply_t;
typedef of_object_t of_bsn_set_lacp_request_t;
typedef of_object_t of_bsn_set_mirroring_t;
typedef of_object_t of_bsn_set_pktin_suppression_reply_t;
typedef of_object_t of_bsn_set_pktin_suppression_request_t;
typedef of_object_t of_bsn_set_switch_pipeline_reply_t;
typedef of_object_t of_bsn_set_switch_pipeline_request_t;
typedef of_object_t of_bsn_shell_command_t;
typedef of_object_t of_bsn_shell_output_t;
typedef of_object_t of_bsn_shell_status_t;
typedef of_object_t of_bsn_stats_reply_t;
typedef of_object_t of_bsn_stats_request_t;
typedef of_object_t of_bsn_switch_pipeline_stats_reply_t;
typedef of_object_t of_bsn_switch_pipeline_stats_request_t;
typedef of_object_t of_bsn_time_reply_t;
typedef of_object_t of_bsn_time_request_t;
typedef of_object_t of_bsn_virtual_port_create_reply_t;
typedef of_object_t of_bsn_virtual_port_create_request_t;
typedef of_object_t of_bsn_virtual_port_remove_reply_t;
typedef of_object_t of_bsn_virtual_port_remove_request_t;
typedef of_object_t of_bsn_vlan_counter_stats_reply_t;
typedef of_object_t of_bsn_vlan_counter_stats_request_t;
typedef of_object_t of_desc_stats_reply_t;
typedef of_object_t of_desc_stats_request_t;
typedef of_object_t of_echo_reply_t;
typedef of_object_t of_echo_request_t;
typedef of_object_t of_error_msg_t;
typedef of_object_t of_experimenter_t;
typedef of_object_t of_experimenter_error_msg_t;
typedef of_object_t of_experimenter_stats_reply_t;
typedef of_object_t of_experimenter_stats_request_t;
typedef of_object_t of_features_reply_t;
typedef of_object_t of_features_request_t;
typedef of_object_t of_flow_add_t;
typedef of_object_t of_flow_delete_t;
typedef of_object_t of_flow_delete_strict_t;
typedef of_object_t of_flow_mod_t;
typedef of_object_t of_flow_mod_failed_error_msg_t;
typedef of_object_t of_flow_modify_t;
typedef of_object_t of_flow_modify_strict_t;
typedef of_object_t of_flow_removed_t;
typedef of_object_t of_flow_stats_reply_t;
typedef of_object_t of_flow_stats_request_t;
typedef of_object_t of_get_config_reply_t;
typedef of_object_t of_get_config_request_t;
typedef of_object_t of_group_add_t;
typedef of_object_t of_group_delete_t;
typedef of_object_t of_group_desc_stats_reply_t;
typedef of_object_t of_group_desc_stats_request_t;
typedef of_object_t of_group_features_stats_reply_t;
typedef of_object_t of_group_features_stats_request_t;
typedef of_object_t of_group_mod_t;
typedef of_object_t of_group_mod_failed_error_msg_t;
typedef of_object_t of_group_modify_t;
typedef of_object_t of_group_stats_reply_t;
typedef of_object_t of_group_stats_request_t;
typedef of_object_t of_hello_t;
typedef of_object_t of_hello_failed_error_msg_t;
typedef of_object_t of_meter_config_stats_reply_t;
typedef of_object_t of_meter_config_stats_request_t;
typedef of_object_t of_meter_features_stats_reply_t;
typedef of_object_t of_meter_features_stats_request_t;
typedef of_object_t of_meter_mod_t;
typedef of_object_t of_meter_mod_failed_error_msg_t;
typedef of_object_t of_meter_stats_reply_t;
typedef of_object_t of_meter_stats_request_t;
typedef of_object_t of_nicira_controller_role_reply_t;
typedef of_object_t of_nicira_controller_role_request_t;
typedef of_object_t of_nicira_header_t;
typedef of_object_t of_packet_in_t;
typedef of_object_t of_packet_out_t;
typedef of_object_t of_port_desc_stats_reply_t;
typedef of_object_t of_port_desc_stats_request_t;
typedef of_object_t of_port_mod_t;
typedef of_object_t of_port_mod_failed_error_msg_t;
typedef of_object_t of_port_stats_reply_t;
typedef of_object_t of_port_stats_request_t;
typedef of_object_t of_port_status_t;
typedef of_object_t of_queue_get_config_reply_t;
typedef of_object_t of_queue_get_config_request_t;
typedef of_object_t of_queue_op_failed_error_msg_t;
typedef of_object_t of_queue_stats_reply_t;
typedef of_object_t of_queue_stats_request_t;
typedef of_object_t of_role_reply_t;
typedef of_object_t of_role_request_t;
typedef of_object_t of_role_request_failed_error_msg_t;
typedef of_object_t of_set_config_t;
typedef of_object_t of_stats_reply_t;
typedef of_object_t of_stats_request_t;
typedef of_object_t of_switch_config_failed_error_msg_t;
typedef of_object_t of_table_features_failed_error_msg_t;
typedef of_object_t of_table_features_stats_reply_t;
typedef of_object_t of_table_features_stats_request_t;
typedef of_object_t of_table_mod_t;
typedef of_object_t of_table_mod_failed_error_msg_t;
typedef of_object_t of_table_stats_reply_t;
typedef of_object_t of_table_stats_request_t;
typedef of_object_t of_action_bsn_t;
typedef of_object_t of_action_bsn_mirror_t;
typedef of_object_t of_action_bsn_set_tunnel_dst_t;
typedef of_object_t of_action_copy_ttl_in_t;
typedef of_object_t of_action_copy_ttl_out_t;
typedef of_object_t of_action_dec_mpls_ttl_t;
typedef of_object_t of_action_dec_nw_ttl_t;
typedef of_object_t of_action_enqueue_t;
typedef of_object_t of_action_experimenter_t;
typedef of_object_t of_action_group_t;
typedef of_object_t of_action_header_t;
typedef of_object_t of_action_id_bsn_t;
typedef of_object_t of_action_id_bsn_mirror_t;
typedef of_object_t of_action_id_bsn_set_tunnel_dst_t;
typedef of_object_t of_action_id_copy_ttl_in_t;
typedef of_object_t of_action_id_copy_ttl_out_t;
typedef of_object_t of_action_id_dec_mpls_ttl_t;
typedef of_object_t of_action_id_dec_nw_ttl_t;
typedef of_object_t of_action_id_experimenter_t;
typedef of_object_t of_action_id_group_t;
typedef of_object_t of_action_id_header_t;
typedef of_object_t of_action_id_nicira_t;
typedef of_object_t of_action_id_nicira_dec_ttl_t;
typedef of_object_t of_action_id_output_t;
typedef of_object_t of_action_id_pop_mpls_t;
typedef of_object_t of_action_id_pop_pbb_t;
typedef of_object_t of_action_id_pop_vlan_t;
typedef of_object_t of_action_id_push_mpls_t;
typedef of_object_t of_action_id_push_pbb_t;
typedef of_object_t of_action_id_push_vlan_t;
typedef of_object_t of_action_id_set_field_t;
typedef of_object_t of_action_id_set_mpls_ttl_t;
typedef of_object_t of_action_id_set_nw_ttl_t;
typedef of_object_t of_action_id_set_queue_t;
typedef of_object_t of_action_nicira_t;
typedef of_object_t of_action_nicira_dec_ttl_t;
typedef of_object_t of_action_output_t;
typedef of_object_t of_action_pop_mpls_t;
typedef of_object_t of_action_pop_pbb_t;
typedef of_object_t of_action_pop_vlan_t;
typedef of_object_t of_action_push_mpls_t;
typedef of_object_t of_action_push_pbb_t;
typedef of_object_t of_action_push_vlan_t;
typedef of_object_t of_action_set_dl_dst_t;
typedef of_object_t of_action_set_dl_src_t;
typedef of_object_t of_action_set_field_t;
typedef of_object_t of_action_set_mpls_label_t;
typedef of_object_t of_action_set_mpls_tc_t;
typedef of_object_t of_action_set_mpls_ttl_t;
typedef of_object_t of_action_set_nw_dst_t;
typedef of_object_t of_action_set_nw_ecn_t;
typedef of_object_t of_action_set_nw_src_t;
typedef of_object_t of_action_set_nw_tos_t;
typedef of_object_t of_action_set_nw_ttl_t;
typedef of_object_t of_action_set_queue_t;
typedef of_object_t of_action_set_tp_dst_t;
typedef of_object_t of_action_set_tp_src_t;
typedef of_object_t of_action_set_vlan_pcp_t;
typedef of_object_t of_action_set_vlan_vid_t;
typedef of_object_t of_action_strip_vlan_t;
typedef of_object_t of_bsn_interface_t;
typedef of_object_t of_bsn_lacp_stats_entry_t;
typedef of_object_t of_bsn_port_counter_stats_entry_t;
typedef of_object_t of_bsn_switch_pipeline_stats_entry_t;
typedef of_object_t of_bsn_vlan_counter_stats_entry_t;
typedef of_object_t of_bsn_vport_header_t;
typedef of_object_t of_bsn_vport_q_in_q_t;
typedef of_object_t of_bucket_t;
typedef of_object_t of_bucket_counter_t;
typedef of_object_t of_experimenter_stats_header_t;
typedef of_object_t of_flow_stats_entry_t;
typedef of_object_t of_group_desc_stats_entry_t;
typedef of_object_t of_group_stats_entry_t;
typedef of_object_t of_header_t;
typedef of_object_t of_hello_elem_header_t;
typedef of_object_t of_hello_elem_versionbitmap_t;
typedef of_object_t of_instruction_apply_actions_t;
typedef of_object_t of_instruction_bsn_t;
typedef of_object_t of_instruction_bsn_disable_src_mac_check_t;
typedef of_object_t of_instruction_clear_actions_t;
typedef of_object_t of_instruction_experimenter_t;
typedef of_object_t of_instruction_goto_table_t;
typedef of_object_t of_instruction_header_t;
typedef of_object_t of_instruction_id_apply_actions_t;
typedef of_object_t of_instruction_id_bsn_t;
typedef of_object_t of_instruction_id_bsn_disable_src_mac_check_t;
typedef of_object_t of_instruction_id_clear_actions_t;
typedef of_object_t of_instruction_id_experimenter_t;
typedef of_object_t of_instruction_id_goto_table_t;
typedef of_object_t of_instruction_id_header_t;
typedef of_object_t of_instruction_id_meter_t;
typedef of_object_t of_instruction_id_write_actions_t;
typedef of_object_t of_instruction_id_write_metadata_t;
typedef of_object_t of_instruction_meter_t;
typedef of_object_t of_instruction_write_actions_t;
typedef of_object_t of_instruction_write_metadata_t;
typedef of_object_t of_match_v1_t;
typedef of_object_t of_match_v2_t;
typedef of_object_t of_match_v3_t;
typedef of_object_t of_meter_band_drop_t;
typedef of_object_t of_meter_band_dscp_remark_t;
typedef of_object_t of_meter_band_experimenter_t;
typedef of_object_t of_meter_band_header_t;
typedef of_object_t of_meter_band_stats_t;
typedef of_object_t of_meter_config_t;
typedef of_object_t of_meter_features_t;
typedef of_object_t of_meter_stats_t;
typedef of_object_t of_oxm_arp_op_t;
typedef of_object_t of_oxm_arp_op_masked_t;
typedef of_object_t of_oxm_arp_sha_t;
typedef of_object_t of_oxm_arp_sha_masked_t;
typedef of_object_t of_oxm_arp_spa_t;
typedef of_object_t of_oxm_arp_spa_masked_t;
typedef of_object_t of_oxm_arp_tha_t;
typedef of_object_t of_oxm_arp_tha_masked_t;
typedef of_object_t of_oxm_arp_tpa_t;
typedef of_object_t of_oxm_arp_tpa_masked_t;
typedef of_object_t of_oxm_bsn_global_vrf_allowed_t;
typedef of_object_t of_oxm_bsn_global_vrf_allowed_masked_t;
typedef of_object_t of_oxm_bsn_in_ports_128_t;
typedef of_object_t of_oxm_bsn_in_ports_128_masked_t;
typedef of_object_t of_oxm_bsn_l3_dst_class_id_t;
typedef of_object_t of_oxm_bsn_l3_dst_class_id_masked_t;
typedef of_object_t of_oxm_bsn_l3_interface_class_id_t;
typedef of_object_t of_oxm_bsn_l3_interface_class_id_masked_t;
typedef of_object_t of_oxm_bsn_l3_src_class_id_t;
typedef of_object_t of_oxm_bsn_l3_src_class_id_masked_t;
typedef of_object_t of_oxm_bsn_lag_id_t;
typedef of_object_t of_oxm_bsn_lag_id_masked_t;
typedef of_object_t of_oxm_bsn_vrf_t;
typedef of_object_t of_oxm_bsn_vrf_masked_t;
typedef of_object_t of_oxm_eth_dst_t;
typedef of_object_t of_oxm_eth_dst_masked_t;
typedef of_object_t of_oxm_eth_src_t;
typedef of_object_t of_oxm_eth_src_masked_t;
typedef of_object_t of_oxm_eth_type_t;
typedef of_object_t of_oxm_eth_type_masked_t;
typedef of_object_t of_oxm_header_t;
typedef of_object_t of_oxm_icmpv4_code_t;
typedef of_object_t of_oxm_icmpv4_code_masked_t;
typedef of_object_t of_oxm_icmpv4_type_t;
typedef of_object_t of_oxm_icmpv4_type_masked_t;
typedef of_object_t of_oxm_icmpv6_code_t;
typedef of_object_t of_oxm_icmpv6_code_masked_t;
typedef of_object_t of_oxm_icmpv6_type_t;
typedef of_object_t of_oxm_icmpv6_type_masked_t;
typedef of_object_t of_oxm_in_phy_port_t;
typedef of_object_t of_oxm_in_phy_port_masked_t;
typedef of_object_t of_oxm_in_port_t;
typedef of_object_t of_oxm_in_port_masked_t;
typedef of_object_t of_oxm_ip_dscp_t;
typedef of_object_t of_oxm_ip_dscp_masked_t;
typedef of_object_t of_oxm_ip_ecn_t;
typedef of_object_t of_oxm_ip_ecn_masked_t;
typedef of_object_t of_oxm_ip_proto_t;
typedef of_object_t of_oxm_ip_proto_masked_t;
typedef of_object_t of_oxm_ipv4_dst_t;
typedef of_object_t of_oxm_ipv4_dst_masked_t;
typedef of_object_t of_oxm_ipv4_src_t;
typedef of_object_t of_oxm_ipv4_src_masked_t;
typedef of_object_t of_oxm_ipv6_dst_t;
typedef of_object_t of_oxm_ipv6_dst_masked_t;
typedef of_object_t of_oxm_ipv6_flabel_t;
typedef of_object_t of_oxm_ipv6_flabel_masked_t;
typedef of_object_t of_oxm_ipv6_nd_sll_t;
typedef of_object_t of_oxm_ipv6_nd_sll_masked_t;
typedef of_object_t of_oxm_ipv6_nd_target_t;
typedef of_object_t of_oxm_ipv6_nd_target_masked_t;
typedef of_object_t of_oxm_ipv6_nd_tll_t;
typedef of_object_t of_oxm_ipv6_nd_tll_masked_t;
typedef of_object_t of_oxm_ipv6_src_t;
typedef of_object_t of_oxm_ipv6_src_masked_t;
typedef of_object_t of_oxm_metadata_t;
typedef of_object_t of_oxm_metadata_masked_t;
typedef of_object_t of_oxm_mpls_label_t;
typedef of_object_t of_oxm_mpls_label_masked_t;
typedef of_object_t of_oxm_mpls_tc_t;
typedef of_object_t of_oxm_mpls_tc_masked_t;
typedef of_object_t of_oxm_sctp_dst_t;
typedef of_object_t of_oxm_sctp_dst_masked_t;
typedef of_object_t of_oxm_sctp_src_t;
typedef of_object_t of_oxm_sctp_src_masked_t;
typedef of_object_t of_oxm_tcp_dst_t;
typedef of_object_t of_oxm_tcp_dst_masked_t;
typedef of_object_t of_oxm_tcp_src_t;
typedef of_object_t of_oxm_tcp_src_masked_t;
typedef of_object_t of_oxm_udp_dst_t;
typedef of_object_t of_oxm_udp_dst_masked_t;
typedef of_object_t of_oxm_udp_src_t;
typedef of_object_t of_oxm_udp_src_masked_t;
typedef of_object_t of_oxm_vlan_pcp_t;
typedef of_object_t of_oxm_vlan_pcp_masked_t;
typedef of_object_t of_oxm_vlan_vid_t;
typedef of_object_t of_oxm_vlan_vid_masked_t;
typedef of_object_t of_packet_queue_t;
typedef of_object_t of_port_desc_t;
typedef of_object_t of_port_stats_entry_t;
typedef of_object_t of_queue_prop_experimenter_t;
typedef of_object_t of_queue_prop_header_t;
typedef of_object_t of_queue_prop_max_rate_t;
typedef of_object_t of_queue_prop_min_rate_t;
typedef of_object_t of_queue_stats_entry_t;
typedef of_object_t of_table_feature_prop_apply_actions_t;
typedef of_object_t of_table_feature_prop_apply_actions_miss_t;
typedef of_object_t of_table_feature_prop_apply_setfield_t;
typedef of_object_t of_table_feature_prop_apply_setfield_miss_t;
typedef of_object_t of_table_feature_prop_experimenter_t;
typedef of_object_t of_table_feature_prop_header_t;
typedef of_object_t of_table_feature_prop_instructions_t;
typedef of_object_t of_table_feature_prop_instructions_miss_t;
typedef of_object_t of_table_feature_prop_match_t;
typedef of_object_t of_table_feature_prop_next_tables_t;
typedef of_object_t of_table_feature_prop_next_tables_miss_t;
typedef of_object_t of_table_feature_prop_wildcards_t;
typedef of_object_t of_table_feature_prop_write_actions_t;
typedef of_object_t of_table_feature_prop_write_actions_miss_t;
typedef of_object_t of_table_feature_prop_write_setfield_t;
typedef of_object_t of_table_feature_prop_write_setfield_miss_t;
typedef of_object_t of_table_features_t;
typedef of_object_t of_table_stats_entry_t;
typedef of_object_t of_uint32_t;
typedef of_object_t of_uint64_t;
typedef of_object_t of_uint8_t;
typedef of_object_t of_list_action_t;
typedef of_object_t of_list_action_id_t;
typedef of_object_t of_list_bsn_interface_t;
typedef of_object_t of_list_bsn_lacp_stats_entry_t;
typedef of_object_t of_list_bsn_port_counter_stats_entry_t;
typedef of_object_t of_list_bsn_switch_pipeline_stats_entry_t;
typedef of_object_t of_list_bsn_vlan_counter_stats_entry_t;
typedef of_object_t of_list_bucket_t;
typedef of_object_t of_list_bucket_counter_t;
typedef of_object_t of_list_flow_stats_entry_t;
typedef of_object_t of_list_group_desc_stats_entry_t;
typedef of_object_t of_list_group_stats_entry_t;
typedef of_object_t of_list_hello_elem_t;
typedef of_object_t of_list_instruction_t;
typedef of_object_t of_list_meter_band_t;
typedef of_object_t of_list_meter_band_stats_t;
typedef of_object_t of_list_meter_stats_t;
typedef of_object_t of_list_oxm_t;
typedef of_object_t of_list_packet_queue_t;
typedef of_object_t of_list_port_desc_t;
typedef of_object_t of_list_port_stats_entry_t;
typedef of_object_t of_list_queue_prop_t;
typedef of_object_t of_list_queue_stats_entry_t;
typedef of_object_t of_list_table_feature_prop_t;
typedef of_object_t of_list_table_features_t;
typedef of_object_t of_list_table_stats_entry_t;
typedef of_object_t of_list_uint32_t;
typedef of_object_t of_list_uint64_t;
typedef of_object_t of_list_uint8_t;

/****************************************************************
 *
 * Additional of_object defines
 * These are needed for some static inline ops, so we put them here.
 *
 ****************************************************************/

/* Delete an OpenFlow object without reference to its type */
extern void of_object_delete(of_object_t *obj);


/****************************************************************
 *
 * Accessor function pointer typedefs
 *
 ****************************************************************/

/*
 * Generic accessors:
 *
 * Many objects have a length represented in the wire buffer
 * wire_length_get and wire_length_set access these values directly on the
 * wire.
 *
 * Many objects have a length represented in the wire buffer
 * wire_length_get and wire_length_set access these values directly on the
 * wire.
 *
 * FIXME: TBD if wire_length_set and wire_type_set are required.
 */
typedef void (*of_wire_length_get_f)(of_object_t *obj, int *bytes);
typedef void (*of_wire_length_set_f)(of_object_t *obj, int bytes);
typedef void (*of_wire_type_get_f)(of_object_t *obj, of_object_id_t *id);
typedef void (*of_wire_type_set_f)(of_object_t *obj);

/****************************************************************
 *
 * New operator declarations
 *
 * _new: Create a new object for writing; includes init
 * _new_from_message: Create a new instance of the object and bind the
 *    message data to the object
 * _init: Initialize and optionally allocate buffer space for an
 *    automatic instance
 *
 * _new and _from_message require a delete operation to be called
 * on the object.
 *
 ****************************************************************/

/*
 * If object tracking is enabled, map "new" and "new from msg"
 * calls to tracking versions; otherwise, directly to internal
 * versions of fns which have the same name but end in _.
 */

#if defined(OF_OBJECT_TRACKING)

extern of_aggregate_stats_reply_t *
    of_aggregate_stats_reply_new_tracking(of_version_t version,
        const char *file, int line);
#define of_aggregate_stats_reply_new(version) \
    of_aggregate_stats_reply_new_tracking(version, \
        __FILE__, __LINE__)
extern of_aggregate_stats_reply_t *
    of_aggregate_stats_reply_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_aggregate_stats_reply_new_from_message(msg) \
    of_aggregate_stats_reply_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_aggregate_stats_request_t *
    of_aggregate_stats_request_new_tracking(of_version_t version,
        const char *file, int line);
#define of_aggregate_stats_request_new(version) \
    of_aggregate_stats_request_new_tracking(version, \
        __FILE__, __LINE__)
extern of_aggregate_stats_request_t *
    of_aggregate_stats_request_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_aggregate_stats_request_new_from_message(msg) \
    of_aggregate_stats_request_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_async_get_reply_t *
    of_async_get_reply_new_tracking(of_version_t version,
        const char *file, int line);
#define of_async_get_reply_new(version) \
    of_async_get_reply_new_tracking(version, \
        __FILE__, __LINE__)
extern of_async_get_reply_t *
    of_async_get_reply_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_async_get_reply_new_from_message(msg) \
    of_async_get_reply_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_async_get_request_t *
    of_async_get_request_new_tracking(of_version_t version,
        const char *file, int line);
#define of_async_get_request_new(version) \
    of_async_get_request_new_tracking(version, \
        __FILE__, __LINE__)
extern of_async_get_request_t *
    of_async_get_request_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_async_get_request_new_from_message(msg) \
    of_async_get_request_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_async_set_t *
    of_async_set_new_tracking(of_version_t version,
        const char *file, int line);
#define of_async_set_new(version) \
    of_async_set_new_tracking(version, \
        __FILE__, __LINE__)
extern of_async_set_t *
    of_async_set_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_async_set_new_from_message(msg) \
    of_async_set_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bad_action_error_msg_t *
    of_bad_action_error_msg_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bad_action_error_msg_new(version) \
    of_bad_action_error_msg_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bad_action_error_msg_t *
    of_bad_action_error_msg_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bad_action_error_msg_new_from_message(msg) \
    of_bad_action_error_msg_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bad_instruction_error_msg_t *
    of_bad_instruction_error_msg_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bad_instruction_error_msg_new(version) \
    of_bad_instruction_error_msg_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bad_instruction_error_msg_t *
    of_bad_instruction_error_msg_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bad_instruction_error_msg_new_from_message(msg) \
    of_bad_instruction_error_msg_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bad_match_error_msg_t *
    of_bad_match_error_msg_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bad_match_error_msg_new(version) \
    of_bad_match_error_msg_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bad_match_error_msg_t *
    of_bad_match_error_msg_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bad_match_error_msg_new_from_message(msg) \
    of_bad_match_error_msg_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bad_request_error_msg_t *
    of_bad_request_error_msg_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bad_request_error_msg_new(version) \
    of_bad_request_error_msg_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bad_request_error_msg_t *
    of_bad_request_error_msg_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bad_request_error_msg_new_from_message(msg) \
    of_bad_request_error_msg_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_barrier_reply_t *
    of_barrier_reply_new_tracking(of_version_t version,
        const char *file, int line);
#define of_barrier_reply_new(version) \
    of_barrier_reply_new_tracking(version, \
        __FILE__, __LINE__)
extern of_barrier_reply_t *
    of_barrier_reply_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_barrier_reply_new_from_message(msg) \
    of_barrier_reply_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_barrier_request_t *
    of_barrier_request_new_tracking(of_version_t version,
        const char *file, int line);
#define of_barrier_request_new(version) \
    of_barrier_request_new_tracking(version, \
        __FILE__, __LINE__)
extern of_barrier_request_t *
    of_barrier_request_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_barrier_request_new_from_message(msg) \
    of_barrier_request_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_bw_clear_data_reply_t *
    of_bsn_bw_clear_data_reply_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_bw_clear_data_reply_new(version) \
    of_bsn_bw_clear_data_reply_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_bw_clear_data_reply_t *
    of_bsn_bw_clear_data_reply_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_bw_clear_data_reply_new_from_message(msg) \
    of_bsn_bw_clear_data_reply_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_bw_clear_data_request_t *
    of_bsn_bw_clear_data_request_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_bw_clear_data_request_new(version) \
    of_bsn_bw_clear_data_request_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_bw_clear_data_request_t *
    of_bsn_bw_clear_data_request_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_bw_clear_data_request_new_from_message(msg) \
    of_bsn_bw_clear_data_request_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_bw_enable_get_reply_t *
    of_bsn_bw_enable_get_reply_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_bw_enable_get_reply_new(version) \
    of_bsn_bw_enable_get_reply_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_bw_enable_get_reply_t *
    of_bsn_bw_enable_get_reply_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_bw_enable_get_reply_new_from_message(msg) \
    of_bsn_bw_enable_get_reply_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_bw_enable_get_request_t *
    of_bsn_bw_enable_get_request_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_bw_enable_get_request_new(version) \
    of_bsn_bw_enable_get_request_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_bw_enable_get_request_t *
    of_bsn_bw_enable_get_request_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_bw_enable_get_request_new_from_message(msg) \
    of_bsn_bw_enable_get_request_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_bw_enable_set_reply_t *
    of_bsn_bw_enable_set_reply_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_bw_enable_set_reply_new(version) \
    of_bsn_bw_enable_set_reply_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_bw_enable_set_reply_t *
    of_bsn_bw_enable_set_reply_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_bw_enable_set_reply_new_from_message(msg) \
    of_bsn_bw_enable_set_reply_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_bw_enable_set_request_t *
    of_bsn_bw_enable_set_request_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_bw_enable_set_request_new(version) \
    of_bsn_bw_enable_set_request_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_bw_enable_set_request_t *
    of_bsn_bw_enable_set_request_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_bw_enable_set_request_new_from_message(msg) \
    of_bsn_bw_enable_set_request_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_flow_idle_t *
    of_bsn_flow_idle_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_flow_idle_new(version) \
    of_bsn_flow_idle_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_flow_idle_t *
    of_bsn_flow_idle_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_flow_idle_new_from_message(msg) \
    of_bsn_flow_idle_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_flow_idle_enable_get_reply_t *
    of_bsn_flow_idle_enable_get_reply_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_flow_idle_enable_get_reply_new(version) \
    of_bsn_flow_idle_enable_get_reply_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_flow_idle_enable_get_reply_t *
    of_bsn_flow_idle_enable_get_reply_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_flow_idle_enable_get_reply_new_from_message(msg) \
    of_bsn_flow_idle_enable_get_reply_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_flow_idle_enable_get_request_t *
    of_bsn_flow_idle_enable_get_request_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_flow_idle_enable_get_request_new(version) \
    of_bsn_flow_idle_enable_get_request_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_flow_idle_enable_get_request_t *
    of_bsn_flow_idle_enable_get_request_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_flow_idle_enable_get_request_new_from_message(msg) \
    of_bsn_flow_idle_enable_get_request_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_flow_idle_enable_set_reply_t *
    of_bsn_flow_idle_enable_set_reply_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_flow_idle_enable_set_reply_new(version) \
    of_bsn_flow_idle_enable_set_reply_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_flow_idle_enable_set_reply_t *
    of_bsn_flow_idle_enable_set_reply_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_flow_idle_enable_set_reply_new_from_message(msg) \
    of_bsn_flow_idle_enable_set_reply_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_flow_idle_enable_set_request_t *
    of_bsn_flow_idle_enable_set_request_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_flow_idle_enable_set_request_new(version) \
    of_bsn_flow_idle_enable_set_request_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_flow_idle_enable_set_request_t *
    of_bsn_flow_idle_enable_set_request_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_flow_idle_enable_set_request_new_from_message(msg) \
    of_bsn_flow_idle_enable_set_request_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_get_interfaces_reply_t *
    of_bsn_get_interfaces_reply_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_get_interfaces_reply_new(version) \
    of_bsn_get_interfaces_reply_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_get_interfaces_reply_t *
    of_bsn_get_interfaces_reply_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_get_interfaces_reply_new_from_message(msg) \
    of_bsn_get_interfaces_reply_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_get_interfaces_request_t *
    of_bsn_get_interfaces_request_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_get_interfaces_request_new(version) \
    of_bsn_get_interfaces_request_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_get_interfaces_request_t *
    of_bsn_get_interfaces_request_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_get_interfaces_request_new_from_message(msg) \
    of_bsn_get_interfaces_request_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_get_ip_mask_reply_t *
    of_bsn_get_ip_mask_reply_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_get_ip_mask_reply_new(version) \
    of_bsn_get_ip_mask_reply_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_get_ip_mask_reply_t *
    of_bsn_get_ip_mask_reply_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_get_ip_mask_reply_new_from_message(msg) \
    of_bsn_get_ip_mask_reply_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_get_ip_mask_request_t *
    of_bsn_get_ip_mask_request_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_get_ip_mask_request_new(version) \
    of_bsn_get_ip_mask_request_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_get_ip_mask_request_t *
    of_bsn_get_ip_mask_request_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_get_ip_mask_request_new_from_message(msg) \
    of_bsn_get_ip_mask_request_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_get_l2_table_reply_t *
    of_bsn_get_l2_table_reply_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_get_l2_table_reply_new(version) \
    of_bsn_get_l2_table_reply_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_get_l2_table_reply_t *
    of_bsn_get_l2_table_reply_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_get_l2_table_reply_new_from_message(msg) \
    of_bsn_get_l2_table_reply_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_get_l2_table_request_t *
    of_bsn_get_l2_table_request_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_get_l2_table_request_new(version) \
    of_bsn_get_l2_table_request_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_get_l2_table_request_t *
    of_bsn_get_l2_table_request_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_get_l2_table_request_new_from_message(msg) \
    of_bsn_get_l2_table_request_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_get_mirroring_reply_t *
    of_bsn_get_mirroring_reply_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_get_mirroring_reply_new(version) \
    of_bsn_get_mirroring_reply_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_get_mirroring_reply_t *
    of_bsn_get_mirroring_reply_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_get_mirroring_reply_new_from_message(msg) \
    of_bsn_get_mirroring_reply_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_get_mirroring_request_t *
    of_bsn_get_mirroring_request_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_get_mirroring_request_new(version) \
    of_bsn_get_mirroring_request_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_get_mirroring_request_t *
    of_bsn_get_mirroring_request_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_get_mirroring_request_new_from_message(msg) \
    of_bsn_get_mirroring_request_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_get_switch_pipeline_reply_t *
    of_bsn_get_switch_pipeline_reply_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_get_switch_pipeline_reply_new(version) \
    of_bsn_get_switch_pipeline_reply_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_get_switch_pipeline_reply_t *
    of_bsn_get_switch_pipeline_reply_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_get_switch_pipeline_reply_new_from_message(msg) \
    of_bsn_get_switch_pipeline_reply_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_get_switch_pipeline_request_t *
    of_bsn_get_switch_pipeline_request_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_get_switch_pipeline_request_new(version) \
    of_bsn_get_switch_pipeline_request_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_get_switch_pipeline_request_t *
    of_bsn_get_switch_pipeline_request_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_get_switch_pipeline_request_new_from_message(msg) \
    of_bsn_get_switch_pipeline_request_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_header_t *
    of_bsn_header_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_header_new(version) \
    of_bsn_header_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_header_t *
    of_bsn_header_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_header_new_from_message(msg) \
    of_bsn_header_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_hybrid_get_reply_t *
    of_bsn_hybrid_get_reply_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_hybrid_get_reply_new(version) \
    of_bsn_hybrid_get_reply_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_hybrid_get_reply_t *
    of_bsn_hybrid_get_reply_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_hybrid_get_reply_new_from_message(msg) \
    of_bsn_hybrid_get_reply_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_hybrid_get_request_t *
    of_bsn_hybrid_get_request_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_hybrid_get_request_new(version) \
    of_bsn_hybrid_get_request_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_hybrid_get_request_t *
    of_bsn_hybrid_get_request_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_hybrid_get_request_new_from_message(msg) \
    of_bsn_hybrid_get_request_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_lacp_convergence_notif_t *
    of_bsn_lacp_convergence_notif_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_lacp_convergence_notif_new(version) \
    of_bsn_lacp_convergence_notif_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_lacp_convergence_notif_t *
    of_bsn_lacp_convergence_notif_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_lacp_convergence_notif_new_from_message(msg) \
    of_bsn_lacp_convergence_notif_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_lacp_stats_reply_t *
    of_bsn_lacp_stats_reply_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_lacp_stats_reply_new(version) \
    of_bsn_lacp_stats_reply_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_lacp_stats_reply_t *
    of_bsn_lacp_stats_reply_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_lacp_stats_reply_new_from_message(msg) \
    of_bsn_lacp_stats_reply_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_lacp_stats_request_t *
    of_bsn_lacp_stats_request_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_lacp_stats_request_new(version) \
    of_bsn_lacp_stats_request_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_lacp_stats_request_t *
    of_bsn_lacp_stats_request_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_lacp_stats_request_new_from_message(msg) \
    of_bsn_lacp_stats_request_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_pdu_rx_reply_t *
    of_bsn_pdu_rx_reply_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_pdu_rx_reply_new(version) \
    of_bsn_pdu_rx_reply_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_pdu_rx_reply_t *
    of_bsn_pdu_rx_reply_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_pdu_rx_reply_new_from_message(msg) \
    of_bsn_pdu_rx_reply_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_pdu_rx_request_t *
    of_bsn_pdu_rx_request_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_pdu_rx_request_new(version) \
    of_bsn_pdu_rx_request_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_pdu_rx_request_t *
    of_bsn_pdu_rx_request_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_pdu_rx_request_new_from_message(msg) \
    of_bsn_pdu_rx_request_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_pdu_rx_timeout_t *
    of_bsn_pdu_rx_timeout_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_pdu_rx_timeout_new(version) \
    of_bsn_pdu_rx_timeout_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_pdu_rx_timeout_t *
    of_bsn_pdu_rx_timeout_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_pdu_rx_timeout_new_from_message(msg) \
    of_bsn_pdu_rx_timeout_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_pdu_tx_reply_t *
    of_bsn_pdu_tx_reply_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_pdu_tx_reply_new(version) \
    of_bsn_pdu_tx_reply_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_pdu_tx_reply_t *
    of_bsn_pdu_tx_reply_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_pdu_tx_reply_new_from_message(msg) \
    of_bsn_pdu_tx_reply_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_pdu_tx_request_t *
    of_bsn_pdu_tx_request_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_pdu_tx_request_new(version) \
    of_bsn_pdu_tx_request_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_pdu_tx_request_t *
    of_bsn_pdu_tx_request_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_pdu_tx_request_new_from_message(msg) \
    of_bsn_pdu_tx_request_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_port_counter_stats_reply_t *
    of_bsn_port_counter_stats_reply_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_port_counter_stats_reply_new(version) \
    of_bsn_port_counter_stats_reply_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_port_counter_stats_reply_t *
    of_bsn_port_counter_stats_reply_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_port_counter_stats_reply_new_from_message(msg) \
    of_bsn_port_counter_stats_reply_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_port_counter_stats_request_t *
    of_bsn_port_counter_stats_request_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_port_counter_stats_request_new(version) \
    of_bsn_port_counter_stats_request_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_port_counter_stats_request_t *
    of_bsn_port_counter_stats_request_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_port_counter_stats_request_new_from_message(msg) \
    of_bsn_port_counter_stats_request_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_set_ip_mask_t *
    of_bsn_set_ip_mask_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_set_ip_mask_new(version) \
    of_bsn_set_ip_mask_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_set_ip_mask_t *
    of_bsn_set_ip_mask_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_set_ip_mask_new_from_message(msg) \
    of_bsn_set_ip_mask_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_set_l2_table_reply_t *
    of_bsn_set_l2_table_reply_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_set_l2_table_reply_new(version) \
    of_bsn_set_l2_table_reply_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_set_l2_table_reply_t *
    of_bsn_set_l2_table_reply_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_set_l2_table_reply_new_from_message(msg) \
    of_bsn_set_l2_table_reply_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_set_l2_table_request_t *
    of_bsn_set_l2_table_request_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_set_l2_table_request_new(version) \
    of_bsn_set_l2_table_request_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_set_l2_table_request_t *
    of_bsn_set_l2_table_request_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_set_l2_table_request_new_from_message(msg) \
    of_bsn_set_l2_table_request_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_set_lacp_reply_t *
    of_bsn_set_lacp_reply_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_set_lacp_reply_new(version) \
    of_bsn_set_lacp_reply_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_set_lacp_reply_t *
    of_bsn_set_lacp_reply_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_set_lacp_reply_new_from_message(msg) \
    of_bsn_set_lacp_reply_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_set_lacp_request_t *
    of_bsn_set_lacp_request_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_set_lacp_request_new(version) \
    of_bsn_set_lacp_request_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_set_lacp_request_t *
    of_bsn_set_lacp_request_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_set_lacp_request_new_from_message(msg) \
    of_bsn_set_lacp_request_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_set_mirroring_t *
    of_bsn_set_mirroring_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_set_mirroring_new(version) \
    of_bsn_set_mirroring_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_set_mirroring_t *
    of_bsn_set_mirroring_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_set_mirroring_new_from_message(msg) \
    of_bsn_set_mirroring_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_set_pktin_suppression_reply_t *
    of_bsn_set_pktin_suppression_reply_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_set_pktin_suppression_reply_new(version) \
    of_bsn_set_pktin_suppression_reply_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_set_pktin_suppression_reply_t *
    of_bsn_set_pktin_suppression_reply_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_set_pktin_suppression_reply_new_from_message(msg) \
    of_bsn_set_pktin_suppression_reply_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_set_pktin_suppression_request_t *
    of_bsn_set_pktin_suppression_request_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_set_pktin_suppression_request_new(version) \
    of_bsn_set_pktin_suppression_request_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_set_pktin_suppression_request_t *
    of_bsn_set_pktin_suppression_request_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_set_pktin_suppression_request_new_from_message(msg) \
    of_bsn_set_pktin_suppression_request_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_set_switch_pipeline_reply_t *
    of_bsn_set_switch_pipeline_reply_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_set_switch_pipeline_reply_new(version) \
    of_bsn_set_switch_pipeline_reply_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_set_switch_pipeline_reply_t *
    of_bsn_set_switch_pipeline_reply_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_set_switch_pipeline_reply_new_from_message(msg) \
    of_bsn_set_switch_pipeline_reply_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_set_switch_pipeline_request_t *
    of_bsn_set_switch_pipeline_request_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_set_switch_pipeline_request_new(version) \
    of_bsn_set_switch_pipeline_request_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_set_switch_pipeline_request_t *
    of_bsn_set_switch_pipeline_request_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_set_switch_pipeline_request_new_from_message(msg) \
    of_bsn_set_switch_pipeline_request_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_shell_command_t *
    of_bsn_shell_command_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_shell_command_new(version) \
    of_bsn_shell_command_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_shell_command_t *
    of_bsn_shell_command_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_shell_command_new_from_message(msg) \
    of_bsn_shell_command_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_shell_output_t *
    of_bsn_shell_output_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_shell_output_new(version) \
    of_bsn_shell_output_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_shell_output_t *
    of_bsn_shell_output_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_shell_output_new_from_message(msg) \
    of_bsn_shell_output_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_shell_status_t *
    of_bsn_shell_status_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_shell_status_new(version) \
    of_bsn_shell_status_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_shell_status_t *
    of_bsn_shell_status_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_shell_status_new_from_message(msg) \
    of_bsn_shell_status_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_stats_reply_t *
    of_bsn_stats_reply_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_stats_reply_new(version) \
    of_bsn_stats_reply_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_stats_reply_t *
    of_bsn_stats_reply_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_stats_reply_new_from_message(msg) \
    of_bsn_stats_reply_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_stats_request_t *
    of_bsn_stats_request_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_stats_request_new(version) \
    of_bsn_stats_request_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_stats_request_t *
    of_bsn_stats_request_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_stats_request_new_from_message(msg) \
    of_bsn_stats_request_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_switch_pipeline_stats_reply_t *
    of_bsn_switch_pipeline_stats_reply_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_switch_pipeline_stats_reply_new(version) \
    of_bsn_switch_pipeline_stats_reply_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_switch_pipeline_stats_reply_t *
    of_bsn_switch_pipeline_stats_reply_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_switch_pipeline_stats_reply_new_from_message(msg) \
    of_bsn_switch_pipeline_stats_reply_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_switch_pipeline_stats_request_t *
    of_bsn_switch_pipeline_stats_request_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_switch_pipeline_stats_request_new(version) \
    of_bsn_switch_pipeline_stats_request_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_switch_pipeline_stats_request_t *
    of_bsn_switch_pipeline_stats_request_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_switch_pipeline_stats_request_new_from_message(msg) \
    of_bsn_switch_pipeline_stats_request_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_time_reply_t *
    of_bsn_time_reply_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_time_reply_new(version) \
    of_bsn_time_reply_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_time_reply_t *
    of_bsn_time_reply_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_time_reply_new_from_message(msg) \
    of_bsn_time_reply_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_time_request_t *
    of_bsn_time_request_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_time_request_new(version) \
    of_bsn_time_request_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_time_request_t *
    of_bsn_time_request_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_time_request_new_from_message(msg) \
    of_bsn_time_request_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_virtual_port_create_reply_t *
    of_bsn_virtual_port_create_reply_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_virtual_port_create_reply_new(version) \
    of_bsn_virtual_port_create_reply_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_virtual_port_create_reply_t *
    of_bsn_virtual_port_create_reply_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_virtual_port_create_reply_new_from_message(msg) \
    of_bsn_virtual_port_create_reply_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_virtual_port_create_request_t *
    of_bsn_virtual_port_create_request_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_virtual_port_create_request_new(version) \
    of_bsn_virtual_port_create_request_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_virtual_port_create_request_t *
    of_bsn_virtual_port_create_request_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_virtual_port_create_request_new_from_message(msg) \
    of_bsn_virtual_port_create_request_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_virtual_port_remove_reply_t *
    of_bsn_virtual_port_remove_reply_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_virtual_port_remove_reply_new(version) \
    of_bsn_virtual_port_remove_reply_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_virtual_port_remove_reply_t *
    of_bsn_virtual_port_remove_reply_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_virtual_port_remove_reply_new_from_message(msg) \
    of_bsn_virtual_port_remove_reply_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_virtual_port_remove_request_t *
    of_bsn_virtual_port_remove_request_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_virtual_port_remove_request_new(version) \
    of_bsn_virtual_port_remove_request_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_virtual_port_remove_request_t *
    of_bsn_virtual_port_remove_request_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_virtual_port_remove_request_new_from_message(msg) \
    of_bsn_virtual_port_remove_request_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_vlan_counter_stats_reply_t *
    of_bsn_vlan_counter_stats_reply_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_vlan_counter_stats_reply_new(version) \
    of_bsn_vlan_counter_stats_reply_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_vlan_counter_stats_reply_t *
    of_bsn_vlan_counter_stats_reply_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_vlan_counter_stats_reply_new_from_message(msg) \
    of_bsn_vlan_counter_stats_reply_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_bsn_vlan_counter_stats_request_t *
    of_bsn_vlan_counter_stats_request_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_vlan_counter_stats_request_new(version) \
    of_bsn_vlan_counter_stats_request_new_tracking(version, \
        __FILE__, __LINE__)
extern of_bsn_vlan_counter_stats_request_t *
    of_bsn_vlan_counter_stats_request_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_bsn_vlan_counter_stats_request_new_from_message(msg) \
    of_bsn_vlan_counter_stats_request_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_desc_stats_reply_t *
    of_desc_stats_reply_new_tracking(of_version_t version,
        const char *file, int line);
#define of_desc_stats_reply_new(version) \
    of_desc_stats_reply_new_tracking(version, \
        __FILE__, __LINE__)
extern of_desc_stats_reply_t *
    of_desc_stats_reply_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_desc_stats_reply_new_from_message(msg) \
    of_desc_stats_reply_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_desc_stats_request_t *
    of_desc_stats_request_new_tracking(of_version_t version,
        const char *file, int line);
#define of_desc_stats_request_new(version) \
    of_desc_stats_request_new_tracking(version, \
        __FILE__, __LINE__)
extern of_desc_stats_request_t *
    of_desc_stats_request_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_desc_stats_request_new_from_message(msg) \
    of_desc_stats_request_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_echo_reply_t *
    of_echo_reply_new_tracking(of_version_t version,
        const char *file, int line);
#define of_echo_reply_new(version) \
    of_echo_reply_new_tracking(version, \
        __FILE__, __LINE__)
extern of_echo_reply_t *
    of_echo_reply_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_echo_reply_new_from_message(msg) \
    of_echo_reply_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_echo_request_t *
    of_echo_request_new_tracking(of_version_t version,
        const char *file, int line);
#define of_echo_request_new(version) \
    of_echo_request_new_tracking(version, \
        __FILE__, __LINE__)
extern of_echo_request_t *
    of_echo_request_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_echo_request_new_from_message(msg) \
    of_echo_request_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_error_msg_t *
    of_error_msg_new_tracking(of_version_t version,
        const char *file, int line);
#define of_error_msg_new(version) \
    of_error_msg_new_tracking(version, \
        __FILE__, __LINE__)
extern of_error_msg_t *
    of_error_msg_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_error_msg_new_from_message(msg) \
    of_error_msg_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_experimenter_t *
    of_experimenter_new_tracking(of_version_t version,
        const char *file, int line);
#define of_experimenter_new(version) \
    of_experimenter_new_tracking(version, \
        __FILE__, __LINE__)
extern of_experimenter_t *
    of_experimenter_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_experimenter_new_from_message(msg) \
    of_experimenter_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_experimenter_error_msg_t *
    of_experimenter_error_msg_new_tracking(of_version_t version,
        const char *file, int line);
#define of_experimenter_error_msg_new(version) \
    of_experimenter_error_msg_new_tracking(version, \
        __FILE__, __LINE__)
extern of_experimenter_error_msg_t *
    of_experimenter_error_msg_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_experimenter_error_msg_new_from_message(msg) \
    of_experimenter_error_msg_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_experimenter_stats_reply_t *
    of_experimenter_stats_reply_new_tracking(of_version_t version,
        const char *file, int line);
#define of_experimenter_stats_reply_new(version) \
    of_experimenter_stats_reply_new_tracking(version, \
        __FILE__, __LINE__)
extern of_experimenter_stats_reply_t *
    of_experimenter_stats_reply_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_experimenter_stats_reply_new_from_message(msg) \
    of_experimenter_stats_reply_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_experimenter_stats_request_t *
    of_experimenter_stats_request_new_tracking(of_version_t version,
        const char *file, int line);
#define of_experimenter_stats_request_new(version) \
    of_experimenter_stats_request_new_tracking(version, \
        __FILE__, __LINE__)
extern of_experimenter_stats_request_t *
    of_experimenter_stats_request_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_experimenter_stats_request_new_from_message(msg) \
    of_experimenter_stats_request_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_features_reply_t *
    of_features_reply_new_tracking(of_version_t version,
        const char *file, int line);
#define of_features_reply_new(version) \
    of_features_reply_new_tracking(version, \
        __FILE__, __LINE__)
extern of_features_reply_t *
    of_features_reply_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_features_reply_new_from_message(msg) \
    of_features_reply_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_features_request_t *
    of_features_request_new_tracking(of_version_t version,
        const char *file, int line);
#define of_features_request_new(version) \
    of_features_request_new_tracking(version, \
        __FILE__, __LINE__)
extern of_features_request_t *
    of_features_request_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_features_request_new_from_message(msg) \
    of_features_request_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_flow_add_t *
    of_flow_add_new_tracking(of_version_t version,
        const char *file, int line);
#define of_flow_add_new(version) \
    of_flow_add_new_tracking(version, \
        __FILE__, __LINE__)
extern of_flow_add_t *
    of_flow_add_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_flow_add_new_from_message(msg) \
    of_flow_add_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_flow_delete_t *
    of_flow_delete_new_tracking(of_version_t version,
        const char *file, int line);
#define of_flow_delete_new(version) \
    of_flow_delete_new_tracking(version, \
        __FILE__, __LINE__)
extern of_flow_delete_t *
    of_flow_delete_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_flow_delete_new_from_message(msg) \
    of_flow_delete_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_flow_delete_strict_t *
    of_flow_delete_strict_new_tracking(of_version_t version,
        const char *file, int line);
#define of_flow_delete_strict_new(version) \
    of_flow_delete_strict_new_tracking(version, \
        __FILE__, __LINE__)
extern of_flow_delete_strict_t *
    of_flow_delete_strict_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_flow_delete_strict_new_from_message(msg) \
    of_flow_delete_strict_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_flow_mod_t *
    of_flow_mod_new_tracking(of_version_t version,
        const char *file, int line);
#define of_flow_mod_new(version) \
    of_flow_mod_new_tracking(version, \
        __FILE__, __LINE__)
extern of_flow_mod_t *
    of_flow_mod_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_flow_mod_new_from_message(msg) \
    of_flow_mod_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_flow_mod_failed_error_msg_t *
    of_flow_mod_failed_error_msg_new_tracking(of_version_t version,
        const char *file, int line);
#define of_flow_mod_failed_error_msg_new(version) \
    of_flow_mod_failed_error_msg_new_tracking(version, \
        __FILE__, __LINE__)
extern of_flow_mod_failed_error_msg_t *
    of_flow_mod_failed_error_msg_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_flow_mod_failed_error_msg_new_from_message(msg) \
    of_flow_mod_failed_error_msg_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_flow_modify_t *
    of_flow_modify_new_tracking(of_version_t version,
        const char *file, int line);
#define of_flow_modify_new(version) \
    of_flow_modify_new_tracking(version, \
        __FILE__, __LINE__)
extern of_flow_modify_t *
    of_flow_modify_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_flow_modify_new_from_message(msg) \
    of_flow_modify_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_flow_modify_strict_t *
    of_flow_modify_strict_new_tracking(of_version_t version,
        const char *file, int line);
#define of_flow_modify_strict_new(version) \
    of_flow_modify_strict_new_tracking(version, \
        __FILE__, __LINE__)
extern of_flow_modify_strict_t *
    of_flow_modify_strict_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_flow_modify_strict_new_from_message(msg) \
    of_flow_modify_strict_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_flow_removed_t *
    of_flow_removed_new_tracking(of_version_t version,
        const char *file, int line);
#define of_flow_removed_new(version) \
    of_flow_removed_new_tracking(version, \
        __FILE__, __LINE__)
extern of_flow_removed_t *
    of_flow_removed_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_flow_removed_new_from_message(msg) \
    of_flow_removed_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_flow_stats_reply_t *
    of_flow_stats_reply_new_tracking(of_version_t version,
        const char *file, int line);
#define of_flow_stats_reply_new(version) \
    of_flow_stats_reply_new_tracking(version, \
        __FILE__, __LINE__)
extern of_flow_stats_reply_t *
    of_flow_stats_reply_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_flow_stats_reply_new_from_message(msg) \
    of_flow_stats_reply_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_flow_stats_request_t *
    of_flow_stats_request_new_tracking(of_version_t version,
        const char *file, int line);
#define of_flow_stats_request_new(version) \
    of_flow_stats_request_new_tracking(version, \
        __FILE__, __LINE__)
extern of_flow_stats_request_t *
    of_flow_stats_request_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_flow_stats_request_new_from_message(msg) \
    of_flow_stats_request_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_get_config_reply_t *
    of_get_config_reply_new_tracking(of_version_t version,
        const char *file, int line);
#define of_get_config_reply_new(version) \
    of_get_config_reply_new_tracking(version, \
        __FILE__, __LINE__)
extern of_get_config_reply_t *
    of_get_config_reply_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_get_config_reply_new_from_message(msg) \
    of_get_config_reply_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_get_config_request_t *
    of_get_config_request_new_tracking(of_version_t version,
        const char *file, int line);
#define of_get_config_request_new(version) \
    of_get_config_request_new_tracking(version, \
        __FILE__, __LINE__)
extern of_get_config_request_t *
    of_get_config_request_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_get_config_request_new_from_message(msg) \
    of_get_config_request_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_group_add_t *
    of_group_add_new_tracking(of_version_t version,
        const char *file, int line);
#define of_group_add_new(version) \
    of_group_add_new_tracking(version, \
        __FILE__, __LINE__)
extern of_group_add_t *
    of_group_add_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_group_add_new_from_message(msg) \
    of_group_add_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_group_delete_t *
    of_group_delete_new_tracking(of_version_t version,
        const char *file, int line);
#define of_group_delete_new(version) \
    of_group_delete_new_tracking(version, \
        __FILE__, __LINE__)
extern of_group_delete_t *
    of_group_delete_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_group_delete_new_from_message(msg) \
    of_group_delete_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_group_desc_stats_reply_t *
    of_group_desc_stats_reply_new_tracking(of_version_t version,
        const char *file, int line);
#define of_group_desc_stats_reply_new(version) \
    of_group_desc_stats_reply_new_tracking(version, \
        __FILE__, __LINE__)
extern of_group_desc_stats_reply_t *
    of_group_desc_stats_reply_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_group_desc_stats_reply_new_from_message(msg) \
    of_group_desc_stats_reply_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_group_desc_stats_request_t *
    of_group_desc_stats_request_new_tracking(of_version_t version,
        const char *file, int line);
#define of_group_desc_stats_request_new(version) \
    of_group_desc_stats_request_new_tracking(version, \
        __FILE__, __LINE__)
extern of_group_desc_stats_request_t *
    of_group_desc_stats_request_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_group_desc_stats_request_new_from_message(msg) \
    of_group_desc_stats_request_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_group_features_stats_reply_t *
    of_group_features_stats_reply_new_tracking(of_version_t version,
        const char *file, int line);
#define of_group_features_stats_reply_new(version) \
    of_group_features_stats_reply_new_tracking(version, \
        __FILE__, __LINE__)
extern of_group_features_stats_reply_t *
    of_group_features_stats_reply_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_group_features_stats_reply_new_from_message(msg) \
    of_group_features_stats_reply_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_group_features_stats_request_t *
    of_group_features_stats_request_new_tracking(of_version_t version,
        const char *file, int line);
#define of_group_features_stats_request_new(version) \
    of_group_features_stats_request_new_tracking(version, \
        __FILE__, __LINE__)
extern of_group_features_stats_request_t *
    of_group_features_stats_request_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_group_features_stats_request_new_from_message(msg) \
    of_group_features_stats_request_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_group_mod_t *
    of_group_mod_new_tracking(of_version_t version,
        const char *file, int line);
#define of_group_mod_new(version) \
    of_group_mod_new_tracking(version, \
        __FILE__, __LINE__)
extern of_group_mod_t *
    of_group_mod_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_group_mod_new_from_message(msg) \
    of_group_mod_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_group_mod_failed_error_msg_t *
    of_group_mod_failed_error_msg_new_tracking(of_version_t version,
        const char *file, int line);
#define of_group_mod_failed_error_msg_new(version) \
    of_group_mod_failed_error_msg_new_tracking(version, \
        __FILE__, __LINE__)
extern of_group_mod_failed_error_msg_t *
    of_group_mod_failed_error_msg_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_group_mod_failed_error_msg_new_from_message(msg) \
    of_group_mod_failed_error_msg_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_group_modify_t *
    of_group_modify_new_tracking(of_version_t version,
        const char *file, int line);
#define of_group_modify_new(version) \
    of_group_modify_new_tracking(version, \
        __FILE__, __LINE__)
extern of_group_modify_t *
    of_group_modify_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_group_modify_new_from_message(msg) \
    of_group_modify_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_group_stats_reply_t *
    of_group_stats_reply_new_tracking(of_version_t version,
        const char *file, int line);
#define of_group_stats_reply_new(version) \
    of_group_stats_reply_new_tracking(version, \
        __FILE__, __LINE__)
extern of_group_stats_reply_t *
    of_group_stats_reply_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_group_stats_reply_new_from_message(msg) \
    of_group_stats_reply_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_group_stats_request_t *
    of_group_stats_request_new_tracking(of_version_t version,
        const char *file, int line);
#define of_group_stats_request_new(version) \
    of_group_stats_request_new_tracking(version, \
        __FILE__, __LINE__)
extern of_group_stats_request_t *
    of_group_stats_request_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_group_stats_request_new_from_message(msg) \
    of_group_stats_request_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_hello_t *
    of_hello_new_tracking(of_version_t version,
        const char *file, int line);
#define of_hello_new(version) \
    of_hello_new_tracking(version, \
        __FILE__, __LINE__)
extern of_hello_t *
    of_hello_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_hello_new_from_message(msg) \
    of_hello_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_hello_failed_error_msg_t *
    of_hello_failed_error_msg_new_tracking(of_version_t version,
        const char *file, int line);
#define of_hello_failed_error_msg_new(version) \
    of_hello_failed_error_msg_new_tracking(version, \
        __FILE__, __LINE__)
extern of_hello_failed_error_msg_t *
    of_hello_failed_error_msg_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_hello_failed_error_msg_new_from_message(msg) \
    of_hello_failed_error_msg_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_meter_config_stats_reply_t *
    of_meter_config_stats_reply_new_tracking(of_version_t version,
        const char *file, int line);
#define of_meter_config_stats_reply_new(version) \
    of_meter_config_stats_reply_new_tracking(version, \
        __FILE__, __LINE__)
extern of_meter_config_stats_reply_t *
    of_meter_config_stats_reply_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_meter_config_stats_reply_new_from_message(msg) \
    of_meter_config_stats_reply_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_meter_config_stats_request_t *
    of_meter_config_stats_request_new_tracking(of_version_t version,
        const char *file, int line);
#define of_meter_config_stats_request_new(version) \
    of_meter_config_stats_request_new_tracking(version, \
        __FILE__, __LINE__)
extern of_meter_config_stats_request_t *
    of_meter_config_stats_request_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_meter_config_stats_request_new_from_message(msg) \
    of_meter_config_stats_request_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_meter_features_stats_reply_t *
    of_meter_features_stats_reply_new_tracking(of_version_t version,
        const char *file, int line);
#define of_meter_features_stats_reply_new(version) \
    of_meter_features_stats_reply_new_tracking(version, \
        __FILE__, __LINE__)
extern of_meter_features_stats_reply_t *
    of_meter_features_stats_reply_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_meter_features_stats_reply_new_from_message(msg) \
    of_meter_features_stats_reply_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_meter_features_stats_request_t *
    of_meter_features_stats_request_new_tracking(of_version_t version,
        const char *file, int line);
#define of_meter_features_stats_request_new(version) \
    of_meter_features_stats_request_new_tracking(version, \
        __FILE__, __LINE__)
extern of_meter_features_stats_request_t *
    of_meter_features_stats_request_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_meter_features_stats_request_new_from_message(msg) \
    of_meter_features_stats_request_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_meter_mod_t *
    of_meter_mod_new_tracking(of_version_t version,
        const char *file, int line);
#define of_meter_mod_new(version) \
    of_meter_mod_new_tracking(version, \
        __FILE__, __LINE__)
extern of_meter_mod_t *
    of_meter_mod_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_meter_mod_new_from_message(msg) \
    of_meter_mod_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_meter_mod_failed_error_msg_t *
    of_meter_mod_failed_error_msg_new_tracking(of_version_t version,
        const char *file, int line);
#define of_meter_mod_failed_error_msg_new(version) \
    of_meter_mod_failed_error_msg_new_tracking(version, \
        __FILE__, __LINE__)
extern of_meter_mod_failed_error_msg_t *
    of_meter_mod_failed_error_msg_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_meter_mod_failed_error_msg_new_from_message(msg) \
    of_meter_mod_failed_error_msg_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_meter_stats_reply_t *
    of_meter_stats_reply_new_tracking(of_version_t version,
        const char *file, int line);
#define of_meter_stats_reply_new(version) \
    of_meter_stats_reply_new_tracking(version, \
        __FILE__, __LINE__)
extern of_meter_stats_reply_t *
    of_meter_stats_reply_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_meter_stats_reply_new_from_message(msg) \
    of_meter_stats_reply_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_meter_stats_request_t *
    of_meter_stats_request_new_tracking(of_version_t version,
        const char *file, int line);
#define of_meter_stats_request_new(version) \
    of_meter_stats_request_new_tracking(version, \
        __FILE__, __LINE__)
extern of_meter_stats_request_t *
    of_meter_stats_request_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_meter_stats_request_new_from_message(msg) \
    of_meter_stats_request_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_nicira_controller_role_reply_t *
    of_nicira_controller_role_reply_new_tracking(of_version_t version,
        const char *file, int line);
#define of_nicira_controller_role_reply_new(version) \
    of_nicira_controller_role_reply_new_tracking(version, \
        __FILE__, __LINE__)
extern of_nicira_controller_role_reply_t *
    of_nicira_controller_role_reply_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_nicira_controller_role_reply_new_from_message(msg) \
    of_nicira_controller_role_reply_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_nicira_controller_role_request_t *
    of_nicira_controller_role_request_new_tracking(of_version_t version,
        const char *file, int line);
#define of_nicira_controller_role_request_new(version) \
    of_nicira_controller_role_request_new_tracking(version, \
        __FILE__, __LINE__)
extern of_nicira_controller_role_request_t *
    of_nicira_controller_role_request_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_nicira_controller_role_request_new_from_message(msg) \
    of_nicira_controller_role_request_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_nicira_header_t *
    of_nicira_header_new_tracking(of_version_t version,
        const char *file, int line);
#define of_nicira_header_new(version) \
    of_nicira_header_new_tracking(version, \
        __FILE__, __LINE__)
extern of_nicira_header_t *
    of_nicira_header_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_nicira_header_new_from_message(msg) \
    of_nicira_header_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_packet_in_t *
    of_packet_in_new_tracking(of_version_t version,
        const char *file, int line);
#define of_packet_in_new(version) \
    of_packet_in_new_tracking(version, \
        __FILE__, __LINE__)
extern of_packet_in_t *
    of_packet_in_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_packet_in_new_from_message(msg) \
    of_packet_in_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_packet_out_t *
    of_packet_out_new_tracking(of_version_t version,
        const char *file, int line);
#define of_packet_out_new(version) \
    of_packet_out_new_tracking(version, \
        __FILE__, __LINE__)
extern of_packet_out_t *
    of_packet_out_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_packet_out_new_from_message(msg) \
    of_packet_out_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_port_desc_stats_reply_t *
    of_port_desc_stats_reply_new_tracking(of_version_t version,
        const char *file, int line);
#define of_port_desc_stats_reply_new(version) \
    of_port_desc_stats_reply_new_tracking(version, \
        __FILE__, __LINE__)
extern of_port_desc_stats_reply_t *
    of_port_desc_stats_reply_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_port_desc_stats_reply_new_from_message(msg) \
    of_port_desc_stats_reply_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_port_desc_stats_request_t *
    of_port_desc_stats_request_new_tracking(of_version_t version,
        const char *file, int line);
#define of_port_desc_stats_request_new(version) \
    of_port_desc_stats_request_new_tracking(version, \
        __FILE__, __LINE__)
extern of_port_desc_stats_request_t *
    of_port_desc_stats_request_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_port_desc_stats_request_new_from_message(msg) \
    of_port_desc_stats_request_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_port_mod_t *
    of_port_mod_new_tracking(of_version_t version,
        const char *file, int line);
#define of_port_mod_new(version) \
    of_port_mod_new_tracking(version, \
        __FILE__, __LINE__)
extern of_port_mod_t *
    of_port_mod_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_port_mod_new_from_message(msg) \
    of_port_mod_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_port_mod_failed_error_msg_t *
    of_port_mod_failed_error_msg_new_tracking(of_version_t version,
        const char *file, int line);
#define of_port_mod_failed_error_msg_new(version) \
    of_port_mod_failed_error_msg_new_tracking(version, \
        __FILE__, __LINE__)
extern of_port_mod_failed_error_msg_t *
    of_port_mod_failed_error_msg_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_port_mod_failed_error_msg_new_from_message(msg) \
    of_port_mod_failed_error_msg_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_port_stats_reply_t *
    of_port_stats_reply_new_tracking(of_version_t version,
        const char *file, int line);
#define of_port_stats_reply_new(version) \
    of_port_stats_reply_new_tracking(version, \
        __FILE__, __LINE__)
extern of_port_stats_reply_t *
    of_port_stats_reply_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_port_stats_reply_new_from_message(msg) \
    of_port_stats_reply_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_port_stats_request_t *
    of_port_stats_request_new_tracking(of_version_t version,
        const char *file, int line);
#define of_port_stats_request_new(version) \
    of_port_stats_request_new_tracking(version, \
        __FILE__, __LINE__)
extern of_port_stats_request_t *
    of_port_stats_request_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_port_stats_request_new_from_message(msg) \
    of_port_stats_request_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_port_status_t *
    of_port_status_new_tracking(of_version_t version,
        const char *file, int line);
#define of_port_status_new(version) \
    of_port_status_new_tracking(version, \
        __FILE__, __LINE__)
extern of_port_status_t *
    of_port_status_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_port_status_new_from_message(msg) \
    of_port_status_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_queue_get_config_reply_t *
    of_queue_get_config_reply_new_tracking(of_version_t version,
        const char *file, int line);
#define of_queue_get_config_reply_new(version) \
    of_queue_get_config_reply_new_tracking(version, \
        __FILE__, __LINE__)
extern of_queue_get_config_reply_t *
    of_queue_get_config_reply_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_queue_get_config_reply_new_from_message(msg) \
    of_queue_get_config_reply_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_queue_get_config_request_t *
    of_queue_get_config_request_new_tracking(of_version_t version,
        const char *file, int line);
#define of_queue_get_config_request_new(version) \
    of_queue_get_config_request_new_tracking(version, \
        __FILE__, __LINE__)
extern of_queue_get_config_request_t *
    of_queue_get_config_request_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_queue_get_config_request_new_from_message(msg) \
    of_queue_get_config_request_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_queue_op_failed_error_msg_t *
    of_queue_op_failed_error_msg_new_tracking(of_version_t version,
        const char *file, int line);
#define of_queue_op_failed_error_msg_new(version) \
    of_queue_op_failed_error_msg_new_tracking(version, \
        __FILE__, __LINE__)
extern of_queue_op_failed_error_msg_t *
    of_queue_op_failed_error_msg_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_queue_op_failed_error_msg_new_from_message(msg) \
    of_queue_op_failed_error_msg_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_queue_stats_reply_t *
    of_queue_stats_reply_new_tracking(of_version_t version,
        const char *file, int line);
#define of_queue_stats_reply_new(version) \
    of_queue_stats_reply_new_tracking(version, \
        __FILE__, __LINE__)
extern of_queue_stats_reply_t *
    of_queue_stats_reply_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_queue_stats_reply_new_from_message(msg) \
    of_queue_stats_reply_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_queue_stats_request_t *
    of_queue_stats_request_new_tracking(of_version_t version,
        const char *file, int line);
#define of_queue_stats_request_new(version) \
    of_queue_stats_request_new_tracking(version, \
        __FILE__, __LINE__)
extern of_queue_stats_request_t *
    of_queue_stats_request_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_queue_stats_request_new_from_message(msg) \
    of_queue_stats_request_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_role_reply_t *
    of_role_reply_new_tracking(of_version_t version,
        const char *file, int line);
#define of_role_reply_new(version) \
    of_role_reply_new_tracking(version, \
        __FILE__, __LINE__)
extern of_role_reply_t *
    of_role_reply_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_role_reply_new_from_message(msg) \
    of_role_reply_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_role_request_t *
    of_role_request_new_tracking(of_version_t version,
        const char *file, int line);
#define of_role_request_new(version) \
    of_role_request_new_tracking(version, \
        __FILE__, __LINE__)
extern of_role_request_t *
    of_role_request_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_role_request_new_from_message(msg) \
    of_role_request_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_role_request_failed_error_msg_t *
    of_role_request_failed_error_msg_new_tracking(of_version_t version,
        const char *file, int line);
#define of_role_request_failed_error_msg_new(version) \
    of_role_request_failed_error_msg_new_tracking(version, \
        __FILE__, __LINE__)
extern of_role_request_failed_error_msg_t *
    of_role_request_failed_error_msg_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_role_request_failed_error_msg_new_from_message(msg) \
    of_role_request_failed_error_msg_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_set_config_t *
    of_set_config_new_tracking(of_version_t version,
        const char *file, int line);
#define of_set_config_new(version) \
    of_set_config_new_tracking(version, \
        __FILE__, __LINE__)
extern of_set_config_t *
    of_set_config_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_set_config_new_from_message(msg) \
    of_set_config_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_stats_reply_t *
    of_stats_reply_new_tracking(of_version_t version,
        const char *file, int line);
#define of_stats_reply_new(version) \
    of_stats_reply_new_tracking(version, \
        __FILE__, __LINE__)
extern of_stats_reply_t *
    of_stats_reply_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_stats_reply_new_from_message(msg) \
    of_stats_reply_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_stats_request_t *
    of_stats_request_new_tracking(of_version_t version,
        const char *file, int line);
#define of_stats_request_new(version) \
    of_stats_request_new_tracking(version, \
        __FILE__, __LINE__)
extern of_stats_request_t *
    of_stats_request_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_stats_request_new_from_message(msg) \
    of_stats_request_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_switch_config_failed_error_msg_t *
    of_switch_config_failed_error_msg_new_tracking(of_version_t version,
        const char *file, int line);
#define of_switch_config_failed_error_msg_new(version) \
    of_switch_config_failed_error_msg_new_tracking(version, \
        __FILE__, __LINE__)
extern of_switch_config_failed_error_msg_t *
    of_switch_config_failed_error_msg_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_switch_config_failed_error_msg_new_from_message(msg) \
    of_switch_config_failed_error_msg_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_table_features_failed_error_msg_t *
    of_table_features_failed_error_msg_new_tracking(of_version_t version,
        const char *file, int line);
#define of_table_features_failed_error_msg_new(version) \
    of_table_features_failed_error_msg_new_tracking(version, \
        __FILE__, __LINE__)
extern of_table_features_failed_error_msg_t *
    of_table_features_failed_error_msg_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_table_features_failed_error_msg_new_from_message(msg) \
    of_table_features_failed_error_msg_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_table_features_stats_reply_t *
    of_table_features_stats_reply_new_tracking(of_version_t version,
        const char *file, int line);
#define of_table_features_stats_reply_new(version) \
    of_table_features_stats_reply_new_tracking(version, \
        __FILE__, __LINE__)
extern of_table_features_stats_reply_t *
    of_table_features_stats_reply_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_table_features_stats_reply_new_from_message(msg) \
    of_table_features_stats_reply_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_table_features_stats_request_t *
    of_table_features_stats_request_new_tracking(of_version_t version,
        const char *file, int line);
#define of_table_features_stats_request_new(version) \
    of_table_features_stats_request_new_tracking(version, \
        __FILE__, __LINE__)
extern of_table_features_stats_request_t *
    of_table_features_stats_request_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_table_features_stats_request_new_from_message(msg) \
    of_table_features_stats_request_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_table_mod_t *
    of_table_mod_new_tracking(of_version_t version,
        const char *file, int line);
#define of_table_mod_new(version) \
    of_table_mod_new_tracking(version, \
        __FILE__, __LINE__)
extern of_table_mod_t *
    of_table_mod_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_table_mod_new_from_message(msg) \
    of_table_mod_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_table_mod_failed_error_msg_t *
    of_table_mod_failed_error_msg_new_tracking(of_version_t version,
        const char *file, int line);
#define of_table_mod_failed_error_msg_new(version) \
    of_table_mod_failed_error_msg_new_tracking(version, \
        __FILE__, __LINE__)
extern of_table_mod_failed_error_msg_t *
    of_table_mod_failed_error_msg_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_table_mod_failed_error_msg_new_from_message(msg) \
    of_table_mod_failed_error_msg_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_table_stats_reply_t *
    of_table_stats_reply_new_tracking(of_version_t version,
        const char *file, int line);
#define of_table_stats_reply_new(version) \
    of_table_stats_reply_new_tracking(version, \
        __FILE__, __LINE__)
extern of_table_stats_reply_t *
    of_table_stats_reply_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_table_stats_reply_new_from_message(msg) \
    of_table_stats_reply_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_table_stats_request_t *
    of_table_stats_request_new_tracking(of_version_t version,
        const char *file, int line);
#define of_table_stats_request_new(version) \
    of_table_stats_request_new_tracking(version, \
        __FILE__, __LINE__)
extern of_table_stats_request_t *
    of_table_stats_request_new_from_message_tracking(of_message_t msg,
        const char *file, int line);
#define of_table_stats_request_new_from_message(msg) \
    of_table_stats_request_new_from_message_tracking(msg, \
        __FILE__, __LINE__)

extern of_action_t *
    of_action_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_new(version) \
    of_action_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_bsn_t *
    of_action_bsn_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_bsn_new(version) \
    of_action_bsn_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_bsn_mirror_t *
    of_action_bsn_mirror_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_bsn_mirror_new(version) \
    of_action_bsn_mirror_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_bsn_set_tunnel_dst_t *
    of_action_bsn_set_tunnel_dst_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_bsn_set_tunnel_dst_new(version) \
    of_action_bsn_set_tunnel_dst_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_copy_ttl_in_t *
    of_action_copy_ttl_in_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_copy_ttl_in_new(version) \
    of_action_copy_ttl_in_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_copy_ttl_out_t *
    of_action_copy_ttl_out_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_copy_ttl_out_new(version) \
    of_action_copy_ttl_out_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_dec_mpls_ttl_t *
    of_action_dec_mpls_ttl_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_dec_mpls_ttl_new(version) \
    of_action_dec_mpls_ttl_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_dec_nw_ttl_t *
    of_action_dec_nw_ttl_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_dec_nw_ttl_new(version) \
    of_action_dec_nw_ttl_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_enqueue_t *
    of_action_enqueue_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_enqueue_new(version) \
    of_action_enqueue_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_experimenter_t *
    of_action_experimenter_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_experimenter_new(version) \
    of_action_experimenter_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_group_t *
    of_action_group_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_group_new(version) \
    of_action_group_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_header_t *
    of_action_header_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_header_new(version) \
    of_action_header_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_id_t *
    of_action_id_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_id_new(version) \
    of_action_id_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_id_bsn_t *
    of_action_id_bsn_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_id_bsn_new(version) \
    of_action_id_bsn_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_id_bsn_mirror_t *
    of_action_id_bsn_mirror_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_id_bsn_mirror_new(version) \
    of_action_id_bsn_mirror_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_id_bsn_set_tunnel_dst_t *
    of_action_id_bsn_set_tunnel_dst_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_id_bsn_set_tunnel_dst_new(version) \
    of_action_id_bsn_set_tunnel_dst_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_id_copy_ttl_in_t *
    of_action_id_copy_ttl_in_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_id_copy_ttl_in_new(version) \
    of_action_id_copy_ttl_in_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_id_copy_ttl_out_t *
    of_action_id_copy_ttl_out_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_id_copy_ttl_out_new(version) \
    of_action_id_copy_ttl_out_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_id_dec_mpls_ttl_t *
    of_action_id_dec_mpls_ttl_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_id_dec_mpls_ttl_new(version) \
    of_action_id_dec_mpls_ttl_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_id_dec_nw_ttl_t *
    of_action_id_dec_nw_ttl_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_id_dec_nw_ttl_new(version) \
    of_action_id_dec_nw_ttl_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_id_experimenter_t *
    of_action_id_experimenter_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_id_experimenter_new(version) \
    of_action_id_experimenter_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_id_group_t *
    of_action_id_group_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_id_group_new(version) \
    of_action_id_group_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_id_header_t *
    of_action_id_header_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_id_header_new(version) \
    of_action_id_header_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_id_nicira_t *
    of_action_id_nicira_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_id_nicira_new(version) \
    of_action_id_nicira_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_id_nicira_dec_ttl_t *
    of_action_id_nicira_dec_ttl_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_id_nicira_dec_ttl_new(version) \
    of_action_id_nicira_dec_ttl_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_id_output_t *
    of_action_id_output_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_id_output_new(version) \
    of_action_id_output_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_id_pop_mpls_t *
    of_action_id_pop_mpls_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_id_pop_mpls_new(version) \
    of_action_id_pop_mpls_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_id_pop_pbb_t *
    of_action_id_pop_pbb_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_id_pop_pbb_new(version) \
    of_action_id_pop_pbb_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_id_pop_vlan_t *
    of_action_id_pop_vlan_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_id_pop_vlan_new(version) \
    of_action_id_pop_vlan_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_id_push_mpls_t *
    of_action_id_push_mpls_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_id_push_mpls_new(version) \
    of_action_id_push_mpls_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_id_push_pbb_t *
    of_action_id_push_pbb_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_id_push_pbb_new(version) \
    of_action_id_push_pbb_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_id_push_vlan_t *
    of_action_id_push_vlan_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_id_push_vlan_new(version) \
    of_action_id_push_vlan_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_id_set_field_t *
    of_action_id_set_field_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_id_set_field_new(version) \
    of_action_id_set_field_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_id_set_mpls_ttl_t *
    of_action_id_set_mpls_ttl_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_id_set_mpls_ttl_new(version) \
    of_action_id_set_mpls_ttl_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_id_set_nw_ttl_t *
    of_action_id_set_nw_ttl_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_id_set_nw_ttl_new(version) \
    of_action_id_set_nw_ttl_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_id_set_queue_t *
    of_action_id_set_queue_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_id_set_queue_new(version) \
    of_action_id_set_queue_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_nicira_t *
    of_action_nicira_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_nicira_new(version) \
    of_action_nicira_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_nicira_dec_ttl_t *
    of_action_nicira_dec_ttl_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_nicira_dec_ttl_new(version) \
    of_action_nicira_dec_ttl_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_output_t *
    of_action_output_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_output_new(version) \
    of_action_output_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_pop_mpls_t *
    of_action_pop_mpls_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_pop_mpls_new(version) \
    of_action_pop_mpls_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_pop_pbb_t *
    of_action_pop_pbb_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_pop_pbb_new(version) \
    of_action_pop_pbb_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_pop_vlan_t *
    of_action_pop_vlan_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_pop_vlan_new(version) \
    of_action_pop_vlan_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_push_mpls_t *
    of_action_push_mpls_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_push_mpls_new(version) \
    of_action_push_mpls_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_push_pbb_t *
    of_action_push_pbb_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_push_pbb_new(version) \
    of_action_push_pbb_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_push_vlan_t *
    of_action_push_vlan_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_push_vlan_new(version) \
    of_action_push_vlan_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_set_dl_dst_t *
    of_action_set_dl_dst_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_set_dl_dst_new(version) \
    of_action_set_dl_dst_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_set_dl_src_t *
    of_action_set_dl_src_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_set_dl_src_new(version) \
    of_action_set_dl_src_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_set_field_t *
    of_action_set_field_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_set_field_new(version) \
    of_action_set_field_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_set_mpls_label_t *
    of_action_set_mpls_label_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_set_mpls_label_new(version) \
    of_action_set_mpls_label_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_set_mpls_tc_t *
    of_action_set_mpls_tc_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_set_mpls_tc_new(version) \
    of_action_set_mpls_tc_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_set_mpls_ttl_t *
    of_action_set_mpls_ttl_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_set_mpls_ttl_new(version) \
    of_action_set_mpls_ttl_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_set_nw_dst_t *
    of_action_set_nw_dst_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_set_nw_dst_new(version) \
    of_action_set_nw_dst_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_set_nw_ecn_t *
    of_action_set_nw_ecn_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_set_nw_ecn_new(version) \
    of_action_set_nw_ecn_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_set_nw_src_t *
    of_action_set_nw_src_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_set_nw_src_new(version) \
    of_action_set_nw_src_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_set_nw_tos_t *
    of_action_set_nw_tos_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_set_nw_tos_new(version) \
    of_action_set_nw_tos_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_set_nw_ttl_t *
    of_action_set_nw_ttl_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_set_nw_ttl_new(version) \
    of_action_set_nw_ttl_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_set_queue_t *
    of_action_set_queue_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_set_queue_new(version) \
    of_action_set_queue_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_set_tp_dst_t *
    of_action_set_tp_dst_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_set_tp_dst_new(version) \
    of_action_set_tp_dst_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_set_tp_src_t *
    of_action_set_tp_src_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_set_tp_src_new(version) \
    of_action_set_tp_src_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_set_vlan_pcp_t *
    of_action_set_vlan_pcp_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_set_vlan_pcp_new(version) \
    of_action_set_vlan_pcp_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_set_vlan_vid_t *
    of_action_set_vlan_vid_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_set_vlan_vid_new(version) \
    of_action_set_vlan_vid_new_tracking(version, \
        __FILE__, __LINE__)

extern of_action_strip_vlan_t *
    of_action_strip_vlan_new_tracking(of_version_t version,
        const char *file, int line);
#define of_action_strip_vlan_new(version) \
    of_action_strip_vlan_new_tracking(version, \
        __FILE__, __LINE__)

extern of_bsn_interface_t *
    of_bsn_interface_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_interface_new(version) \
    of_bsn_interface_new_tracking(version, \
        __FILE__, __LINE__)

extern of_bsn_lacp_stats_entry_t *
    of_bsn_lacp_stats_entry_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_lacp_stats_entry_new(version) \
    of_bsn_lacp_stats_entry_new_tracking(version, \
        __FILE__, __LINE__)

extern of_bsn_port_counter_stats_entry_t *
    of_bsn_port_counter_stats_entry_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_port_counter_stats_entry_new(version) \
    of_bsn_port_counter_stats_entry_new_tracking(version, \
        __FILE__, __LINE__)

extern of_bsn_switch_pipeline_stats_entry_t *
    of_bsn_switch_pipeline_stats_entry_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_switch_pipeline_stats_entry_new(version) \
    of_bsn_switch_pipeline_stats_entry_new_tracking(version, \
        __FILE__, __LINE__)

extern of_bsn_vlan_counter_stats_entry_t *
    of_bsn_vlan_counter_stats_entry_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_vlan_counter_stats_entry_new(version) \
    of_bsn_vlan_counter_stats_entry_new_tracking(version, \
        __FILE__, __LINE__)

extern of_bsn_vport_t *
    of_bsn_vport_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_vport_new(version) \
    of_bsn_vport_new_tracking(version, \
        __FILE__, __LINE__)

extern of_bsn_vport_header_t *
    of_bsn_vport_header_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_vport_header_new(version) \
    of_bsn_vport_header_new_tracking(version, \
        __FILE__, __LINE__)

extern of_bsn_vport_q_in_q_t *
    of_bsn_vport_q_in_q_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bsn_vport_q_in_q_new(version) \
    of_bsn_vport_q_in_q_new_tracking(version, \
        __FILE__, __LINE__)

extern of_bucket_t *
    of_bucket_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bucket_new(version) \
    of_bucket_new_tracking(version, \
        __FILE__, __LINE__)

extern of_bucket_counter_t *
    of_bucket_counter_new_tracking(of_version_t version,
        const char *file, int line);
#define of_bucket_counter_new(version) \
    of_bucket_counter_new_tracking(version, \
        __FILE__, __LINE__)

extern of_experimenter_stats_header_t *
    of_experimenter_stats_header_new_tracking(of_version_t version,
        const char *file, int line);
#define of_experimenter_stats_header_new(version) \
    of_experimenter_stats_header_new_tracking(version, \
        __FILE__, __LINE__)

extern of_flow_stats_entry_t *
    of_flow_stats_entry_new_tracking(of_version_t version,
        const char *file, int line);
#define of_flow_stats_entry_new(version) \
    of_flow_stats_entry_new_tracking(version, \
        __FILE__, __LINE__)

extern of_group_desc_stats_entry_t *
    of_group_desc_stats_entry_new_tracking(of_version_t version,
        const char *file, int line);
#define of_group_desc_stats_entry_new(version) \
    of_group_desc_stats_entry_new_tracking(version, \
        __FILE__, __LINE__)

extern of_group_stats_entry_t *
    of_group_stats_entry_new_tracking(of_version_t version,
        const char *file, int line);
#define of_group_stats_entry_new(version) \
    of_group_stats_entry_new_tracking(version, \
        __FILE__, __LINE__)

extern of_header_t *
    of_header_new_tracking(of_version_t version,
        const char *file, int line);
#define of_header_new(version) \
    of_header_new_tracking(version, \
        __FILE__, __LINE__)

extern of_hello_elem_t *
    of_hello_elem_new_tracking(of_version_t version,
        const char *file, int line);
#define of_hello_elem_new(version) \
    of_hello_elem_new_tracking(version, \
        __FILE__, __LINE__)

extern of_hello_elem_header_t *
    of_hello_elem_header_new_tracking(of_version_t version,
        const char *file, int line);
#define of_hello_elem_header_new(version) \
    of_hello_elem_header_new_tracking(version, \
        __FILE__, __LINE__)

extern of_hello_elem_versionbitmap_t *
    of_hello_elem_versionbitmap_new_tracking(of_version_t version,
        const char *file, int line);
#define of_hello_elem_versionbitmap_new(version) \
    of_hello_elem_versionbitmap_new_tracking(version, \
        __FILE__, __LINE__)

extern of_instruction_t *
    of_instruction_new_tracking(of_version_t version,
        const char *file, int line);
#define of_instruction_new(version) \
    of_instruction_new_tracking(version, \
        __FILE__, __LINE__)

extern of_instruction_apply_actions_t *
    of_instruction_apply_actions_new_tracking(of_version_t version,
        const char *file, int line);
#define of_instruction_apply_actions_new(version) \
    of_instruction_apply_actions_new_tracking(version, \
        __FILE__, __LINE__)

extern of_instruction_bsn_t *
    of_instruction_bsn_new_tracking(of_version_t version,
        const char *file, int line);
#define of_instruction_bsn_new(version) \
    of_instruction_bsn_new_tracking(version, \
        __FILE__, __LINE__)

extern of_instruction_bsn_disable_src_mac_check_t *
    of_instruction_bsn_disable_src_mac_check_new_tracking(of_version_t version,
        const char *file, int line);
#define of_instruction_bsn_disable_src_mac_check_new(version) \
    of_instruction_bsn_disable_src_mac_check_new_tracking(version, \
        __FILE__, __LINE__)

extern of_instruction_clear_actions_t *
    of_instruction_clear_actions_new_tracking(of_version_t version,
        const char *file, int line);
#define of_instruction_clear_actions_new(version) \
    of_instruction_clear_actions_new_tracking(version, \
        __FILE__, __LINE__)

extern of_instruction_experimenter_t *
    of_instruction_experimenter_new_tracking(of_version_t version,
        const char *file, int line);
#define of_instruction_experimenter_new(version) \
    of_instruction_experimenter_new_tracking(version, \
        __FILE__, __LINE__)

extern of_instruction_goto_table_t *
    of_instruction_goto_table_new_tracking(of_version_t version,
        const char *file, int line);
#define of_instruction_goto_table_new(version) \
    of_instruction_goto_table_new_tracking(version, \
        __FILE__, __LINE__)

extern of_instruction_header_t *
    of_instruction_header_new_tracking(of_version_t version,
        const char *file, int line);
#define of_instruction_header_new(version) \
    of_instruction_header_new_tracking(version, \
        __FILE__, __LINE__)

extern of_instruction_id_t *
    of_instruction_id_new_tracking(of_version_t version,
        const char *file, int line);
#define of_instruction_id_new(version) \
    of_instruction_id_new_tracking(version, \
        __FILE__, __LINE__)

extern of_instruction_id_apply_actions_t *
    of_instruction_id_apply_actions_new_tracking(of_version_t version,
        const char *file, int line);
#define of_instruction_id_apply_actions_new(version) \
    of_instruction_id_apply_actions_new_tracking(version, \
        __FILE__, __LINE__)

extern of_instruction_id_bsn_t *
    of_instruction_id_bsn_new_tracking(of_version_t version,
        const char *file, int line);
#define of_instruction_id_bsn_new(version) \
    of_instruction_id_bsn_new_tracking(version, \
        __FILE__, __LINE__)

extern of_instruction_id_bsn_disable_src_mac_check_t *
    of_instruction_id_bsn_disable_src_mac_check_new_tracking(of_version_t version,
        const char *file, int line);
#define of_instruction_id_bsn_disable_src_mac_check_new(version) \
    of_instruction_id_bsn_disable_src_mac_check_new_tracking(version, \
        __FILE__, __LINE__)

extern of_instruction_id_clear_actions_t *
    of_instruction_id_clear_actions_new_tracking(of_version_t version,
        const char *file, int line);
#define of_instruction_id_clear_actions_new(version) \
    of_instruction_id_clear_actions_new_tracking(version, \
        __FILE__, __LINE__)

extern of_instruction_id_experimenter_t *
    of_instruction_id_experimenter_new_tracking(of_version_t version,
        const char *file, int line);
#define of_instruction_id_experimenter_new(version) \
    of_instruction_id_experimenter_new_tracking(version, \
        __FILE__, __LINE__)

extern of_instruction_id_goto_table_t *
    of_instruction_id_goto_table_new_tracking(of_version_t version,
        const char *file, int line);
#define of_instruction_id_goto_table_new(version) \
    of_instruction_id_goto_table_new_tracking(version, \
        __FILE__, __LINE__)

extern of_instruction_id_header_t *
    of_instruction_id_header_new_tracking(of_version_t version,
        const char *file, int line);
#define of_instruction_id_header_new(version) \
    of_instruction_id_header_new_tracking(version, \
        __FILE__, __LINE__)

extern of_instruction_id_meter_t *
    of_instruction_id_meter_new_tracking(of_version_t version,
        const char *file, int line);
#define of_instruction_id_meter_new(version) \
    of_instruction_id_meter_new_tracking(version, \
        __FILE__, __LINE__)

extern of_instruction_id_write_actions_t *
    of_instruction_id_write_actions_new_tracking(of_version_t version,
        const char *file, int line);
#define of_instruction_id_write_actions_new(version) \
    of_instruction_id_write_actions_new_tracking(version, \
        __FILE__, __LINE__)

extern of_instruction_id_write_metadata_t *
    of_instruction_id_write_metadata_new_tracking(of_version_t version,
        const char *file, int line);
#define of_instruction_id_write_metadata_new(version) \
    of_instruction_id_write_metadata_new_tracking(version, \
        __FILE__, __LINE__)

extern of_instruction_meter_t *
    of_instruction_meter_new_tracking(of_version_t version,
        const char *file, int line);
#define of_instruction_meter_new(version) \
    of_instruction_meter_new_tracking(version, \
        __FILE__, __LINE__)

extern of_instruction_write_actions_t *
    of_instruction_write_actions_new_tracking(of_version_t version,
        const char *file, int line);
#define of_instruction_write_actions_new(version) \
    of_instruction_write_actions_new_tracking(version, \
        __FILE__, __LINE__)

extern of_instruction_write_metadata_t *
    of_instruction_write_metadata_new_tracking(of_version_t version,
        const char *file, int line);
#define of_instruction_write_metadata_new(version) \
    of_instruction_write_metadata_new_tracking(version, \
        __FILE__, __LINE__)

extern of_match_v1_t *
    of_match_v1_new_tracking(of_version_t version,
        const char *file, int line);
#define of_match_v1_new(version) \
    of_match_v1_new_tracking(version, \
        __FILE__, __LINE__)

extern of_match_v2_t *
    of_match_v2_new_tracking(of_version_t version,
        const char *file, int line);
#define of_match_v2_new(version) \
    of_match_v2_new_tracking(version, \
        __FILE__, __LINE__)

extern of_match_v3_t *
    of_match_v3_new_tracking(of_version_t version,
        const char *file, int line);
#define of_match_v3_new(version) \
    of_match_v3_new_tracking(version, \
        __FILE__, __LINE__)

extern of_meter_band_t *
    of_meter_band_new_tracking(of_version_t version,
        const char *file, int line);
#define of_meter_band_new(version) \
    of_meter_band_new_tracking(version, \
        __FILE__, __LINE__)

extern of_meter_band_drop_t *
    of_meter_band_drop_new_tracking(of_version_t version,
        const char *file, int line);
#define of_meter_band_drop_new(version) \
    of_meter_band_drop_new_tracking(version, \
        __FILE__, __LINE__)

extern of_meter_band_dscp_remark_t *
    of_meter_band_dscp_remark_new_tracking(of_version_t version,
        const char *file, int line);
#define of_meter_band_dscp_remark_new(version) \
    of_meter_band_dscp_remark_new_tracking(version, \
        __FILE__, __LINE__)

extern of_meter_band_experimenter_t *
    of_meter_band_experimenter_new_tracking(of_version_t version,
        const char *file, int line);
#define of_meter_band_experimenter_new(version) \
    of_meter_band_experimenter_new_tracking(version, \
        __FILE__, __LINE__)

extern of_meter_band_header_t *
    of_meter_band_header_new_tracking(of_version_t version,
        const char *file, int line);
#define of_meter_band_header_new(version) \
    of_meter_band_header_new_tracking(version, \
        __FILE__, __LINE__)

extern of_meter_band_stats_t *
    of_meter_band_stats_new_tracking(of_version_t version,
        const char *file, int line);
#define of_meter_band_stats_new(version) \
    of_meter_band_stats_new_tracking(version, \
        __FILE__, __LINE__)

extern of_meter_config_t *
    of_meter_config_new_tracking(of_version_t version,
        const char *file, int line);
#define of_meter_config_new(version) \
    of_meter_config_new_tracking(version, \
        __FILE__, __LINE__)

extern of_meter_features_t *
    of_meter_features_new_tracking(of_version_t version,
        const char *file, int line);
#define of_meter_features_new(version) \
    of_meter_features_new_tracking(version, \
        __FILE__, __LINE__)

extern of_meter_stats_t *
    of_meter_stats_new_tracking(of_version_t version,
        const char *file, int line);
#define of_meter_stats_new(version) \
    of_meter_stats_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_t *
    of_oxm_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_new(version) \
    of_oxm_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_arp_op_t *
    of_oxm_arp_op_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_arp_op_new(version) \
    of_oxm_arp_op_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_arp_op_masked_t *
    of_oxm_arp_op_masked_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_arp_op_masked_new(version) \
    of_oxm_arp_op_masked_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_arp_sha_t *
    of_oxm_arp_sha_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_arp_sha_new(version) \
    of_oxm_arp_sha_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_arp_sha_masked_t *
    of_oxm_arp_sha_masked_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_arp_sha_masked_new(version) \
    of_oxm_arp_sha_masked_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_arp_spa_t *
    of_oxm_arp_spa_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_arp_spa_new(version) \
    of_oxm_arp_spa_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_arp_spa_masked_t *
    of_oxm_arp_spa_masked_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_arp_spa_masked_new(version) \
    of_oxm_arp_spa_masked_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_arp_tha_t *
    of_oxm_arp_tha_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_arp_tha_new(version) \
    of_oxm_arp_tha_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_arp_tha_masked_t *
    of_oxm_arp_tha_masked_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_arp_tha_masked_new(version) \
    of_oxm_arp_tha_masked_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_arp_tpa_t *
    of_oxm_arp_tpa_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_arp_tpa_new(version) \
    of_oxm_arp_tpa_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_arp_tpa_masked_t *
    of_oxm_arp_tpa_masked_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_arp_tpa_masked_new(version) \
    of_oxm_arp_tpa_masked_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_bsn_global_vrf_allowed_t *
    of_oxm_bsn_global_vrf_allowed_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_bsn_global_vrf_allowed_new(version) \
    of_oxm_bsn_global_vrf_allowed_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_bsn_global_vrf_allowed_masked_t *
    of_oxm_bsn_global_vrf_allowed_masked_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_bsn_global_vrf_allowed_masked_new(version) \
    of_oxm_bsn_global_vrf_allowed_masked_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_bsn_in_ports_128_t *
    of_oxm_bsn_in_ports_128_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_bsn_in_ports_128_new(version) \
    of_oxm_bsn_in_ports_128_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_bsn_in_ports_128_masked_t *
    of_oxm_bsn_in_ports_128_masked_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_bsn_in_ports_128_masked_new(version) \
    of_oxm_bsn_in_ports_128_masked_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_bsn_l3_dst_class_id_t *
    of_oxm_bsn_l3_dst_class_id_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_bsn_l3_dst_class_id_new(version) \
    of_oxm_bsn_l3_dst_class_id_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_bsn_l3_dst_class_id_masked_t *
    of_oxm_bsn_l3_dst_class_id_masked_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_bsn_l3_dst_class_id_masked_new(version) \
    of_oxm_bsn_l3_dst_class_id_masked_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_bsn_l3_interface_class_id_t *
    of_oxm_bsn_l3_interface_class_id_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_bsn_l3_interface_class_id_new(version) \
    of_oxm_bsn_l3_interface_class_id_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_bsn_l3_interface_class_id_masked_t *
    of_oxm_bsn_l3_interface_class_id_masked_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_bsn_l3_interface_class_id_masked_new(version) \
    of_oxm_bsn_l3_interface_class_id_masked_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_bsn_l3_src_class_id_t *
    of_oxm_bsn_l3_src_class_id_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_bsn_l3_src_class_id_new(version) \
    of_oxm_bsn_l3_src_class_id_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_bsn_l3_src_class_id_masked_t *
    of_oxm_bsn_l3_src_class_id_masked_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_bsn_l3_src_class_id_masked_new(version) \
    of_oxm_bsn_l3_src_class_id_masked_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_bsn_lag_id_t *
    of_oxm_bsn_lag_id_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_bsn_lag_id_new(version) \
    of_oxm_bsn_lag_id_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_bsn_lag_id_masked_t *
    of_oxm_bsn_lag_id_masked_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_bsn_lag_id_masked_new(version) \
    of_oxm_bsn_lag_id_masked_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_bsn_vrf_t *
    of_oxm_bsn_vrf_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_bsn_vrf_new(version) \
    of_oxm_bsn_vrf_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_bsn_vrf_masked_t *
    of_oxm_bsn_vrf_masked_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_bsn_vrf_masked_new(version) \
    of_oxm_bsn_vrf_masked_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_eth_dst_t *
    of_oxm_eth_dst_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_eth_dst_new(version) \
    of_oxm_eth_dst_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_eth_dst_masked_t *
    of_oxm_eth_dst_masked_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_eth_dst_masked_new(version) \
    of_oxm_eth_dst_masked_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_eth_src_t *
    of_oxm_eth_src_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_eth_src_new(version) \
    of_oxm_eth_src_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_eth_src_masked_t *
    of_oxm_eth_src_masked_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_eth_src_masked_new(version) \
    of_oxm_eth_src_masked_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_eth_type_t *
    of_oxm_eth_type_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_eth_type_new(version) \
    of_oxm_eth_type_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_eth_type_masked_t *
    of_oxm_eth_type_masked_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_eth_type_masked_new(version) \
    of_oxm_eth_type_masked_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_header_t *
    of_oxm_header_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_header_new(version) \
    of_oxm_header_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_icmpv4_code_t *
    of_oxm_icmpv4_code_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_icmpv4_code_new(version) \
    of_oxm_icmpv4_code_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_icmpv4_code_masked_t *
    of_oxm_icmpv4_code_masked_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_icmpv4_code_masked_new(version) \
    of_oxm_icmpv4_code_masked_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_icmpv4_type_t *
    of_oxm_icmpv4_type_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_icmpv4_type_new(version) \
    of_oxm_icmpv4_type_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_icmpv4_type_masked_t *
    of_oxm_icmpv4_type_masked_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_icmpv4_type_masked_new(version) \
    of_oxm_icmpv4_type_masked_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_icmpv6_code_t *
    of_oxm_icmpv6_code_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_icmpv6_code_new(version) \
    of_oxm_icmpv6_code_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_icmpv6_code_masked_t *
    of_oxm_icmpv6_code_masked_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_icmpv6_code_masked_new(version) \
    of_oxm_icmpv6_code_masked_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_icmpv6_type_t *
    of_oxm_icmpv6_type_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_icmpv6_type_new(version) \
    of_oxm_icmpv6_type_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_icmpv6_type_masked_t *
    of_oxm_icmpv6_type_masked_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_icmpv6_type_masked_new(version) \
    of_oxm_icmpv6_type_masked_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_in_phy_port_t *
    of_oxm_in_phy_port_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_in_phy_port_new(version) \
    of_oxm_in_phy_port_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_in_phy_port_masked_t *
    of_oxm_in_phy_port_masked_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_in_phy_port_masked_new(version) \
    of_oxm_in_phy_port_masked_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_in_port_t *
    of_oxm_in_port_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_in_port_new(version) \
    of_oxm_in_port_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_in_port_masked_t *
    of_oxm_in_port_masked_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_in_port_masked_new(version) \
    of_oxm_in_port_masked_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_ip_dscp_t *
    of_oxm_ip_dscp_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_ip_dscp_new(version) \
    of_oxm_ip_dscp_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_ip_dscp_masked_t *
    of_oxm_ip_dscp_masked_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_ip_dscp_masked_new(version) \
    of_oxm_ip_dscp_masked_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_ip_ecn_t *
    of_oxm_ip_ecn_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_ip_ecn_new(version) \
    of_oxm_ip_ecn_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_ip_ecn_masked_t *
    of_oxm_ip_ecn_masked_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_ip_ecn_masked_new(version) \
    of_oxm_ip_ecn_masked_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_ip_proto_t *
    of_oxm_ip_proto_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_ip_proto_new(version) \
    of_oxm_ip_proto_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_ip_proto_masked_t *
    of_oxm_ip_proto_masked_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_ip_proto_masked_new(version) \
    of_oxm_ip_proto_masked_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_ipv4_dst_t *
    of_oxm_ipv4_dst_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_ipv4_dst_new(version) \
    of_oxm_ipv4_dst_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_ipv4_dst_masked_t *
    of_oxm_ipv4_dst_masked_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_ipv4_dst_masked_new(version) \
    of_oxm_ipv4_dst_masked_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_ipv4_src_t *
    of_oxm_ipv4_src_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_ipv4_src_new(version) \
    of_oxm_ipv4_src_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_ipv4_src_masked_t *
    of_oxm_ipv4_src_masked_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_ipv4_src_masked_new(version) \
    of_oxm_ipv4_src_masked_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_ipv6_dst_t *
    of_oxm_ipv6_dst_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_ipv6_dst_new(version) \
    of_oxm_ipv6_dst_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_ipv6_dst_masked_t *
    of_oxm_ipv6_dst_masked_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_ipv6_dst_masked_new(version) \
    of_oxm_ipv6_dst_masked_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_ipv6_flabel_t *
    of_oxm_ipv6_flabel_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_ipv6_flabel_new(version) \
    of_oxm_ipv6_flabel_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_ipv6_flabel_masked_t *
    of_oxm_ipv6_flabel_masked_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_ipv6_flabel_masked_new(version) \
    of_oxm_ipv6_flabel_masked_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_ipv6_nd_sll_t *
    of_oxm_ipv6_nd_sll_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_ipv6_nd_sll_new(version) \
    of_oxm_ipv6_nd_sll_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_ipv6_nd_sll_masked_t *
    of_oxm_ipv6_nd_sll_masked_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_ipv6_nd_sll_masked_new(version) \
    of_oxm_ipv6_nd_sll_masked_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_ipv6_nd_target_t *
    of_oxm_ipv6_nd_target_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_ipv6_nd_target_new(version) \
    of_oxm_ipv6_nd_target_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_ipv6_nd_target_masked_t *
    of_oxm_ipv6_nd_target_masked_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_ipv6_nd_target_masked_new(version) \
    of_oxm_ipv6_nd_target_masked_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_ipv6_nd_tll_t *
    of_oxm_ipv6_nd_tll_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_ipv6_nd_tll_new(version) \
    of_oxm_ipv6_nd_tll_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_ipv6_nd_tll_masked_t *
    of_oxm_ipv6_nd_tll_masked_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_ipv6_nd_tll_masked_new(version) \
    of_oxm_ipv6_nd_tll_masked_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_ipv6_src_t *
    of_oxm_ipv6_src_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_ipv6_src_new(version) \
    of_oxm_ipv6_src_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_ipv6_src_masked_t *
    of_oxm_ipv6_src_masked_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_ipv6_src_masked_new(version) \
    of_oxm_ipv6_src_masked_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_metadata_t *
    of_oxm_metadata_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_metadata_new(version) \
    of_oxm_metadata_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_metadata_masked_t *
    of_oxm_metadata_masked_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_metadata_masked_new(version) \
    of_oxm_metadata_masked_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_mpls_label_t *
    of_oxm_mpls_label_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_mpls_label_new(version) \
    of_oxm_mpls_label_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_mpls_label_masked_t *
    of_oxm_mpls_label_masked_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_mpls_label_masked_new(version) \
    of_oxm_mpls_label_masked_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_mpls_tc_t *
    of_oxm_mpls_tc_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_mpls_tc_new(version) \
    of_oxm_mpls_tc_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_mpls_tc_masked_t *
    of_oxm_mpls_tc_masked_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_mpls_tc_masked_new(version) \
    of_oxm_mpls_tc_masked_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_sctp_dst_t *
    of_oxm_sctp_dst_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_sctp_dst_new(version) \
    of_oxm_sctp_dst_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_sctp_dst_masked_t *
    of_oxm_sctp_dst_masked_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_sctp_dst_masked_new(version) \
    of_oxm_sctp_dst_masked_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_sctp_src_t *
    of_oxm_sctp_src_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_sctp_src_new(version) \
    of_oxm_sctp_src_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_sctp_src_masked_t *
    of_oxm_sctp_src_masked_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_sctp_src_masked_new(version) \
    of_oxm_sctp_src_masked_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_tcp_dst_t *
    of_oxm_tcp_dst_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_tcp_dst_new(version) \
    of_oxm_tcp_dst_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_tcp_dst_masked_t *
    of_oxm_tcp_dst_masked_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_tcp_dst_masked_new(version) \
    of_oxm_tcp_dst_masked_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_tcp_src_t *
    of_oxm_tcp_src_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_tcp_src_new(version) \
    of_oxm_tcp_src_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_tcp_src_masked_t *
    of_oxm_tcp_src_masked_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_tcp_src_masked_new(version) \
    of_oxm_tcp_src_masked_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_udp_dst_t *
    of_oxm_udp_dst_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_udp_dst_new(version) \
    of_oxm_udp_dst_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_udp_dst_masked_t *
    of_oxm_udp_dst_masked_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_udp_dst_masked_new(version) \
    of_oxm_udp_dst_masked_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_udp_src_t *
    of_oxm_udp_src_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_udp_src_new(version) \
    of_oxm_udp_src_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_udp_src_masked_t *
    of_oxm_udp_src_masked_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_udp_src_masked_new(version) \
    of_oxm_udp_src_masked_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_vlan_pcp_t *
    of_oxm_vlan_pcp_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_vlan_pcp_new(version) \
    of_oxm_vlan_pcp_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_vlan_pcp_masked_t *
    of_oxm_vlan_pcp_masked_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_vlan_pcp_masked_new(version) \
    of_oxm_vlan_pcp_masked_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_vlan_vid_t *
    of_oxm_vlan_vid_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_vlan_vid_new(version) \
    of_oxm_vlan_vid_new_tracking(version, \
        __FILE__, __LINE__)

extern of_oxm_vlan_vid_masked_t *
    of_oxm_vlan_vid_masked_new_tracking(of_version_t version,
        const char *file, int line);
#define of_oxm_vlan_vid_masked_new(version) \
    of_oxm_vlan_vid_masked_new_tracking(version, \
        __FILE__, __LINE__)

extern of_packet_queue_t *
    of_packet_queue_new_tracking(of_version_t version,
        const char *file, int line);
#define of_packet_queue_new(version) \
    of_packet_queue_new_tracking(version, \
        __FILE__, __LINE__)

extern of_port_desc_t *
    of_port_desc_new_tracking(of_version_t version,
        const char *file, int line);
#define of_port_desc_new(version) \
    of_port_desc_new_tracking(version, \
        __FILE__, __LINE__)

extern of_port_stats_entry_t *
    of_port_stats_entry_new_tracking(of_version_t version,
        const char *file, int line);
#define of_port_stats_entry_new(version) \
    of_port_stats_entry_new_tracking(version, \
        __FILE__, __LINE__)

extern of_queue_prop_t *
    of_queue_prop_new_tracking(of_version_t version,
        const char *file, int line);
#define of_queue_prop_new(version) \
    of_queue_prop_new_tracking(version, \
        __FILE__, __LINE__)

extern of_queue_prop_experimenter_t *
    of_queue_prop_experimenter_new_tracking(of_version_t version,
        const char *file, int line);
#define of_queue_prop_experimenter_new(version) \
    of_queue_prop_experimenter_new_tracking(version, \
        __FILE__, __LINE__)

extern of_queue_prop_header_t *
    of_queue_prop_header_new_tracking(of_version_t version,
        const char *file, int line);
#define of_queue_prop_header_new(version) \
    of_queue_prop_header_new_tracking(version, \
        __FILE__, __LINE__)

extern of_queue_prop_max_rate_t *
    of_queue_prop_max_rate_new_tracking(of_version_t version,
        const char *file, int line);
#define of_queue_prop_max_rate_new(version) \
    of_queue_prop_max_rate_new_tracking(version, \
        __FILE__, __LINE__)

extern of_queue_prop_min_rate_t *
    of_queue_prop_min_rate_new_tracking(of_version_t version,
        const char *file, int line);
#define of_queue_prop_min_rate_new(version) \
    of_queue_prop_min_rate_new_tracking(version, \
        __FILE__, __LINE__)

extern of_queue_stats_entry_t *
    of_queue_stats_entry_new_tracking(of_version_t version,
        const char *file, int line);
#define of_queue_stats_entry_new(version) \
    of_queue_stats_entry_new_tracking(version, \
        __FILE__, __LINE__)

extern of_table_feature_prop_t *
    of_table_feature_prop_new_tracking(of_version_t version,
        const char *file, int line);
#define of_table_feature_prop_new(version) \
    of_table_feature_prop_new_tracking(version, \
        __FILE__, __LINE__)

extern of_table_feature_prop_apply_actions_t *
    of_table_feature_prop_apply_actions_new_tracking(of_version_t version,
        const char *file, int line);
#define of_table_feature_prop_apply_actions_new(version) \
    of_table_feature_prop_apply_actions_new_tracking(version, \
        __FILE__, __LINE__)

extern of_table_feature_prop_apply_actions_miss_t *
    of_table_feature_prop_apply_actions_miss_new_tracking(of_version_t version,
        const char *file, int line);
#define of_table_feature_prop_apply_actions_miss_new(version) \
    of_table_feature_prop_apply_actions_miss_new_tracking(version, \
        __FILE__, __LINE__)

extern of_table_feature_prop_apply_setfield_t *
    of_table_feature_prop_apply_setfield_new_tracking(of_version_t version,
        const char *file, int line);
#define of_table_feature_prop_apply_setfield_new(version) \
    of_table_feature_prop_apply_setfield_new_tracking(version, \
        __FILE__, __LINE__)

extern of_table_feature_prop_apply_setfield_miss_t *
    of_table_feature_prop_apply_setfield_miss_new_tracking(of_version_t version,
        const char *file, int line);
#define of_table_feature_prop_apply_setfield_miss_new(version) \
    of_table_feature_prop_apply_setfield_miss_new_tracking(version, \
        __FILE__, __LINE__)

extern of_table_feature_prop_experimenter_t *
    of_table_feature_prop_experimenter_new_tracking(of_version_t version,
        const char *file, int line);
#define of_table_feature_prop_experimenter_new(version) \
    of_table_feature_prop_experimenter_new_tracking(version, \
        __FILE__, __LINE__)

extern of_table_feature_prop_header_t *
    of_table_feature_prop_header_new_tracking(of_version_t version,
        const char *file, int line);
#define of_table_feature_prop_header_new(version) \
    of_table_feature_prop_header_new_tracking(version, \
        __FILE__, __LINE__)

extern of_table_feature_prop_instructions_t *
    of_table_feature_prop_instructions_new_tracking(of_version_t version,
        const char *file, int line);
#define of_table_feature_prop_instructions_new(version) \
    of_table_feature_prop_instructions_new_tracking(version, \
        __FILE__, __LINE__)

extern of_table_feature_prop_instructions_miss_t *
    of_table_feature_prop_instructions_miss_new_tracking(of_version_t version,
        const char *file, int line);
#define of_table_feature_prop_instructions_miss_new(version) \
    of_table_feature_prop_instructions_miss_new_tracking(version, \
        __FILE__, __LINE__)

extern of_table_feature_prop_match_t *
    of_table_feature_prop_match_new_tracking(of_version_t version,
        const char *file, int line);
#define of_table_feature_prop_match_new(version) \
    of_table_feature_prop_match_new_tracking(version, \
        __FILE__, __LINE__)

extern of_table_feature_prop_next_tables_t *
    of_table_feature_prop_next_tables_new_tracking(of_version_t version,
        const char *file, int line);
#define of_table_feature_prop_next_tables_new(version) \
    of_table_feature_prop_next_tables_new_tracking(version, \
        __FILE__, __LINE__)

extern of_table_feature_prop_next_tables_miss_t *
    of_table_feature_prop_next_tables_miss_new_tracking(of_version_t version,
        const char *file, int line);
#define of_table_feature_prop_next_tables_miss_new(version) \
    of_table_feature_prop_next_tables_miss_new_tracking(version, \
        __FILE__, __LINE__)

extern of_table_feature_prop_wildcards_t *
    of_table_feature_prop_wildcards_new_tracking(of_version_t version,
        const char *file, int line);
#define of_table_feature_prop_wildcards_new(version) \
    of_table_feature_prop_wildcards_new_tracking(version, \
        __FILE__, __LINE__)

extern of_table_feature_prop_write_actions_t *
    of_table_feature_prop_write_actions_new_tracking(of_version_t version,
        const char *file, int line);
#define of_table_feature_prop_write_actions_new(version) \
    of_table_feature_prop_write_actions_new_tracking(version, \
        __FILE__, __LINE__)

extern of_table_feature_prop_write_actions_miss_t *
    of_table_feature_prop_write_actions_miss_new_tracking(of_version_t version,
        const char *file, int line);
#define of_table_feature_prop_write_actions_miss_new(version) \
    of_table_feature_prop_write_actions_miss_new_tracking(version, \
        __FILE__, __LINE__)

extern of_table_feature_prop_write_setfield_t *
    of_table_feature_prop_write_setfield_new_tracking(of_version_t version,
        const char *file, int line);
#define of_table_feature_prop_write_setfield_new(version) \
    of_table_feature_prop_write_setfield_new_tracking(version, \
        __FILE__, __LINE__)

extern of_table_feature_prop_write_setfield_miss_t *
    of_table_feature_prop_write_setfield_miss_new_tracking(of_version_t version,
        const char *file, int line);
#define of_table_feature_prop_write_setfield_miss_new(version) \
    of_table_feature_prop_write_setfield_miss_new_tracking(version, \
        __FILE__, __LINE__)

extern of_table_features_t *
    of_table_features_new_tracking(of_version_t version,
        const char *file, int line);
#define of_table_features_new(version) \
    of_table_features_new_tracking(version, \
        __FILE__, __LINE__)

extern of_table_stats_entry_t *
    of_table_stats_entry_new_tracking(of_version_t version,
        const char *file, int line);
#define of_table_stats_entry_new(version) \
    of_table_stats_entry_new_tracking(version, \
        __FILE__, __LINE__)

extern of_uint32_t *
    of_uint32_new_tracking(of_version_t version,
        const char *file, int line);
#define of_uint32_new(version) \
    of_uint32_new_tracking(version, \
        __FILE__, __LINE__)

extern of_uint64_t *
    of_uint64_new_tracking(of_version_t version,
        const char *file, int line);
#define of_uint64_new(version) \
    of_uint64_new_tracking(version, \
        __FILE__, __LINE__)

extern of_uint8_t *
    of_uint8_new_tracking(of_version_t version,
        const char *file, int line);
#define of_uint8_new(version) \
    of_uint8_new_tracking(version, \
        __FILE__, __LINE__)

extern of_list_action_t *
    of_list_action_new_tracking(of_version_t version,
        const char *file, int line);
#define of_list_action_new(version) \
    of_list_action_new_tracking(version, \
        __FILE__, __LINE__)

extern of_list_action_id_t *
    of_list_action_id_new_tracking(of_version_t version,
        const char *file, int line);
#define of_list_action_id_new(version) \
    of_list_action_id_new_tracking(version, \
        __FILE__, __LINE__)

extern of_list_bsn_interface_t *
    of_list_bsn_interface_new_tracking(of_version_t version,
        const char *file, int line);
#define of_list_bsn_interface_new(version) \
    of_list_bsn_interface_new_tracking(version, \
        __FILE__, __LINE__)

extern of_list_bsn_lacp_stats_entry_t *
    of_list_bsn_lacp_stats_entry_new_tracking(of_version_t version,
        const char *file, int line);
#define of_list_bsn_lacp_stats_entry_new(version) \
    of_list_bsn_lacp_stats_entry_new_tracking(version, \
        __FILE__, __LINE__)

extern of_list_bsn_port_counter_stats_entry_t *
    of_list_bsn_port_counter_stats_entry_new_tracking(of_version_t version,
        const char *file, int line);
#define of_list_bsn_port_counter_stats_entry_new(version) \
    of_list_bsn_port_counter_stats_entry_new_tracking(version, \
        __FILE__, __LINE__)

extern of_list_bsn_switch_pipeline_stats_entry_t *
    of_list_bsn_switch_pipeline_stats_entry_new_tracking(of_version_t version,
        const char *file, int line);
#define of_list_bsn_switch_pipeline_stats_entry_new(version) \
    of_list_bsn_switch_pipeline_stats_entry_new_tracking(version, \
        __FILE__, __LINE__)

extern of_list_bsn_vlan_counter_stats_entry_t *
    of_list_bsn_vlan_counter_stats_entry_new_tracking(of_version_t version,
        const char *file, int line);
#define of_list_bsn_vlan_counter_stats_entry_new(version) \
    of_list_bsn_vlan_counter_stats_entry_new_tracking(version, \
        __FILE__, __LINE__)

extern of_list_bucket_t *
    of_list_bucket_new_tracking(of_version_t version,
        const char *file, int line);
#define of_list_bucket_new(version) \
    of_list_bucket_new_tracking(version, \
        __FILE__, __LINE__)

extern of_list_bucket_counter_t *
    of_list_bucket_counter_new_tracking(of_version_t version,
        const char *file, int line);
#define of_list_bucket_counter_new(version) \
    of_list_bucket_counter_new_tracking(version, \
        __FILE__, __LINE__)

extern of_list_flow_stats_entry_t *
    of_list_flow_stats_entry_new_tracking(of_version_t version,
        const char *file, int line);
#define of_list_flow_stats_entry_new(version) \
    of_list_flow_stats_entry_new_tracking(version, \
        __FILE__, __LINE__)

extern of_list_group_desc_stats_entry_t *
    of_list_group_desc_stats_entry_new_tracking(of_version_t version,
        const char *file, int line);
#define of_list_group_desc_stats_entry_new(version) \
    of_list_group_desc_stats_entry_new_tracking(version, \
        __FILE__, __LINE__)

extern of_list_group_stats_entry_t *
    of_list_group_stats_entry_new_tracking(of_version_t version,
        const char *file, int line);
#define of_list_group_stats_entry_new(version) \
    of_list_group_stats_entry_new_tracking(version, \
        __FILE__, __LINE__)

extern of_list_hello_elem_t *
    of_list_hello_elem_new_tracking(of_version_t version,
        const char *file, int line);
#define of_list_hello_elem_new(version) \
    of_list_hello_elem_new_tracking(version, \
        __FILE__, __LINE__)

extern of_list_instruction_t *
    of_list_instruction_new_tracking(of_version_t version,
        const char *file, int line);
#define of_list_instruction_new(version) \
    of_list_instruction_new_tracking(version, \
        __FILE__, __LINE__)

extern of_list_meter_band_t *
    of_list_meter_band_new_tracking(of_version_t version,
        const char *file, int line);
#define of_list_meter_band_new(version) \
    of_list_meter_band_new_tracking(version, \
        __FILE__, __LINE__)

extern of_list_meter_band_stats_t *
    of_list_meter_band_stats_new_tracking(of_version_t version,
        const char *file, int line);
#define of_list_meter_band_stats_new(version) \
    of_list_meter_band_stats_new_tracking(version, \
        __FILE__, __LINE__)

extern of_list_meter_stats_t *
    of_list_meter_stats_new_tracking(of_version_t version,
        const char *file, int line);
#define of_list_meter_stats_new(version) \
    of_list_meter_stats_new_tracking(version, \
        __FILE__, __LINE__)

extern of_list_oxm_t *
    of_list_oxm_new_tracking(of_version_t version,
        const char *file, int line);
#define of_list_oxm_new(version) \
    of_list_oxm_new_tracking(version, \
        __FILE__, __LINE__)

extern of_list_packet_queue_t *
    of_list_packet_queue_new_tracking(of_version_t version,
        const char *file, int line);
#define of_list_packet_queue_new(version) \
    of_list_packet_queue_new_tracking(version, \
        __FILE__, __LINE__)

extern of_list_port_desc_t *
    of_list_port_desc_new_tracking(of_version_t version,
        const char *file, int line);
#define of_list_port_desc_new(version) \
    of_list_port_desc_new_tracking(version, \
        __FILE__, __LINE__)

extern of_list_port_stats_entry_t *
    of_list_port_stats_entry_new_tracking(of_version_t version,
        const char *file, int line);
#define of_list_port_stats_entry_new(version) \
    of_list_port_stats_entry_new_tracking(version, \
        __FILE__, __LINE__)

extern of_list_queue_prop_t *
    of_list_queue_prop_new_tracking(of_version_t version,
        const char *file, int line);
#define of_list_queue_prop_new(version) \
    of_list_queue_prop_new_tracking(version, \
        __FILE__, __LINE__)

extern of_list_queue_stats_entry_t *
    of_list_queue_stats_entry_new_tracking(of_version_t version,
        const char *file, int line);
#define of_list_queue_stats_entry_new(version) \
    of_list_queue_stats_entry_new_tracking(version, \
        __FILE__, __LINE__)

extern of_list_table_feature_prop_t *
    of_list_table_feature_prop_new_tracking(of_version_t version,
        const char *file, int line);
#define of_list_table_feature_prop_new(version) \
    of_list_table_feature_prop_new_tracking(version, \
        __FILE__, __LINE__)

extern of_list_table_features_t *
    of_list_table_features_new_tracking(of_version_t version,
        const char *file, int line);
#define of_list_table_features_new(version) \
    of_list_table_features_new_tracking(version, \
        __FILE__, __LINE__)

extern of_list_table_stats_entry_t *
    of_list_table_stats_entry_new_tracking(of_version_t version,
        const char *file, int line);
#define of_list_table_stats_entry_new(version) \
    of_list_table_stats_entry_new_tracking(version, \
        __FILE__, __LINE__)

extern of_list_uint32_t *
    of_list_uint32_new_tracking(of_version_t version,
        const char *file, int line);
#define of_list_uint32_new(version) \
    of_list_uint32_new_tracking(version, \
        __FILE__, __LINE__)

extern of_list_uint64_t *
    of_list_uint64_new_tracking(of_version_t version,
        const char *file, int line);
#define of_list_uint64_new(version) \
    of_list_uint64_new_tracking(version, \
        __FILE__, __LINE__)

extern of_list_uint8_t *
    of_list_uint8_new_tracking(of_version_t version,
        const char *file, int line);
#define of_list_uint8_new(version) \
    of_list_uint8_new_tracking(version, \
        __FILE__, __LINE__)

#else /* No object tracking */

#define of_aggregate_stats_reply_new(version) \
    of_aggregate_stats_reply_new_(version)
#define of_aggregate_stats_reply_new_from_message(msg) \
    of_aggregate_stats_reply_new_from_message_(msg)

#define of_aggregate_stats_request_new(version) \
    of_aggregate_stats_request_new_(version)
#define of_aggregate_stats_request_new_from_message(msg) \
    of_aggregate_stats_request_new_from_message_(msg)

#define of_async_get_reply_new(version) \
    of_async_get_reply_new_(version)
#define of_async_get_reply_new_from_message(msg) \
    of_async_get_reply_new_from_message_(msg)

#define of_async_get_request_new(version) \
    of_async_get_request_new_(version)
#define of_async_get_request_new_from_message(msg) \
    of_async_get_request_new_from_message_(msg)

#define of_async_set_new(version) \
    of_async_set_new_(version)
#define of_async_set_new_from_message(msg) \
    of_async_set_new_from_message_(msg)

#define of_bad_action_error_msg_new(version) \
    of_bad_action_error_msg_new_(version)
#define of_bad_action_error_msg_new_from_message(msg) \
    of_bad_action_error_msg_new_from_message_(msg)

#define of_bad_instruction_error_msg_new(version) \
    of_bad_instruction_error_msg_new_(version)
#define of_bad_instruction_error_msg_new_from_message(msg) \
    of_bad_instruction_error_msg_new_from_message_(msg)

#define of_bad_match_error_msg_new(version) \
    of_bad_match_error_msg_new_(version)
#define of_bad_match_error_msg_new_from_message(msg) \
    of_bad_match_error_msg_new_from_message_(msg)

#define of_bad_request_error_msg_new(version) \
    of_bad_request_error_msg_new_(version)
#define of_bad_request_error_msg_new_from_message(msg) \
    of_bad_request_error_msg_new_from_message_(msg)

#define of_barrier_reply_new(version) \
    of_barrier_reply_new_(version)
#define of_barrier_reply_new_from_message(msg) \
    of_barrier_reply_new_from_message_(msg)

#define of_barrier_request_new(version) \
    of_barrier_request_new_(version)
#define of_barrier_request_new_from_message(msg) \
    of_barrier_request_new_from_message_(msg)

#define of_bsn_bw_clear_data_reply_new(version) \
    of_bsn_bw_clear_data_reply_new_(version)
#define of_bsn_bw_clear_data_reply_new_from_message(msg) \
    of_bsn_bw_clear_data_reply_new_from_message_(msg)

#define of_bsn_bw_clear_data_request_new(version) \
    of_bsn_bw_clear_data_request_new_(version)
#define of_bsn_bw_clear_data_request_new_from_message(msg) \
    of_bsn_bw_clear_data_request_new_from_message_(msg)

#define of_bsn_bw_enable_get_reply_new(version) \
    of_bsn_bw_enable_get_reply_new_(version)
#define of_bsn_bw_enable_get_reply_new_from_message(msg) \
    of_bsn_bw_enable_get_reply_new_from_message_(msg)

#define of_bsn_bw_enable_get_request_new(version) \
    of_bsn_bw_enable_get_request_new_(version)
#define of_bsn_bw_enable_get_request_new_from_message(msg) \
    of_bsn_bw_enable_get_request_new_from_message_(msg)

#define of_bsn_bw_enable_set_reply_new(version) \
    of_bsn_bw_enable_set_reply_new_(version)
#define of_bsn_bw_enable_set_reply_new_from_message(msg) \
    of_bsn_bw_enable_set_reply_new_from_message_(msg)

#define of_bsn_bw_enable_set_request_new(version) \
    of_bsn_bw_enable_set_request_new_(version)
#define of_bsn_bw_enable_set_request_new_from_message(msg) \
    of_bsn_bw_enable_set_request_new_from_message_(msg)

#define of_bsn_flow_idle_new(version) \
    of_bsn_flow_idle_new_(version)
#define of_bsn_flow_idle_new_from_message(msg) \
    of_bsn_flow_idle_new_from_message_(msg)

#define of_bsn_flow_idle_enable_get_reply_new(version) \
    of_bsn_flow_idle_enable_get_reply_new_(version)
#define of_bsn_flow_idle_enable_get_reply_new_from_message(msg) \
    of_bsn_flow_idle_enable_get_reply_new_from_message_(msg)

#define of_bsn_flow_idle_enable_get_request_new(version) \
    of_bsn_flow_idle_enable_get_request_new_(version)
#define of_bsn_flow_idle_enable_get_request_new_from_message(msg) \
    of_bsn_flow_idle_enable_get_request_new_from_message_(msg)

#define of_bsn_flow_idle_enable_set_reply_new(version) \
    of_bsn_flow_idle_enable_set_reply_new_(version)
#define of_bsn_flow_idle_enable_set_reply_new_from_message(msg) \
    of_bsn_flow_idle_enable_set_reply_new_from_message_(msg)

#define of_bsn_flow_idle_enable_set_request_new(version) \
    of_bsn_flow_idle_enable_set_request_new_(version)
#define of_bsn_flow_idle_enable_set_request_new_from_message(msg) \
    of_bsn_flow_idle_enable_set_request_new_from_message_(msg)

#define of_bsn_get_interfaces_reply_new(version) \
    of_bsn_get_interfaces_reply_new_(version)
#define of_bsn_get_interfaces_reply_new_from_message(msg) \
    of_bsn_get_interfaces_reply_new_from_message_(msg)

#define of_bsn_get_interfaces_request_new(version) \
    of_bsn_get_interfaces_request_new_(version)
#define of_bsn_get_interfaces_request_new_from_message(msg) \
    of_bsn_get_interfaces_request_new_from_message_(msg)

#define of_bsn_get_ip_mask_reply_new(version) \
    of_bsn_get_ip_mask_reply_new_(version)
#define of_bsn_get_ip_mask_reply_new_from_message(msg) \
    of_bsn_get_ip_mask_reply_new_from_message_(msg)

#define of_bsn_get_ip_mask_request_new(version) \
    of_bsn_get_ip_mask_request_new_(version)
#define of_bsn_get_ip_mask_request_new_from_message(msg) \
    of_bsn_get_ip_mask_request_new_from_message_(msg)

#define of_bsn_get_l2_table_reply_new(version) \
    of_bsn_get_l2_table_reply_new_(version)
#define of_bsn_get_l2_table_reply_new_from_message(msg) \
    of_bsn_get_l2_table_reply_new_from_message_(msg)

#define of_bsn_get_l2_table_request_new(version) \
    of_bsn_get_l2_table_request_new_(version)
#define of_bsn_get_l2_table_request_new_from_message(msg) \
    of_bsn_get_l2_table_request_new_from_message_(msg)

#define of_bsn_get_mirroring_reply_new(version) \
    of_bsn_get_mirroring_reply_new_(version)
#define of_bsn_get_mirroring_reply_new_from_message(msg) \
    of_bsn_get_mirroring_reply_new_from_message_(msg)

#define of_bsn_get_mirroring_request_new(version) \
    of_bsn_get_mirroring_request_new_(version)
#define of_bsn_get_mirroring_request_new_from_message(msg) \
    of_bsn_get_mirroring_request_new_from_message_(msg)

#define of_bsn_get_switch_pipeline_reply_new(version) \
    of_bsn_get_switch_pipeline_reply_new_(version)
#define of_bsn_get_switch_pipeline_reply_new_from_message(msg) \
    of_bsn_get_switch_pipeline_reply_new_from_message_(msg)

#define of_bsn_get_switch_pipeline_request_new(version) \
    of_bsn_get_switch_pipeline_request_new_(version)
#define of_bsn_get_switch_pipeline_request_new_from_message(msg) \
    of_bsn_get_switch_pipeline_request_new_from_message_(msg)

#define of_bsn_header_new(version) \
    of_bsn_header_new_(version)
#define of_bsn_header_new_from_message(msg) \
    of_bsn_header_new_from_message_(msg)

#define of_bsn_hybrid_get_reply_new(version) \
    of_bsn_hybrid_get_reply_new_(version)
#define of_bsn_hybrid_get_reply_new_from_message(msg) \
    of_bsn_hybrid_get_reply_new_from_message_(msg)

#define of_bsn_hybrid_get_request_new(version) \
    of_bsn_hybrid_get_request_new_(version)
#define of_bsn_hybrid_get_request_new_from_message(msg) \
    of_bsn_hybrid_get_request_new_from_message_(msg)

#define of_bsn_lacp_convergence_notif_new(version) \
    of_bsn_lacp_convergence_notif_new_(version)
#define of_bsn_lacp_convergence_notif_new_from_message(msg) \
    of_bsn_lacp_convergence_notif_new_from_message_(msg)

#define of_bsn_lacp_stats_reply_new(version) \
    of_bsn_lacp_stats_reply_new_(version)
#define of_bsn_lacp_stats_reply_new_from_message(msg) \
    of_bsn_lacp_stats_reply_new_from_message_(msg)

#define of_bsn_lacp_stats_request_new(version) \
    of_bsn_lacp_stats_request_new_(version)
#define of_bsn_lacp_stats_request_new_from_message(msg) \
    of_bsn_lacp_stats_request_new_from_message_(msg)

#define of_bsn_pdu_rx_reply_new(version) \
    of_bsn_pdu_rx_reply_new_(version)
#define of_bsn_pdu_rx_reply_new_from_message(msg) \
    of_bsn_pdu_rx_reply_new_from_message_(msg)

#define of_bsn_pdu_rx_request_new(version) \
    of_bsn_pdu_rx_request_new_(version)
#define of_bsn_pdu_rx_request_new_from_message(msg) \
    of_bsn_pdu_rx_request_new_from_message_(msg)

#define of_bsn_pdu_rx_timeout_new(version) \
    of_bsn_pdu_rx_timeout_new_(version)
#define of_bsn_pdu_rx_timeout_new_from_message(msg) \
    of_bsn_pdu_rx_timeout_new_from_message_(msg)

#define of_bsn_pdu_tx_reply_new(version) \
    of_bsn_pdu_tx_reply_new_(version)
#define of_bsn_pdu_tx_reply_new_from_message(msg) \
    of_bsn_pdu_tx_reply_new_from_message_(msg)

#define of_bsn_pdu_tx_request_new(version) \
    of_bsn_pdu_tx_request_new_(version)
#define of_bsn_pdu_tx_request_new_from_message(msg) \
    of_bsn_pdu_tx_request_new_from_message_(msg)

#define of_bsn_port_counter_stats_reply_new(version) \
    of_bsn_port_counter_stats_reply_new_(version)
#define of_bsn_port_counter_stats_reply_new_from_message(msg) \
    of_bsn_port_counter_stats_reply_new_from_message_(msg)

#define of_bsn_port_counter_stats_request_new(version) \
    of_bsn_port_counter_stats_request_new_(version)
#define of_bsn_port_counter_stats_request_new_from_message(msg) \
    of_bsn_port_counter_stats_request_new_from_message_(msg)

#define of_bsn_set_ip_mask_new(version) \
    of_bsn_set_ip_mask_new_(version)
#define of_bsn_set_ip_mask_new_from_message(msg) \
    of_bsn_set_ip_mask_new_from_message_(msg)

#define of_bsn_set_l2_table_reply_new(version) \
    of_bsn_set_l2_table_reply_new_(version)
#define of_bsn_set_l2_table_reply_new_from_message(msg) \
    of_bsn_set_l2_table_reply_new_from_message_(msg)

#define of_bsn_set_l2_table_request_new(version) \
    of_bsn_set_l2_table_request_new_(version)
#define of_bsn_set_l2_table_request_new_from_message(msg) \
    of_bsn_set_l2_table_request_new_from_message_(msg)

#define of_bsn_set_lacp_reply_new(version) \
    of_bsn_set_lacp_reply_new_(version)
#define of_bsn_set_lacp_reply_new_from_message(msg) \
    of_bsn_set_lacp_reply_new_from_message_(msg)

#define of_bsn_set_lacp_request_new(version) \
    of_bsn_set_lacp_request_new_(version)
#define of_bsn_set_lacp_request_new_from_message(msg) \
    of_bsn_set_lacp_request_new_from_message_(msg)

#define of_bsn_set_mirroring_new(version) \
    of_bsn_set_mirroring_new_(version)
#define of_bsn_set_mirroring_new_from_message(msg) \
    of_bsn_set_mirroring_new_from_message_(msg)

#define of_bsn_set_pktin_suppression_reply_new(version) \
    of_bsn_set_pktin_suppression_reply_new_(version)
#define of_bsn_set_pktin_suppression_reply_new_from_message(msg) \
    of_bsn_set_pktin_suppression_reply_new_from_message_(msg)

#define of_bsn_set_pktin_suppression_request_new(version) \
    of_bsn_set_pktin_suppression_request_new_(version)
#define of_bsn_set_pktin_suppression_request_new_from_message(msg) \
    of_bsn_set_pktin_suppression_request_new_from_message_(msg)

#define of_bsn_set_switch_pipeline_reply_new(version) \
    of_bsn_set_switch_pipeline_reply_new_(version)
#define of_bsn_set_switch_pipeline_reply_new_from_message(msg) \
    of_bsn_set_switch_pipeline_reply_new_from_message_(msg)

#define of_bsn_set_switch_pipeline_request_new(version) \
    of_bsn_set_switch_pipeline_request_new_(version)
#define of_bsn_set_switch_pipeline_request_new_from_message(msg) \
    of_bsn_set_switch_pipeline_request_new_from_message_(msg)

#define of_bsn_shell_command_new(version) \
    of_bsn_shell_command_new_(version)
#define of_bsn_shell_command_new_from_message(msg) \
    of_bsn_shell_command_new_from_message_(msg)

#define of_bsn_shell_output_new(version) \
    of_bsn_shell_output_new_(version)
#define of_bsn_shell_output_new_from_message(msg) \
    of_bsn_shell_output_new_from_message_(msg)

#define of_bsn_shell_status_new(version) \
    of_bsn_shell_status_new_(version)
#define of_bsn_shell_status_new_from_message(msg) \
    of_bsn_shell_status_new_from_message_(msg)

#define of_bsn_stats_reply_new(version) \
    of_bsn_stats_reply_new_(version)
#define of_bsn_stats_reply_new_from_message(msg) \
    of_bsn_stats_reply_new_from_message_(msg)

#define of_bsn_stats_request_new(version) \
    of_bsn_stats_request_new_(version)
#define of_bsn_stats_request_new_from_message(msg) \
    of_bsn_stats_request_new_from_message_(msg)

#define of_bsn_switch_pipeline_stats_reply_new(version) \
    of_bsn_switch_pipeline_stats_reply_new_(version)
#define of_bsn_switch_pipeline_stats_reply_new_from_message(msg) \
    of_bsn_switch_pipeline_stats_reply_new_from_message_(msg)

#define of_bsn_switch_pipeline_stats_request_new(version) \
    of_bsn_switch_pipeline_stats_request_new_(version)
#define of_bsn_switch_pipeline_stats_request_new_from_message(msg) \
    of_bsn_switch_pipeline_stats_request_new_from_message_(msg)

#define of_bsn_time_reply_new(version) \
    of_bsn_time_reply_new_(version)
#define of_bsn_time_reply_new_from_message(msg) \
    of_bsn_time_reply_new_from_message_(msg)

#define of_bsn_time_request_new(version) \
    of_bsn_time_request_new_(version)
#define of_bsn_time_request_new_from_message(msg) \
    of_bsn_time_request_new_from_message_(msg)

#define of_bsn_virtual_port_create_reply_new(version) \
    of_bsn_virtual_port_create_reply_new_(version)
#define of_bsn_virtual_port_create_reply_new_from_message(msg) \
    of_bsn_virtual_port_create_reply_new_from_message_(msg)

#define of_bsn_virtual_port_create_request_new(version) \
    of_bsn_virtual_port_create_request_new_(version)
#define of_bsn_virtual_port_create_request_new_from_message(msg) \
    of_bsn_virtual_port_create_request_new_from_message_(msg)

#define of_bsn_virtual_port_remove_reply_new(version) \
    of_bsn_virtual_port_remove_reply_new_(version)
#define of_bsn_virtual_port_remove_reply_new_from_message(msg) \
    of_bsn_virtual_port_remove_reply_new_from_message_(msg)

#define of_bsn_virtual_port_remove_request_new(version) \
    of_bsn_virtual_port_remove_request_new_(version)
#define of_bsn_virtual_port_remove_request_new_from_message(msg) \
    of_bsn_virtual_port_remove_request_new_from_message_(msg)

#define of_bsn_vlan_counter_stats_reply_new(version) \
    of_bsn_vlan_counter_stats_reply_new_(version)
#define of_bsn_vlan_counter_stats_reply_new_from_message(msg) \
    of_bsn_vlan_counter_stats_reply_new_from_message_(msg)

#define of_bsn_vlan_counter_stats_request_new(version) \
    of_bsn_vlan_counter_stats_request_new_(version)
#define of_bsn_vlan_counter_stats_request_new_from_message(msg) \
    of_bsn_vlan_counter_stats_request_new_from_message_(msg)

#define of_desc_stats_reply_new(version) \
    of_desc_stats_reply_new_(version)
#define of_desc_stats_reply_new_from_message(msg) \
    of_desc_stats_reply_new_from_message_(msg)

#define of_desc_stats_request_new(version) \
    of_desc_stats_request_new_(version)
#define of_desc_stats_request_new_from_message(msg) \
    of_desc_stats_request_new_from_message_(msg)

#define of_echo_reply_new(version) \
    of_echo_reply_new_(version)
#define of_echo_reply_new_from_message(msg) \
    of_echo_reply_new_from_message_(msg)

#define of_echo_request_new(version) \
    of_echo_request_new_(version)
#define of_echo_request_new_from_message(msg) \
    of_echo_request_new_from_message_(msg)

#define of_error_msg_new(version) \
    of_error_msg_new_(version)
#define of_error_msg_new_from_message(msg) \
    of_error_msg_new_from_message_(msg)

#define of_experimenter_new(version) \
    of_experimenter_new_(version)
#define of_experimenter_new_from_message(msg) \
    of_experimenter_new_from_message_(msg)

#define of_experimenter_error_msg_new(version) \
    of_experimenter_error_msg_new_(version)
#define of_experimenter_error_msg_new_from_message(msg) \
    of_experimenter_error_msg_new_from_message_(msg)

#define of_experimenter_stats_reply_new(version) \
    of_experimenter_stats_reply_new_(version)
#define of_experimenter_stats_reply_new_from_message(msg) \
    of_experimenter_stats_reply_new_from_message_(msg)

#define of_experimenter_stats_request_new(version) \
    of_experimenter_stats_request_new_(version)
#define of_experimenter_stats_request_new_from_message(msg) \
    of_experimenter_stats_request_new_from_message_(msg)

#define of_features_reply_new(version) \
    of_features_reply_new_(version)
#define of_features_reply_new_from_message(msg) \
    of_features_reply_new_from_message_(msg)

#define of_features_request_new(version) \
    of_features_request_new_(version)
#define of_features_request_new_from_message(msg) \
    of_features_request_new_from_message_(msg)

#define of_flow_add_new(version) \
    of_flow_add_new_(version)
#define of_flow_add_new_from_message(msg) \
    of_flow_add_new_from_message_(msg)

#define of_flow_delete_new(version) \
    of_flow_delete_new_(version)
#define of_flow_delete_new_from_message(msg) \
    of_flow_delete_new_from_message_(msg)

#define of_flow_delete_strict_new(version) \
    of_flow_delete_strict_new_(version)
#define of_flow_delete_strict_new_from_message(msg) \
    of_flow_delete_strict_new_from_message_(msg)

#define of_flow_mod_new(version) \
    of_flow_mod_new_(version)
#define of_flow_mod_new_from_message(msg) \
    of_flow_mod_new_from_message_(msg)

#define of_flow_mod_failed_error_msg_new(version) \
    of_flow_mod_failed_error_msg_new_(version)
#define of_flow_mod_failed_error_msg_new_from_message(msg) \
    of_flow_mod_failed_error_msg_new_from_message_(msg)

#define of_flow_modify_new(version) \
    of_flow_modify_new_(version)
#define of_flow_modify_new_from_message(msg) \
    of_flow_modify_new_from_message_(msg)

#define of_flow_modify_strict_new(version) \
    of_flow_modify_strict_new_(version)
#define of_flow_modify_strict_new_from_message(msg) \
    of_flow_modify_strict_new_from_message_(msg)

#define of_flow_removed_new(version) \
    of_flow_removed_new_(version)
#define of_flow_removed_new_from_message(msg) \
    of_flow_removed_new_from_message_(msg)

#define of_flow_stats_reply_new(version) \
    of_flow_stats_reply_new_(version)
#define of_flow_stats_reply_new_from_message(msg) \
    of_flow_stats_reply_new_from_message_(msg)

#define of_flow_stats_request_new(version) \
    of_flow_stats_request_new_(version)
#define of_flow_stats_request_new_from_message(msg) \
    of_flow_stats_request_new_from_message_(msg)

#define of_get_config_reply_new(version) \
    of_get_config_reply_new_(version)
#define of_get_config_reply_new_from_message(msg) \
    of_get_config_reply_new_from_message_(msg)

#define of_get_config_request_new(version) \
    of_get_config_request_new_(version)
#define of_get_config_request_new_from_message(msg) \
    of_get_config_request_new_from_message_(msg)

#define of_group_add_new(version) \
    of_group_add_new_(version)
#define of_group_add_new_from_message(msg) \
    of_group_add_new_from_message_(msg)

#define of_group_delete_new(version) \
    of_group_delete_new_(version)
#define of_group_delete_new_from_message(msg) \
    of_group_delete_new_from_message_(msg)

#define of_group_desc_stats_reply_new(version) \
    of_group_desc_stats_reply_new_(version)
#define of_group_desc_stats_reply_new_from_message(msg) \
    of_group_desc_stats_reply_new_from_message_(msg)

#define of_group_desc_stats_request_new(version) \
    of_group_desc_stats_request_new_(version)
#define of_group_desc_stats_request_new_from_message(msg) \
    of_group_desc_stats_request_new_from_message_(msg)

#define of_group_features_stats_reply_new(version) \
    of_group_features_stats_reply_new_(version)
#define of_group_features_stats_reply_new_from_message(msg) \
    of_group_features_stats_reply_new_from_message_(msg)

#define of_group_features_stats_request_new(version) \
    of_group_features_stats_request_new_(version)
#define of_group_features_stats_request_new_from_message(msg) \
    of_group_features_stats_request_new_from_message_(msg)

#define of_group_mod_new(version) \
    of_group_mod_new_(version)
#define of_group_mod_new_from_message(msg) \
    of_group_mod_new_from_message_(msg)

#define of_group_mod_failed_error_msg_new(version) \
    of_group_mod_failed_error_msg_new_(version)
#define of_group_mod_failed_error_msg_new_from_message(msg) \
    of_group_mod_failed_error_msg_new_from_message_(msg)

#define of_group_modify_new(version) \
    of_group_modify_new_(version)
#define of_group_modify_new_from_message(msg) \
    of_group_modify_new_from_message_(msg)

#define of_group_stats_reply_new(version) \
    of_group_stats_reply_new_(version)
#define of_group_stats_reply_new_from_message(msg) \
    of_group_stats_reply_new_from_message_(msg)

#define of_group_stats_request_new(version) \
    of_group_stats_request_new_(version)
#define of_group_stats_request_new_from_message(msg) \
    of_group_stats_request_new_from_message_(msg)

#define of_hello_new(version) \
    of_hello_new_(version)
#define of_hello_new_from_message(msg) \
    of_hello_new_from_message_(msg)

#define of_hello_failed_error_msg_new(version) \
    of_hello_failed_error_msg_new_(version)
#define of_hello_failed_error_msg_new_from_message(msg) \
    of_hello_failed_error_msg_new_from_message_(msg)

#define of_meter_config_stats_reply_new(version) \
    of_meter_config_stats_reply_new_(version)
#define of_meter_config_stats_reply_new_from_message(msg) \
    of_meter_config_stats_reply_new_from_message_(msg)

#define of_meter_config_stats_request_new(version) \
    of_meter_config_stats_request_new_(version)
#define of_meter_config_stats_request_new_from_message(msg) \
    of_meter_config_stats_request_new_from_message_(msg)

#define of_meter_features_stats_reply_new(version) \
    of_meter_features_stats_reply_new_(version)
#define of_meter_features_stats_reply_new_from_message(msg) \
    of_meter_features_stats_reply_new_from_message_(msg)

#define of_meter_features_stats_request_new(version) \
    of_meter_features_stats_request_new_(version)
#define of_meter_features_stats_request_new_from_message(msg) \
    of_meter_features_stats_request_new_from_message_(msg)

#define of_meter_mod_new(version) \
    of_meter_mod_new_(version)
#define of_meter_mod_new_from_message(msg) \
    of_meter_mod_new_from_message_(msg)

#define of_meter_mod_failed_error_msg_new(version) \
    of_meter_mod_failed_error_msg_new_(version)
#define of_meter_mod_failed_error_msg_new_from_message(msg) \
    of_meter_mod_failed_error_msg_new_from_message_(msg)

#define of_meter_stats_reply_new(version) \
    of_meter_stats_reply_new_(version)
#define of_meter_stats_reply_new_from_message(msg) \
    of_meter_stats_reply_new_from_message_(msg)

#define of_meter_stats_request_new(version) \
    of_meter_stats_request_new_(version)
#define of_meter_stats_request_new_from_message(msg) \
    of_meter_stats_request_new_from_message_(msg)

#define of_nicira_controller_role_reply_new(version) \
    of_nicira_controller_role_reply_new_(version)
#define of_nicira_controller_role_reply_new_from_message(msg) \
    of_nicira_controller_role_reply_new_from_message_(msg)

#define of_nicira_controller_role_request_new(version) \
    of_nicira_controller_role_request_new_(version)
#define of_nicira_controller_role_request_new_from_message(msg) \
    of_nicira_controller_role_request_new_from_message_(msg)

#define of_nicira_header_new(version) \
    of_nicira_header_new_(version)
#define of_nicira_header_new_from_message(msg) \
    of_nicira_header_new_from_message_(msg)

#define of_packet_in_new(version) \
    of_packet_in_new_(version)
#define of_packet_in_new_from_message(msg) \
    of_packet_in_new_from_message_(msg)

#define of_packet_out_new(version) \
    of_packet_out_new_(version)
#define of_packet_out_new_from_message(msg) \
    of_packet_out_new_from_message_(msg)

#define of_port_desc_stats_reply_new(version) \
    of_port_desc_stats_reply_new_(version)
#define of_port_desc_stats_reply_new_from_message(msg) \
    of_port_desc_stats_reply_new_from_message_(msg)

#define of_port_desc_stats_request_new(version) \
    of_port_desc_stats_request_new_(version)
#define of_port_desc_stats_request_new_from_message(msg) \
    of_port_desc_stats_request_new_from_message_(msg)

#define of_port_mod_new(version) \
    of_port_mod_new_(version)
#define of_port_mod_new_from_message(msg) \
    of_port_mod_new_from_message_(msg)

#define of_port_mod_failed_error_msg_new(version) \
    of_port_mod_failed_error_msg_new_(version)
#define of_port_mod_failed_error_msg_new_from_message(msg) \
    of_port_mod_failed_error_msg_new_from_message_(msg)

#define of_port_stats_reply_new(version) \
    of_port_stats_reply_new_(version)
#define of_port_stats_reply_new_from_message(msg) \
    of_port_stats_reply_new_from_message_(msg)

#define of_port_stats_request_new(version) \
    of_port_stats_request_new_(version)
#define of_port_stats_request_new_from_message(msg) \
    of_port_stats_request_new_from_message_(msg)

#define of_port_status_new(version) \
    of_port_status_new_(version)
#define of_port_status_new_from_message(msg) \
    of_port_status_new_from_message_(msg)

#define of_queue_get_config_reply_new(version) \
    of_queue_get_config_reply_new_(version)
#define of_queue_get_config_reply_new_from_message(msg) \
    of_queue_get_config_reply_new_from_message_(msg)

#define of_queue_get_config_request_new(version) \
    of_queue_get_config_request_new_(version)
#define of_queue_get_config_request_new_from_message(msg) \
    of_queue_get_config_request_new_from_message_(msg)

#define of_queue_op_failed_error_msg_new(version) \
    of_queue_op_failed_error_msg_new_(version)
#define of_queue_op_failed_error_msg_new_from_message(msg) \
    of_queue_op_failed_error_msg_new_from_message_(msg)

#define of_queue_stats_reply_new(version) \
    of_queue_stats_reply_new_(version)
#define of_queue_stats_reply_new_from_message(msg) \
    of_queue_stats_reply_new_from_message_(msg)

#define of_queue_stats_request_new(version) \
    of_queue_stats_request_new_(version)
#define of_queue_stats_request_new_from_message(msg) \
    of_queue_stats_request_new_from_message_(msg)

#define of_role_reply_new(version) \
    of_role_reply_new_(version)
#define of_role_reply_new_from_message(msg) \
    of_role_reply_new_from_message_(msg)

#define of_role_request_new(version) \
    of_role_request_new_(version)
#define of_role_request_new_from_message(msg) \
    of_role_request_new_from_message_(msg)

#define of_role_request_failed_error_msg_new(version) \
    of_role_request_failed_error_msg_new_(version)
#define of_role_request_failed_error_msg_new_from_message(msg) \
    of_role_request_failed_error_msg_new_from_message_(msg)

#define of_set_config_new(version) \
    of_set_config_new_(version)
#define of_set_config_new_from_message(msg) \
    of_set_config_new_from_message_(msg)

#define of_stats_reply_new(version) \
    of_stats_reply_new_(version)
#define of_stats_reply_new_from_message(msg) \
    of_stats_reply_new_from_message_(msg)

#define of_stats_request_new(version) \
    of_stats_request_new_(version)
#define of_stats_request_new_from_message(msg) \
    of_stats_request_new_from_message_(msg)

#define of_switch_config_failed_error_msg_new(version) \
    of_switch_config_failed_error_msg_new_(version)
#define of_switch_config_failed_error_msg_new_from_message(msg) \
    of_switch_config_failed_error_msg_new_from_message_(msg)

#define of_table_features_failed_error_msg_new(version) \
    of_table_features_failed_error_msg_new_(version)
#define of_table_features_failed_error_msg_new_from_message(msg) \
    of_table_features_failed_error_msg_new_from_message_(msg)

#define of_table_features_stats_reply_new(version) \
    of_table_features_stats_reply_new_(version)
#define of_table_features_stats_reply_new_from_message(msg) \
    of_table_features_stats_reply_new_from_message_(msg)

#define of_table_features_stats_request_new(version) \
    of_table_features_stats_request_new_(version)
#define of_table_features_stats_request_new_from_message(msg) \
    of_table_features_stats_request_new_from_message_(msg)

#define of_table_mod_new(version) \
    of_table_mod_new_(version)
#define of_table_mod_new_from_message(msg) \
    of_table_mod_new_from_message_(msg)

#define of_table_mod_failed_error_msg_new(version) \
    of_table_mod_failed_error_msg_new_(version)
#define of_table_mod_failed_error_msg_new_from_message(msg) \
    of_table_mod_failed_error_msg_new_from_message_(msg)

#define of_table_stats_reply_new(version) \
    of_table_stats_reply_new_(version)
#define of_table_stats_reply_new_from_message(msg) \
    of_table_stats_reply_new_from_message_(msg)

#define of_table_stats_request_new(version) \
    of_table_stats_request_new_(version)
#define of_table_stats_request_new_from_message(msg) \
    of_table_stats_request_new_from_message_(msg)

#define of_action_new(version) \
    of_action_new_(version)

#define of_action_bsn_new(version) \
    of_action_bsn_new_(version)

#define of_action_bsn_mirror_new(version) \
    of_action_bsn_mirror_new_(version)

#define of_action_bsn_set_tunnel_dst_new(version) \
    of_action_bsn_set_tunnel_dst_new_(version)

#define of_action_copy_ttl_in_new(version) \
    of_action_copy_ttl_in_new_(version)

#define of_action_copy_ttl_out_new(version) \
    of_action_copy_ttl_out_new_(version)

#define of_action_dec_mpls_ttl_new(version) \
    of_action_dec_mpls_ttl_new_(version)

#define of_action_dec_nw_ttl_new(version) \
    of_action_dec_nw_ttl_new_(version)

#define of_action_enqueue_new(version) \
    of_action_enqueue_new_(version)

#define of_action_experimenter_new(version) \
    of_action_experimenter_new_(version)

#define of_action_group_new(version) \
    of_action_group_new_(version)

#define of_action_header_new(version) \
    of_action_header_new_(version)

#define of_action_id_new(version) \
    of_action_id_new_(version)

#define of_action_id_bsn_new(version) \
    of_action_id_bsn_new_(version)

#define of_action_id_bsn_mirror_new(version) \
    of_action_id_bsn_mirror_new_(version)

#define of_action_id_bsn_set_tunnel_dst_new(version) \
    of_action_id_bsn_set_tunnel_dst_new_(version)

#define of_action_id_copy_ttl_in_new(version) \
    of_action_id_copy_ttl_in_new_(version)

#define of_action_id_copy_ttl_out_new(version) \
    of_action_id_copy_ttl_out_new_(version)

#define of_action_id_dec_mpls_ttl_new(version) \
    of_action_id_dec_mpls_ttl_new_(version)

#define of_action_id_dec_nw_ttl_new(version) \
    of_action_id_dec_nw_ttl_new_(version)

#define of_action_id_experimenter_new(version) \
    of_action_id_experimenter_new_(version)

#define of_action_id_group_new(version) \
    of_action_id_group_new_(version)

#define of_action_id_header_new(version) \
    of_action_id_header_new_(version)

#define of_action_id_nicira_new(version) \
    of_action_id_nicira_new_(version)

#define of_action_id_nicira_dec_ttl_new(version) \
    of_action_id_nicira_dec_ttl_new_(version)

#define of_action_id_output_new(version) \
    of_action_id_output_new_(version)

#define of_action_id_pop_mpls_new(version) \
    of_action_id_pop_mpls_new_(version)

#define of_action_id_pop_pbb_new(version) \
    of_action_id_pop_pbb_new_(version)

#define of_action_id_pop_vlan_new(version) \
    of_action_id_pop_vlan_new_(version)

#define of_action_id_push_mpls_new(version) \
    of_action_id_push_mpls_new_(version)

#define of_action_id_push_pbb_new(version) \
    of_action_id_push_pbb_new_(version)

#define of_action_id_push_vlan_new(version) \
    of_action_id_push_vlan_new_(version)

#define of_action_id_set_field_new(version) \
    of_action_id_set_field_new_(version)

#define of_action_id_set_mpls_ttl_new(version) \
    of_action_id_set_mpls_ttl_new_(version)

#define of_action_id_set_nw_ttl_new(version) \
    of_action_id_set_nw_ttl_new_(version)

#define of_action_id_set_queue_new(version) \
    of_action_id_set_queue_new_(version)

#define of_action_nicira_new(version) \
    of_action_nicira_new_(version)

#define of_action_nicira_dec_ttl_new(version) \
    of_action_nicira_dec_ttl_new_(version)

#define of_action_output_new(version) \
    of_action_output_new_(version)

#define of_action_pop_mpls_new(version) \
    of_action_pop_mpls_new_(version)

#define of_action_pop_pbb_new(version) \
    of_action_pop_pbb_new_(version)

#define of_action_pop_vlan_new(version) \
    of_action_pop_vlan_new_(version)

#define of_action_push_mpls_new(version) \
    of_action_push_mpls_new_(version)

#define of_action_push_pbb_new(version) \
    of_action_push_pbb_new_(version)

#define of_action_push_vlan_new(version) \
    of_action_push_vlan_new_(version)

#define of_action_set_dl_dst_new(version) \
    of_action_set_dl_dst_new_(version)

#define of_action_set_dl_src_new(version) \
    of_action_set_dl_src_new_(version)

#define of_action_set_field_new(version) \
    of_action_set_field_new_(version)

#define of_action_set_mpls_label_new(version) \
    of_action_set_mpls_label_new_(version)

#define of_action_set_mpls_tc_new(version) \
    of_action_set_mpls_tc_new_(version)

#define of_action_set_mpls_ttl_new(version) \
    of_action_set_mpls_ttl_new_(version)

#define of_action_set_nw_dst_new(version) \
    of_action_set_nw_dst_new_(version)

#define of_action_set_nw_ecn_new(version) \
    of_action_set_nw_ecn_new_(version)

#define of_action_set_nw_src_new(version) \
    of_action_set_nw_src_new_(version)

#define of_action_set_nw_tos_new(version) \
    of_action_set_nw_tos_new_(version)

#define of_action_set_nw_ttl_new(version) \
    of_action_set_nw_ttl_new_(version)

#define of_action_set_queue_new(version) \
    of_action_set_queue_new_(version)

#define of_action_set_tp_dst_new(version) \
    of_action_set_tp_dst_new_(version)

#define of_action_set_tp_src_new(version) \
    of_action_set_tp_src_new_(version)

#define of_action_set_vlan_pcp_new(version) \
    of_action_set_vlan_pcp_new_(version)

#define of_action_set_vlan_vid_new(version) \
    of_action_set_vlan_vid_new_(version)

#define of_action_strip_vlan_new(version) \
    of_action_strip_vlan_new_(version)

#define of_bsn_interface_new(version) \
    of_bsn_interface_new_(version)

#define of_bsn_lacp_stats_entry_new(version) \
    of_bsn_lacp_stats_entry_new_(version)

#define of_bsn_port_counter_stats_entry_new(version) \
    of_bsn_port_counter_stats_entry_new_(version)

#define of_bsn_switch_pipeline_stats_entry_new(version) \
    of_bsn_switch_pipeline_stats_entry_new_(version)

#define of_bsn_vlan_counter_stats_entry_new(version) \
    of_bsn_vlan_counter_stats_entry_new_(version)

#define of_bsn_vport_new(version) \
    of_bsn_vport_new_(version)

#define of_bsn_vport_header_new(version) \
    of_bsn_vport_header_new_(version)

#define of_bsn_vport_q_in_q_new(version) \
    of_bsn_vport_q_in_q_new_(version)

#define of_bucket_new(version) \
    of_bucket_new_(version)

#define of_bucket_counter_new(version) \
    of_bucket_counter_new_(version)

#define of_experimenter_stats_header_new(version) \
    of_experimenter_stats_header_new_(version)

#define of_flow_stats_entry_new(version) \
    of_flow_stats_entry_new_(version)

#define of_group_desc_stats_entry_new(version) \
    of_group_desc_stats_entry_new_(version)

#define of_group_stats_entry_new(version) \
    of_group_stats_entry_new_(version)

#define of_header_new(version) \
    of_header_new_(version)

#define of_hello_elem_new(version) \
    of_hello_elem_new_(version)

#define of_hello_elem_header_new(version) \
    of_hello_elem_header_new_(version)

#define of_hello_elem_versionbitmap_new(version) \
    of_hello_elem_versionbitmap_new_(version)

#define of_instruction_new(version) \
    of_instruction_new_(version)

#define of_instruction_apply_actions_new(version) \
    of_instruction_apply_actions_new_(version)

#define of_instruction_bsn_new(version) \
    of_instruction_bsn_new_(version)

#define of_instruction_bsn_disable_src_mac_check_new(version) \
    of_instruction_bsn_disable_src_mac_check_new_(version)

#define of_instruction_clear_actions_new(version) \
    of_instruction_clear_actions_new_(version)

#define of_instruction_experimenter_new(version) \
    of_instruction_experimenter_new_(version)

#define of_instruction_goto_table_new(version) \
    of_instruction_goto_table_new_(version)

#define of_instruction_header_new(version) \
    of_instruction_header_new_(version)

#define of_instruction_id_new(version) \
    of_instruction_id_new_(version)

#define of_instruction_id_apply_actions_new(version) \
    of_instruction_id_apply_actions_new_(version)

#define of_instruction_id_bsn_new(version) \
    of_instruction_id_bsn_new_(version)

#define of_instruction_id_bsn_disable_src_mac_check_new(version) \
    of_instruction_id_bsn_disable_src_mac_check_new_(version)

#define of_instruction_id_clear_actions_new(version) \
    of_instruction_id_clear_actions_new_(version)

#define of_instruction_id_experimenter_new(version) \
    of_instruction_id_experimenter_new_(version)

#define of_instruction_id_goto_table_new(version) \
    of_instruction_id_goto_table_new_(version)

#define of_instruction_id_header_new(version) \
    of_instruction_id_header_new_(version)

#define of_instruction_id_meter_new(version) \
    of_instruction_id_meter_new_(version)

#define of_instruction_id_write_actions_new(version) \
    of_instruction_id_write_actions_new_(version)

#define of_instruction_id_write_metadata_new(version) \
    of_instruction_id_write_metadata_new_(version)

#define of_instruction_meter_new(version) \
    of_instruction_meter_new_(version)

#define of_instruction_write_actions_new(version) \
    of_instruction_write_actions_new_(version)

#define of_instruction_write_metadata_new(version) \
    of_instruction_write_metadata_new_(version)

#define of_match_v1_new(version) \
    of_match_v1_new_(version)

#define of_match_v2_new(version) \
    of_match_v2_new_(version)

#define of_match_v3_new(version) \
    of_match_v3_new_(version)

#define of_meter_band_new(version) \
    of_meter_band_new_(version)

#define of_meter_band_drop_new(version) \
    of_meter_band_drop_new_(version)

#define of_meter_band_dscp_remark_new(version) \
    of_meter_band_dscp_remark_new_(version)

#define of_meter_band_experimenter_new(version) \
    of_meter_band_experimenter_new_(version)

#define of_meter_band_header_new(version) \
    of_meter_band_header_new_(version)

#define of_meter_band_stats_new(version) \
    of_meter_band_stats_new_(version)

#define of_meter_config_new(version) \
    of_meter_config_new_(version)

#define of_meter_features_new(version) \
    of_meter_features_new_(version)

#define of_meter_stats_new(version) \
    of_meter_stats_new_(version)

#define of_oxm_new(version) \
    of_oxm_new_(version)

#define of_oxm_arp_op_new(version) \
    of_oxm_arp_op_new_(version)

#define of_oxm_arp_op_masked_new(version) \
    of_oxm_arp_op_masked_new_(version)

#define of_oxm_arp_sha_new(version) \
    of_oxm_arp_sha_new_(version)

#define of_oxm_arp_sha_masked_new(version) \
    of_oxm_arp_sha_masked_new_(version)

#define of_oxm_arp_spa_new(version) \
    of_oxm_arp_spa_new_(version)

#define of_oxm_arp_spa_masked_new(version) \
    of_oxm_arp_spa_masked_new_(version)

#define of_oxm_arp_tha_new(version) \
    of_oxm_arp_tha_new_(version)

#define of_oxm_arp_tha_masked_new(version) \
    of_oxm_arp_tha_masked_new_(version)

#define of_oxm_arp_tpa_new(version) \
    of_oxm_arp_tpa_new_(version)

#define of_oxm_arp_tpa_masked_new(version) \
    of_oxm_arp_tpa_masked_new_(version)

#define of_oxm_bsn_global_vrf_allowed_new(version) \
    of_oxm_bsn_global_vrf_allowed_new_(version)

#define of_oxm_bsn_global_vrf_allowed_masked_new(version) \
    of_oxm_bsn_global_vrf_allowed_masked_new_(version)

#define of_oxm_bsn_in_ports_128_new(version) \
    of_oxm_bsn_in_ports_128_new_(version)

#define of_oxm_bsn_in_ports_128_masked_new(version) \
    of_oxm_bsn_in_ports_128_masked_new_(version)

#define of_oxm_bsn_l3_dst_class_id_new(version) \
    of_oxm_bsn_l3_dst_class_id_new_(version)

#define of_oxm_bsn_l3_dst_class_id_masked_new(version) \
    of_oxm_bsn_l3_dst_class_id_masked_new_(version)

#define of_oxm_bsn_l3_interface_class_id_new(version) \
    of_oxm_bsn_l3_interface_class_id_new_(version)

#define of_oxm_bsn_l3_interface_class_id_masked_new(version) \
    of_oxm_bsn_l3_interface_class_id_masked_new_(version)

#define of_oxm_bsn_l3_src_class_id_new(version) \
    of_oxm_bsn_l3_src_class_id_new_(version)

#define of_oxm_bsn_l3_src_class_id_masked_new(version) \
    of_oxm_bsn_l3_src_class_id_masked_new_(version)

#define of_oxm_bsn_lag_id_new(version) \
    of_oxm_bsn_lag_id_new_(version)

#define of_oxm_bsn_lag_id_masked_new(version) \
    of_oxm_bsn_lag_id_masked_new_(version)

#define of_oxm_bsn_vrf_new(version) \
    of_oxm_bsn_vrf_new_(version)

#define of_oxm_bsn_vrf_masked_new(version) \
    of_oxm_bsn_vrf_masked_new_(version)

#define of_oxm_eth_dst_new(version) \
    of_oxm_eth_dst_new_(version)

#define of_oxm_eth_dst_masked_new(version) \
    of_oxm_eth_dst_masked_new_(version)

#define of_oxm_eth_src_new(version) \
    of_oxm_eth_src_new_(version)

#define of_oxm_eth_src_masked_new(version) \
    of_oxm_eth_src_masked_new_(version)

#define of_oxm_eth_type_new(version) \
    of_oxm_eth_type_new_(version)

#define of_oxm_eth_type_masked_new(version) \
    of_oxm_eth_type_masked_new_(version)

#define of_oxm_header_new(version) \
    of_oxm_header_new_(version)

#define of_oxm_icmpv4_code_new(version) \
    of_oxm_icmpv4_code_new_(version)

#define of_oxm_icmpv4_code_masked_new(version) \
    of_oxm_icmpv4_code_masked_new_(version)

#define of_oxm_icmpv4_type_new(version) \
    of_oxm_icmpv4_type_new_(version)

#define of_oxm_icmpv4_type_masked_new(version) \
    of_oxm_icmpv4_type_masked_new_(version)

#define of_oxm_icmpv6_code_new(version) \
    of_oxm_icmpv6_code_new_(version)

#define of_oxm_icmpv6_code_masked_new(version) \
    of_oxm_icmpv6_code_masked_new_(version)

#define of_oxm_icmpv6_type_new(version) \
    of_oxm_icmpv6_type_new_(version)

#define of_oxm_icmpv6_type_masked_new(version) \
    of_oxm_icmpv6_type_masked_new_(version)

#define of_oxm_in_phy_port_new(version) \
    of_oxm_in_phy_port_new_(version)

#define of_oxm_in_phy_port_masked_new(version) \
    of_oxm_in_phy_port_masked_new_(version)

#define of_oxm_in_port_new(version) \
    of_oxm_in_port_new_(version)

#define of_oxm_in_port_masked_new(version) \
    of_oxm_in_port_masked_new_(version)

#define of_oxm_ip_dscp_new(version) \
    of_oxm_ip_dscp_new_(version)

#define of_oxm_ip_dscp_masked_new(version) \
    of_oxm_ip_dscp_masked_new_(version)

#define of_oxm_ip_ecn_new(version) \
    of_oxm_ip_ecn_new_(version)

#define of_oxm_ip_ecn_masked_new(version) \
    of_oxm_ip_ecn_masked_new_(version)

#define of_oxm_ip_proto_new(version) \
    of_oxm_ip_proto_new_(version)

#define of_oxm_ip_proto_masked_new(version) \
    of_oxm_ip_proto_masked_new_(version)

#define of_oxm_ipv4_dst_new(version) \
    of_oxm_ipv4_dst_new_(version)

#define of_oxm_ipv4_dst_masked_new(version) \
    of_oxm_ipv4_dst_masked_new_(version)

#define of_oxm_ipv4_src_new(version) \
    of_oxm_ipv4_src_new_(version)

#define of_oxm_ipv4_src_masked_new(version) \
    of_oxm_ipv4_src_masked_new_(version)

#define of_oxm_ipv6_dst_new(version) \
    of_oxm_ipv6_dst_new_(version)

#define of_oxm_ipv6_dst_masked_new(version) \
    of_oxm_ipv6_dst_masked_new_(version)

#define of_oxm_ipv6_flabel_new(version) \
    of_oxm_ipv6_flabel_new_(version)

#define of_oxm_ipv6_flabel_masked_new(version) \
    of_oxm_ipv6_flabel_masked_new_(version)

#define of_oxm_ipv6_nd_sll_new(version) \
    of_oxm_ipv6_nd_sll_new_(version)

#define of_oxm_ipv6_nd_sll_masked_new(version) \
    of_oxm_ipv6_nd_sll_masked_new_(version)

#define of_oxm_ipv6_nd_target_new(version) \
    of_oxm_ipv6_nd_target_new_(version)

#define of_oxm_ipv6_nd_target_masked_new(version) \
    of_oxm_ipv6_nd_target_masked_new_(version)

#define of_oxm_ipv6_nd_tll_new(version) \
    of_oxm_ipv6_nd_tll_new_(version)

#define of_oxm_ipv6_nd_tll_masked_new(version) \
    of_oxm_ipv6_nd_tll_masked_new_(version)

#define of_oxm_ipv6_src_new(version) \
    of_oxm_ipv6_src_new_(version)

#define of_oxm_ipv6_src_masked_new(version) \
    of_oxm_ipv6_src_masked_new_(version)

#define of_oxm_metadata_new(version) \
    of_oxm_metadata_new_(version)

#define of_oxm_metadata_masked_new(version) \
    of_oxm_metadata_masked_new_(version)

#define of_oxm_mpls_label_new(version) \
    of_oxm_mpls_label_new_(version)

#define of_oxm_mpls_label_masked_new(version) \
    of_oxm_mpls_label_masked_new_(version)

#define of_oxm_mpls_tc_new(version) \
    of_oxm_mpls_tc_new_(version)

#define of_oxm_mpls_tc_masked_new(version) \
    of_oxm_mpls_tc_masked_new_(version)

#define of_oxm_sctp_dst_new(version) \
    of_oxm_sctp_dst_new_(version)

#define of_oxm_sctp_dst_masked_new(version) \
    of_oxm_sctp_dst_masked_new_(version)

#define of_oxm_sctp_src_new(version) \
    of_oxm_sctp_src_new_(version)

#define of_oxm_sctp_src_masked_new(version) \
    of_oxm_sctp_src_masked_new_(version)

#define of_oxm_tcp_dst_new(version) \
    of_oxm_tcp_dst_new_(version)

#define of_oxm_tcp_dst_masked_new(version) \
    of_oxm_tcp_dst_masked_new_(version)

#define of_oxm_tcp_src_new(version) \
    of_oxm_tcp_src_new_(version)

#define of_oxm_tcp_src_masked_new(version) \
    of_oxm_tcp_src_masked_new_(version)

#define of_oxm_udp_dst_new(version) \
    of_oxm_udp_dst_new_(version)

#define of_oxm_udp_dst_masked_new(version) \
    of_oxm_udp_dst_masked_new_(version)

#define of_oxm_udp_src_new(version) \
    of_oxm_udp_src_new_(version)

#define of_oxm_udp_src_masked_new(version) \
    of_oxm_udp_src_masked_new_(version)

#define of_oxm_vlan_pcp_new(version) \
    of_oxm_vlan_pcp_new_(version)

#define of_oxm_vlan_pcp_masked_new(version) \
    of_oxm_vlan_pcp_masked_new_(version)

#define of_oxm_vlan_vid_new(version) \
    of_oxm_vlan_vid_new_(version)

#define of_oxm_vlan_vid_masked_new(version) \
    of_oxm_vlan_vid_masked_new_(version)

#define of_packet_queue_new(version) \
    of_packet_queue_new_(version)

#define of_port_desc_new(version) \
    of_port_desc_new_(version)

#define of_port_stats_entry_new(version) \
    of_port_stats_entry_new_(version)

#define of_queue_prop_new(version) \
    of_queue_prop_new_(version)

#define of_queue_prop_experimenter_new(version) \
    of_queue_prop_experimenter_new_(version)

#define of_queue_prop_header_new(version) \
    of_queue_prop_header_new_(version)

#define of_queue_prop_max_rate_new(version) \
    of_queue_prop_max_rate_new_(version)

#define of_queue_prop_min_rate_new(version) \
    of_queue_prop_min_rate_new_(version)

#define of_queue_stats_entry_new(version) \
    of_queue_stats_entry_new_(version)

#define of_table_feature_prop_new(version) \
    of_table_feature_prop_new_(version)

#define of_table_feature_prop_apply_actions_new(version) \
    of_table_feature_prop_apply_actions_new_(version)

#define of_table_feature_prop_apply_actions_miss_new(version) \
    of_table_feature_prop_apply_actions_miss_new_(version)

#define of_table_feature_prop_apply_setfield_new(version) \
    of_table_feature_prop_apply_setfield_new_(version)

#define of_table_feature_prop_apply_setfield_miss_new(version) \
    of_table_feature_prop_apply_setfield_miss_new_(version)

#define of_table_feature_prop_experimenter_new(version) \
    of_table_feature_prop_experimenter_new_(version)

#define of_table_feature_prop_header_new(version) \
    of_table_feature_prop_header_new_(version)

#define of_table_feature_prop_instructions_new(version) \
    of_table_feature_prop_instructions_new_(version)

#define of_table_feature_prop_instructions_miss_new(version) \
    of_table_feature_prop_instructions_miss_new_(version)

#define of_table_feature_prop_match_new(version) \
    of_table_feature_prop_match_new_(version)

#define of_table_feature_prop_next_tables_new(version) \
    of_table_feature_prop_next_tables_new_(version)

#define of_table_feature_prop_next_tables_miss_new(version) \
    of_table_feature_prop_next_tables_miss_new_(version)

#define of_table_feature_prop_wildcards_new(version) \
    of_table_feature_prop_wildcards_new_(version)

#define of_table_feature_prop_write_actions_new(version) \
    of_table_feature_prop_write_actions_new_(version)

#define of_table_feature_prop_write_actions_miss_new(version) \
    of_table_feature_prop_write_actions_miss_new_(version)

#define of_table_feature_prop_write_setfield_new(version) \
    of_table_feature_prop_write_setfield_new_(version)

#define of_table_feature_prop_write_setfield_miss_new(version) \
    of_table_feature_prop_write_setfield_miss_new_(version)

#define of_table_features_new(version) \
    of_table_features_new_(version)

#define of_table_stats_entry_new(version) \
    of_table_stats_entry_new_(version)

#define of_uint32_new(version) \
    of_uint32_new_(version)

#define of_uint64_new(version) \
    of_uint64_new_(version)

#define of_uint8_new(version) \
    of_uint8_new_(version)

#define of_list_action_new(version) \
    of_list_action_new_(version)

#define of_list_action_id_new(version) \
    of_list_action_id_new_(version)

#define of_list_bsn_interface_new(version) \
    of_list_bsn_interface_new_(version)

#define of_list_bsn_lacp_stats_entry_new(version) \
    of_list_bsn_lacp_stats_entry_new_(version)

#define of_list_bsn_port_counter_stats_entry_new(version) \
    of_list_bsn_port_counter_stats_entry_new_(version)

#define of_list_bsn_switch_pipeline_stats_entry_new(version) \
    of_list_bsn_switch_pipeline_stats_entry_new_(version)

#define of_list_bsn_vlan_counter_stats_entry_new(version) \
    of_list_bsn_vlan_counter_stats_entry_new_(version)

#define of_list_bucket_new(version) \
    of_list_bucket_new_(version)

#define of_list_bucket_counter_new(version) \
    of_list_bucket_counter_new_(version)

#define of_list_flow_stats_entry_new(version) \
    of_list_flow_stats_entry_new_(version)

#define of_list_group_desc_stats_entry_new(version) \
    of_list_group_desc_stats_entry_new_(version)

#define of_list_group_stats_entry_new(version) \
    of_list_group_stats_entry_new_(version)

#define of_list_hello_elem_new(version) \
    of_list_hello_elem_new_(version)

#define of_list_instruction_new(version) \
    of_list_instruction_new_(version)

#define of_list_meter_band_new(version) \
    of_list_meter_band_new_(version)

#define of_list_meter_band_stats_new(version) \
    of_list_meter_band_stats_new_(version)

#define of_list_meter_stats_new(version) \
    of_list_meter_stats_new_(version)

#define of_list_oxm_new(version) \
    of_list_oxm_new_(version)

#define of_list_packet_queue_new(version) \
    of_list_packet_queue_new_(version)

#define of_list_port_desc_new(version) \
    of_list_port_desc_new_(version)

#define of_list_port_stats_entry_new(version) \
    of_list_port_stats_entry_new_(version)

#define of_list_queue_prop_new(version) \
    of_list_queue_prop_new_(version)

#define of_list_queue_stats_entry_new(version) \
    of_list_queue_stats_entry_new_(version)

#define of_list_table_feature_prop_new(version) \
    of_list_table_feature_prop_new_(version)

#define of_list_table_features_new(version) \
    of_list_table_features_new_(version)

#define of_list_table_stats_entry_new(version) \
    of_list_table_stats_entry_new_(version)

#define of_list_uint32_new(version) \
    of_list_uint32_new_(version)

#define of_list_uint64_new(version) \
    of_list_uint64_new_(version)

#define of_list_uint8_new(version) \
    of_list_uint8_new_(version)

#endif /* Object tracking */

extern of_aggregate_stats_reply_t *
    of_aggregate_stats_reply_new_(of_version_t version);
extern of_aggregate_stats_reply_t *
    of_aggregate_stats_reply_new_from_message_(of_message_t msg);
extern void of_aggregate_stats_reply_init(
    of_aggregate_stats_reply_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_aggregate_stats_request_t *
    of_aggregate_stats_request_new_(of_version_t version);
extern of_aggregate_stats_request_t *
    of_aggregate_stats_request_new_from_message_(of_message_t msg);
extern void of_aggregate_stats_request_init(
    of_aggregate_stats_request_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_async_get_reply_t *
    of_async_get_reply_new_(of_version_t version);
extern of_async_get_reply_t *
    of_async_get_reply_new_from_message_(of_message_t msg);
extern void of_async_get_reply_init(
    of_async_get_reply_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_async_get_request_t *
    of_async_get_request_new_(of_version_t version);
extern of_async_get_request_t *
    of_async_get_request_new_from_message_(of_message_t msg);
extern void of_async_get_request_init(
    of_async_get_request_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_async_set_t *
    of_async_set_new_(of_version_t version);
extern of_async_set_t *
    of_async_set_new_from_message_(of_message_t msg);
extern void of_async_set_init(
    of_async_set_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bad_action_error_msg_t *
    of_bad_action_error_msg_new_(of_version_t version);
extern of_bad_action_error_msg_t *
    of_bad_action_error_msg_new_from_message_(of_message_t msg);
extern void of_bad_action_error_msg_init(
    of_bad_action_error_msg_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bad_instruction_error_msg_t *
    of_bad_instruction_error_msg_new_(of_version_t version);
extern of_bad_instruction_error_msg_t *
    of_bad_instruction_error_msg_new_from_message_(of_message_t msg);
extern void of_bad_instruction_error_msg_init(
    of_bad_instruction_error_msg_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bad_match_error_msg_t *
    of_bad_match_error_msg_new_(of_version_t version);
extern of_bad_match_error_msg_t *
    of_bad_match_error_msg_new_from_message_(of_message_t msg);
extern void of_bad_match_error_msg_init(
    of_bad_match_error_msg_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bad_request_error_msg_t *
    of_bad_request_error_msg_new_(of_version_t version);
extern of_bad_request_error_msg_t *
    of_bad_request_error_msg_new_from_message_(of_message_t msg);
extern void of_bad_request_error_msg_init(
    of_bad_request_error_msg_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_barrier_reply_t *
    of_barrier_reply_new_(of_version_t version);
extern of_barrier_reply_t *
    of_barrier_reply_new_from_message_(of_message_t msg);
extern void of_barrier_reply_init(
    of_barrier_reply_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_barrier_request_t *
    of_barrier_request_new_(of_version_t version);
extern of_barrier_request_t *
    of_barrier_request_new_from_message_(of_message_t msg);
extern void of_barrier_request_init(
    of_barrier_request_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_bw_clear_data_reply_t *
    of_bsn_bw_clear_data_reply_new_(of_version_t version);
extern of_bsn_bw_clear_data_reply_t *
    of_bsn_bw_clear_data_reply_new_from_message_(of_message_t msg);
extern void of_bsn_bw_clear_data_reply_init(
    of_bsn_bw_clear_data_reply_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_bw_clear_data_request_t *
    of_bsn_bw_clear_data_request_new_(of_version_t version);
extern of_bsn_bw_clear_data_request_t *
    of_bsn_bw_clear_data_request_new_from_message_(of_message_t msg);
extern void of_bsn_bw_clear_data_request_init(
    of_bsn_bw_clear_data_request_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_bw_enable_get_reply_t *
    of_bsn_bw_enable_get_reply_new_(of_version_t version);
extern of_bsn_bw_enable_get_reply_t *
    of_bsn_bw_enable_get_reply_new_from_message_(of_message_t msg);
extern void of_bsn_bw_enable_get_reply_init(
    of_bsn_bw_enable_get_reply_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_bw_enable_get_request_t *
    of_bsn_bw_enable_get_request_new_(of_version_t version);
extern of_bsn_bw_enable_get_request_t *
    of_bsn_bw_enable_get_request_new_from_message_(of_message_t msg);
extern void of_bsn_bw_enable_get_request_init(
    of_bsn_bw_enable_get_request_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_bw_enable_set_reply_t *
    of_bsn_bw_enable_set_reply_new_(of_version_t version);
extern of_bsn_bw_enable_set_reply_t *
    of_bsn_bw_enable_set_reply_new_from_message_(of_message_t msg);
extern void of_bsn_bw_enable_set_reply_init(
    of_bsn_bw_enable_set_reply_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_bw_enable_set_request_t *
    of_bsn_bw_enable_set_request_new_(of_version_t version);
extern of_bsn_bw_enable_set_request_t *
    of_bsn_bw_enable_set_request_new_from_message_(of_message_t msg);
extern void of_bsn_bw_enable_set_request_init(
    of_bsn_bw_enable_set_request_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_flow_idle_t *
    of_bsn_flow_idle_new_(of_version_t version);
extern of_bsn_flow_idle_t *
    of_bsn_flow_idle_new_from_message_(of_message_t msg);
extern void of_bsn_flow_idle_init(
    of_bsn_flow_idle_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_flow_idle_enable_get_reply_t *
    of_bsn_flow_idle_enable_get_reply_new_(of_version_t version);
extern of_bsn_flow_idle_enable_get_reply_t *
    of_bsn_flow_idle_enable_get_reply_new_from_message_(of_message_t msg);
extern void of_bsn_flow_idle_enable_get_reply_init(
    of_bsn_flow_idle_enable_get_reply_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_flow_idle_enable_get_request_t *
    of_bsn_flow_idle_enable_get_request_new_(of_version_t version);
extern of_bsn_flow_idle_enable_get_request_t *
    of_bsn_flow_idle_enable_get_request_new_from_message_(of_message_t msg);
extern void of_bsn_flow_idle_enable_get_request_init(
    of_bsn_flow_idle_enable_get_request_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_flow_idle_enable_set_reply_t *
    of_bsn_flow_idle_enable_set_reply_new_(of_version_t version);
extern of_bsn_flow_idle_enable_set_reply_t *
    of_bsn_flow_idle_enable_set_reply_new_from_message_(of_message_t msg);
extern void of_bsn_flow_idle_enable_set_reply_init(
    of_bsn_flow_idle_enable_set_reply_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_flow_idle_enable_set_request_t *
    of_bsn_flow_idle_enable_set_request_new_(of_version_t version);
extern of_bsn_flow_idle_enable_set_request_t *
    of_bsn_flow_idle_enable_set_request_new_from_message_(of_message_t msg);
extern void of_bsn_flow_idle_enable_set_request_init(
    of_bsn_flow_idle_enable_set_request_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_get_interfaces_reply_t *
    of_bsn_get_interfaces_reply_new_(of_version_t version);
extern of_bsn_get_interfaces_reply_t *
    of_bsn_get_interfaces_reply_new_from_message_(of_message_t msg);
extern void of_bsn_get_interfaces_reply_init(
    of_bsn_get_interfaces_reply_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_get_interfaces_request_t *
    of_bsn_get_interfaces_request_new_(of_version_t version);
extern of_bsn_get_interfaces_request_t *
    of_bsn_get_interfaces_request_new_from_message_(of_message_t msg);
extern void of_bsn_get_interfaces_request_init(
    of_bsn_get_interfaces_request_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_get_ip_mask_reply_t *
    of_bsn_get_ip_mask_reply_new_(of_version_t version);
extern of_bsn_get_ip_mask_reply_t *
    of_bsn_get_ip_mask_reply_new_from_message_(of_message_t msg);
extern void of_bsn_get_ip_mask_reply_init(
    of_bsn_get_ip_mask_reply_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_get_ip_mask_request_t *
    of_bsn_get_ip_mask_request_new_(of_version_t version);
extern of_bsn_get_ip_mask_request_t *
    of_bsn_get_ip_mask_request_new_from_message_(of_message_t msg);
extern void of_bsn_get_ip_mask_request_init(
    of_bsn_get_ip_mask_request_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_get_l2_table_reply_t *
    of_bsn_get_l2_table_reply_new_(of_version_t version);
extern of_bsn_get_l2_table_reply_t *
    of_bsn_get_l2_table_reply_new_from_message_(of_message_t msg);
extern void of_bsn_get_l2_table_reply_init(
    of_bsn_get_l2_table_reply_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_get_l2_table_request_t *
    of_bsn_get_l2_table_request_new_(of_version_t version);
extern of_bsn_get_l2_table_request_t *
    of_bsn_get_l2_table_request_new_from_message_(of_message_t msg);
extern void of_bsn_get_l2_table_request_init(
    of_bsn_get_l2_table_request_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_get_mirroring_reply_t *
    of_bsn_get_mirroring_reply_new_(of_version_t version);
extern of_bsn_get_mirroring_reply_t *
    of_bsn_get_mirroring_reply_new_from_message_(of_message_t msg);
extern void of_bsn_get_mirroring_reply_init(
    of_bsn_get_mirroring_reply_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_get_mirroring_request_t *
    of_bsn_get_mirroring_request_new_(of_version_t version);
extern of_bsn_get_mirroring_request_t *
    of_bsn_get_mirroring_request_new_from_message_(of_message_t msg);
extern void of_bsn_get_mirroring_request_init(
    of_bsn_get_mirroring_request_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_get_switch_pipeline_reply_t *
    of_bsn_get_switch_pipeline_reply_new_(of_version_t version);
extern of_bsn_get_switch_pipeline_reply_t *
    of_bsn_get_switch_pipeline_reply_new_from_message_(of_message_t msg);
extern void of_bsn_get_switch_pipeline_reply_init(
    of_bsn_get_switch_pipeline_reply_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_get_switch_pipeline_request_t *
    of_bsn_get_switch_pipeline_request_new_(of_version_t version);
extern of_bsn_get_switch_pipeline_request_t *
    of_bsn_get_switch_pipeline_request_new_from_message_(of_message_t msg);
extern void of_bsn_get_switch_pipeline_request_init(
    of_bsn_get_switch_pipeline_request_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_header_t *
    of_bsn_header_new_(of_version_t version);
extern of_bsn_header_t *
    of_bsn_header_new_from_message_(of_message_t msg);
extern void of_bsn_header_init(
    of_bsn_header_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_hybrid_get_reply_t *
    of_bsn_hybrid_get_reply_new_(of_version_t version);
extern of_bsn_hybrid_get_reply_t *
    of_bsn_hybrid_get_reply_new_from_message_(of_message_t msg);
extern void of_bsn_hybrid_get_reply_init(
    of_bsn_hybrid_get_reply_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_hybrid_get_request_t *
    of_bsn_hybrid_get_request_new_(of_version_t version);
extern of_bsn_hybrid_get_request_t *
    of_bsn_hybrid_get_request_new_from_message_(of_message_t msg);
extern void of_bsn_hybrid_get_request_init(
    of_bsn_hybrid_get_request_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_lacp_convergence_notif_t *
    of_bsn_lacp_convergence_notif_new_(of_version_t version);
extern of_bsn_lacp_convergence_notif_t *
    of_bsn_lacp_convergence_notif_new_from_message_(of_message_t msg);
extern void of_bsn_lacp_convergence_notif_init(
    of_bsn_lacp_convergence_notif_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_lacp_stats_reply_t *
    of_bsn_lacp_stats_reply_new_(of_version_t version);
extern of_bsn_lacp_stats_reply_t *
    of_bsn_lacp_stats_reply_new_from_message_(of_message_t msg);
extern void of_bsn_lacp_stats_reply_init(
    of_bsn_lacp_stats_reply_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_lacp_stats_request_t *
    of_bsn_lacp_stats_request_new_(of_version_t version);
extern of_bsn_lacp_stats_request_t *
    of_bsn_lacp_stats_request_new_from_message_(of_message_t msg);
extern void of_bsn_lacp_stats_request_init(
    of_bsn_lacp_stats_request_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_pdu_rx_reply_t *
    of_bsn_pdu_rx_reply_new_(of_version_t version);
extern of_bsn_pdu_rx_reply_t *
    of_bsn_pdu_rx_reply_new_from_message_(of_message_t msg);
extern void of_bsn_pdu_rx_reply_init(
    of_bsn_pdu_rx_reply_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_pdu_rx_request_t *
    of_bsn_pdu_rx_request_new_(of_version_t version);
extern of_bsn_pdu_rx_request_t *
    of_bsn_pdu_rx_request_new_from_message_(of_message_t msg);
extern void of_bsn_pdu_rx_request_init(
    of_bsn_pdu_rx_request_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_pdu_rx_timeout_t *
    of_bsn_pdu_rx_timeout_new_(of_version_t version);
extern of_bsn_pdu_rx_timeout_t *
    of_bsn_pdu_rx_timeout_new_from_message_(of_message_t msg);
extern void of_bsn_pdu_rx_timeout_init(
    of_bsn_pdu_rx_timeout_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_pdu_tx_reply_t *
    of_bsn_pdu_tx_reply_new_(of_version_t version);
extern of_bsn_pdu_tx_reply_t *
    of_bsn_pdu_tx_reply_new_from_message_(of_message_t msg);
extern void of_bsn_pdu_tx_reply_init(
    of_bsn_pdu_tx_reply_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_pdu_tx_request_t *
    of_bsn_pdu_tx_request_new_(of_version_t version);
extern of_bsn_pdu_tx_request_t *
    of_bsn_pdu_tx_request_new_from_message_(of_message_t msg);
extern void of_bsn_pdu_tx_request_init(
    of_bsn_pdu_tx_request_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_port_counter_stats_reply_t *
    of_bsn_port_counter_stats_reply_new_(of_version_t version);
extern of_bsn_port_counter_stats_reply_t *
    of_bsn_port_counter_stats_reply_new_from_message_(of_message_t msg);
extern void of_bsn_port_counter_stats_reply_init(
    of_bsn_port_counter_stats_reply_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_port_counter_stats_request_t *
    of_bsn_port_counter_stats_request_new_(of_version_t version);
extern of_bsn_port_counter_stats_request_t *
    of_bsn_port_counter_stats_request_new_from_message_(of_message_t msg);
extern void of_bsn_port_counter_stats_request_init(
    of_bsn_port_counter_stats_request_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_set_ip_mask_t *
    of_bsn_set_ip_mask_new_(of_version_t version);
extern of_bsn_set_ip_mask_t *
    of_bsn_set_ip_mask_new_from_message_(of_message_t msg);
extern void of_bsn_set_ip_mask_init(
    of_bsn_set_ip_mask_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_set_l2_table_reply_t *
    of_bsn_set_l2_table_reply_new_(of_version_t version);
extern of_bsn_set_l2_table_reply_t *
    of_bsn_set_l2_table_reply_new_from_message_(of_message_t msg);
extern void of_bsn_set_l2_table_reply_init(
    of_bsn_set_l2_table_reply_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_set_l2_table_request_t *
    of_bsn_set_l2_table_request_new_(of_version_t version);
extern of_bsn_set_l2_table_request_t *
    of_bsn_set_l2_table_request_new_from_message_(of_message_t msg);
extern void of_bsn_set_l2_table_request_init(
    of_bsn_set_l2_table_request_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_set_lacp_reply_t *
    of_bsn_set_lacp_reply_new_(of_version_t version);
extern of_bsn_set_lacp_reply_t *
    of_bsn_set_lacp_reply_new_from_message_(of_message_t msg);
extern void of_bsn_set_lacp_reply_init(
    of_bsn_set_lacp_reply_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_set_lacp_request_t *
    of_bsn_set_lacp_request_new_(of_version_t version);
extern of_bsn_set_lacp_request_t *
    of_bsn_set_lacp_request_new_from_message_(of_message_t msg);
extern void of_bsn_set_lacp_request_init(
    of_bsn_set_lacp_request_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_set_mirroring_t *
    of_bsn_set_mirroring_new_(of_version_t version);
extern of_bsn_set_mirroring_t *
    of_bsn_set_mirroring_new_from_message_(of_message_t msg);
extern void of_bsn_set_mirroring_init(
    of_bsn_set_mirroring_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_set_pktin_suppression_reply_t *
    of_bsn_set_pktin_suppression_reply_new_(of_version_t version);
extern of_bsn_set_pktin_suppression_reply_t *
    of_bsn_set_pktin_suppression_reply_new_from_message_(of_message_t msg);
extern void of_bsn_set_pktin_suppression_reply_init(
    of_bsn_set_pktin_suppression_reply_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_set_pktin_suppression_request_t *
    of_bsn_set_pktin_suppression_request_new_(of_version_t version);
extern of_bsn_set_pktin_suppression_request_t *
    of_bsn_set_pktin_suppression_request_new_from_message_(of_message_t msg);
extern void of_bsn_set_pktin_suppression_request_init(
    of_bsn_set_pktin_suppression_request_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_set_switch_pipeline_reply_t *
    of_bsn_set_switch_pipeline_reply_new_(of_version_t version);
extern of_bsn_set_switch_pipeline_reply_t *
    of_bsn_set_switch_pipeline_reply_new_from_message_(of_message_t msg);
extern void of_bsn_set_switch_pipeline_reply_init(
    of_bsn_set_switch_pipeline_reply_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_set_switch_pipeline_request_t *
    of_bsn_set_switch_pipeline_request_new_(of_version_t version);
extern of_bsn_set_switch_pipeline_request_t *
    of_bsn_set_switch_pipeline_request_new_from_message_(of_message_t msg);
extern void of_bsn_set_switch_pipeline_request_init(
    of_bsn_set_switch_pipeline_request_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_shell_command_t *
    of_bsn_shell_command_new_(of_version_t version);
extern of_bsn_shell_command_t *
    of_bsn_shell_command_new_from_message_(of_message_t msg);
extern void of_bsn_shell_command_init(
    of_bsn_shell_command_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_shell_output_t *
    of_bsn_shell_output_new_(of_version_t version);
extern of_bsn_shell_output_t *
    of_bsn_shell_output_new_from_message_(of_message_t msg);
extern void of_bsn_shell_output_init(
    of_bsn_shell_output_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_shell_status_t *
    of_bsn_shell_status_new_(of_version_t version);
extern of_bsn_shell_status_t *
    of_bsn_shell_status_new_from_message_(of_message_t msg);
extern void of_bsn_shell_status_init(
    of_bsn_shell_status_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_stats_reply_t *
    of_bsn_stats_reply_new_(of_version_t version);
extern of_bsn_stats_reply_t *
    of_bsn_stats_reply_new_from_message_(of_message_t msg);
extern void of_bsn_stats_reply_init(
    of_bsn_stats_reply_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_stats_request_t *
    of_bsn_stats_request_new_(of_version_t version);
extern of_bsn_stats_request_t *
    of_bsn_stats_request_new_from_message_(of_message_t msg);
extern void of_bsn_stats_request_init(
    of_bsn_stats_request_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_switch_pipeline_stats_reply_t *
    of_bsn_switch_pipeline_stats_reply_new_(of_version_t version);
extern of_bsn_switch_pipeline_stats_reply_t *
    of_bsn_switch_pipeline_stats_reply_new_from_message_(of_message_t msg);
extern void of_bsn_switch_pipeline_stats_reply_init(
    of_bsn_switch_pipeline_stats_reply_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_switch_pipeline_stats_request_t *
    of_bsn_switch_pipeline_stats_request_new_(of_version_t version);
extern of_bsn_switch_pipeline_stats_request_t *
    of_bsn_switch_pipeline_stats_request_new_from_message_(of_message_t msg);
extern void of_bsn_switch_pipeline_stats_request_init(
    of_bsn_switch_pipeline_stats_request_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_time_reply_t *
    of_bsn_time_reply_new_(of_version_t version);
extern of_bsn_time_reply_t *
    of_bsn_time_reply_new_from_message_(of_message_t msg);
extern void of_bsn_time_reply_init(
    of_bsn_time_reply_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_time_request_t *
    of_bsn_time_request_new_(of_version_t version);
extern of_bsn_time_request_t *
    of_bsn_time_request_new_from_message_(of_message_t msg);
extern void of_bsn_time_request_init(
    of_bsn_time_request_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_virtual_port_create_reply_t *
    of_bsn_virtual_port_create_reply_new_(of_version_t version);
extern of_bsn_virtual_port_create_reply_t *
    of_bsn_virtual_port_create_reply_new_from_message_(of_message_t msg);
extern void of_bsn_virtual_port_create_reply_init(
    of_bsn_virtual_port_create_reply_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_virtual_port_create_request_t *
    of_bsn_virtual_port_create_request_new_(of_version_t version);
extern of_bsn_virtual_port_create_request_t *
    of_bsn_virtual_port_create_request_new_from_message_(of_message_t msg);
extern void of_bsn_virtual_port_create_request_init(
    of_bsn_virtual_port_create_request_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_virtual_port_remove_reply_t *
    of_bsn_virtual_port_remove_reply_new_(of_version_t version);
extern of_bsn_virtual_port_remove_reply_t *
    of_bsn_virtual_port_remove_reply_new_from_message_(of_message_t msg);
extern void of_bsn_virtual_port_remove_reply_init(
    of_bsn_virtual_port_remove_reply_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_virtual_port_remove_request_t *
    of_bsn_virtual_port_remove_request_new_(of_version_t version);
extern of_bsn_virtual_port_remove_request_t *
    of_bsn_virtual_port_remove_request_new_from_message_(of_message_t msg);
extern void of_bsn_virtual_port_remove_request_init(
    of_bsn_virtual_port_remove_request_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_vlan_counter_stats_reply_t *
    of_bsn_vlan_counter_stats_reply_new_(of_version_t version);
extern of_bsn_vlan_counter_stats_reply_t *
    of_bsn_vlan_counter_stats_reply_new_from_message_(of_message_t msg);
extern void of_bsn_vlan_counter_stats_reply_init(
    of_bsn_vlan_counter_stats_reply_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_vlan_counter_stats_request_t *
    of_bsn_vlan_counter_stats_request_new_(of_version_t version);
extern of_bsn_vlan_counter_stats_request_t *
    of_bsn_vlan_counter_stats_request_new_from_message_(of_message_t msg);
extern void of_bsn_vlan_counter_stats_request_init(
    of_bsn_vlan_counter_stats_request_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_desc_stats_reply_t *
    of_desc_stats_reply_new_(of_version_t version);
extern of_desc_stats_reply_t *
    of_desc_stats_reply_new_from_message_(of_message_t msg);
extern void of_desc_stats_reply_init(
    of_desc_stats_reply_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_desc_stats_request_t *
    of_desc_stats_request_new_(of_version_t version);
extern of_desc_stats_request_t *
    of_desc_stats_request_new_from_message_(of_message_t msg);
extern void of_desc_stats_request_init(
    of_desc_stats_request_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_echo_reply_t *
    of_echo_reply_new_(of_version_t version);
extern of_echo_reply_t *
    of_echo_reply_new_from_message_(of_message_t msg);
extern void of_echo_reply_init(
    of_echo_reply_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_echo_request_t *
    of_echo_request_new_(of_version_t version);
extern of_echo_request_t *
    of_echo_request_new_from_message_(of_message_t msg);
extern void of_echo_request_init(
    of_echo_request_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_error_msg_t *
    of_error_msg_new_(of_version_t version);
extern of_error_msg_t *
    of_error_msg_new_from_message_(of_message_t msg);
extern void of_error_msg_init(
    of_error_msg_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_experimenter_t *
    of_experimenter_new_(of_version_t version);
extern of_experimenter_t *
    of_experimenter_new_from_message_(of_message_t msg);
extern void of_experimenter_init(
    of_experimenter_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_experimenter_error_msg_t *
    of_experimenter_error_msg_new_(of_version_t version);
extern of_experimenter_error_msg_t *
    of_experimenter_error_msg_new_from_message_(of_message_t msg);
extern void of_experimenter_error_msg_init(
    of_experimenter_error_msg_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_experimenter_stats_reply_t *
    of_experimenter_stats_reply_new_(of_version_t version);
extern of_experimenter_stats_reply_t *
    of_experimenter_stats_reply_new_from_message_(of_message_t msg);
extern void of_experimenter_stats_reply_init(
    of_experimenter_stats_reply_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_experimenter_stats_request_t *
    of_experimenter_stats_request_new_(of_version_t version);
extern of_experimenter_stats_request_t *
    of_experimenter_stats_request_new_from_message_(of_message_t msg);
extern void of_experimenter_stats_request_init(
    of_experimenter_stats_request_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_features_reply_t *
    of_features_reply_new_(of_version_t version);
extern of_features_reply_t *
    of_features_reply_new_from_message_(of_message_t msg);
extern void of_features_reply_init(
    of_features_reply_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_features_request_t *
    of_features_request_new_(of_version_t version);
extern of_features_request_t *
    of_features_request_new_from_message_(of_message_t msg);
extern void of_features_request_init(
    of_features_request_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_flow_add_t *
    of_flow_add_new_(of_version_t version);
extern of_flow_add_t *
    of_flow_add_new_from_message_(of_message_t msg);
extern void of_flow_add_init(
    of_flow_add_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_flow_delete_t *
    of_flow_delete_new_(of_version_t version);
extern of_flow_delete_t *
    of_flow_delete_new_from_message_(of_message_t msg);
extern void of_flow_delete_init(
    of_flow_delete_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_flow_delete_strict_t *
    of_flow_delete_strict_new_(of_version_t version);
extern of_flow_delete_strict_t *
    of_flow_delete_strict_new_from_message_(of_message_t msg);
extern void of_flow_delete_strict_init(
    of_flow_delete_strict_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_flow_mod_t *
    of_flow_mod_new_(of_version_t version);
extern of_flow_mod_t *
    of_flow_mod_new_from_message_(of_message_t msg);
extern void of_flow_mod_init(
    of_flow_mod_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_flow_mod_failed_error_msg_t *
    of_flow_mod_failed_error_msg_new_(of_version_t version);
extern of_flow_mod_failed_error_msg_t *
    of_flow_mod_failed_error_msg_new_from_message_(of_message_t msg);
extern void of_flow_mod_failed_error_msg_init(
    of_flow_mod_failed_error_msg_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_flow_modify_t *
    of_flow_modify_new_(of_version_t version);
extern of_flow_modify_t *
    of_flow_modify_new_from_message_(of_message_t msg);
extern void of_flow_modify_init(
    of_flow_modify_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_flow_modify_strict_t *
    of_flow_modify_strict_new_(of_version_t version);
extern of_flow_modify_strict_t *
    of_flow_modify_strict_new_from_message_(of_message_t msg);
extern void of_flow_modify_strict_init(
    of_flow_modify_strict_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_flow_removed_t *
    of_flow_removed_new_(of_version_t version);
extern of_flow_removed_t *
    of_flow_removed_new_from_message_(of_message_t msg);
extern void of_flow_removed_init(
    of_flow_removed_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_flow_stats_reply_t *
    of_flow_stats_reply_new_(of_version_t version);
extern of_flow_stats_reply_t *
    of_flow_stats_reply_new_from_message_(of_message_t msg);
extern void of_flow_stats_reply_init(
    of_flow_stats_reply_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_flow_stats_request_t *
    of_flow_stats_request_new_(of_version_t version);
extern of_flow_stats_request_t *
    of_flow_stats_request_new_from_message_(of_message_t msg);
extern void of_flow_stats_request_init(
    of_flow_stats_request_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_get_config_reply_t *
    of_get_config_reply_new_(of_version_t version);
extern of_get_config_reply_t *
    of_get_config_reply_new_from_message_(of_message_t msg);
extern void of_get_config_reply_init(
    of_get_config_reply_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_get_config_request_t *
    of_get_config_request_new_(of_version_t version);
extern of_get_config_request_t *
    of_get_config_request_new_from_message_(of_message_t msg);
extern void of_get_config_request_init(
    of_get_config_request_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_group_add_t *
    of_group_add_new_(of_version_t version);
extern of_group_add_t *
    of_group_add_new_from_message_(of_message_t msg);
extern void of_group_add_init(
    of_group_add_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_group_delete_t *
    of_group_delete_new_(of_version_t version);
extern of_group_delete_t *
    of_group_delete_new_from_message_(of_message_t msg);
extern void of_group_delete_init(
    of_group_delete_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_group_desc_stats_reply_t *
    of_group_desc_stats_reply_new_(of_version_t version);
extern of_group_desc_stats_reply_t *
    of_group_desc_stats_reply_new_from_message_(of_message_t msg);
extern void of_group_desc_stats_reply_init(
    of_group_desc_stats_reply_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_group_desc_stats_request_t *
    of_group_desc_stats_request_new_(of_version_t version);
extern of_group_desc_stats_request_t *
    of_group_desc_stats_request_new_from_message_(of_message_t msg);
extern void of_group_desc_stats_request_init(
    of_group_desc_stats_request_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_group_features_stats_reply_t *
    of_group_features_stats_reply_new_(of_version_t version);
extern of_group_features_stats_reply_t *
    of_group_features_stats_reply_new_from_message_(of_message_t msg);
extern void of_group_features_stats_reply_init(
    of_group_features_stats_reply_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_group_features_stats_request_t *
    of_group_features_stats_request_new_(of_version_t version);
extern of_group_features_stats_request_t *
    of_group_features_stats_request_new_from_message_(of_message_t msg);
extern void of_group_features_stats_request_init(
    of_group_features_stats_request_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_group_mod_t *
    of_group_mod_new_(of_version_t version);
extern of_group_mod_t *
    of_group_mod_new_from_message_(of_message_t msg);
extern void of_group_mod_init(
    of_group_mod_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_group_mod_failed_error_msg_t *
    of_group_mod_failed_error_msg_new_(of_version_t version);
extern of_group_mod_failed_error_msg_t *
    of_group_mod_failed_error_msg_new_from_message_(of_message_t msg);
extern void of_group_mod_failed_error_msg_init(
    of_group_mod_failed_error_msg_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_group_modify_t *
    of_group_modify_new_(of_version_t version);
extern of_group_modify_t *
    of_group_modify_new_from_message_(of_message_t msg);
extern void of_group_modify_init(
    of_group_modify_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_group_stats_reply_t *
    of_group_stats_reply_new_(of_version_t version);
extern of_group_stats_reply_t *
    of_group_stats_reply_new_from_message_(of_message_t msg);
extern void of_group_stats_reply_init(
    of_group_stats_reply_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_group_stats_request_t *
    of_group_stats_request_new_(of_version_t version);
extern of_group_stats_request_t *
    of_group_stats_request_new_from_message_(of_message_t msg);
extern void of_group_stats_request_init(
    of_group_stats_request_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_hello_t *
    of_hello_new_(of_version_t version);
extern of_hello_t *
    of_hello_new_from_message_(of_message_t msg);
extern void of_hello_init(
    of_hello_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_hello_failed_error_msg_t *
    of_hello_failed_error_msg_new_(of_version_t version);
extern of_hello_failed_error_msg_t *
    of_hello_failed_error_msg_new_from_message_(of_message_t msg);
extern void of_hello_failed_error_msg_init(
    of_hello_failed_error_msg_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_meter_config_stats_reply_t *
    of_meter_config_stats_reply_new_(of_version_t version);
extern of_meter_config_stats_reply_t *
    of_meter_config_stats_reply_new_from_message_(of_message_t msg);
extern void of_meter_config_stats_reply_init(
    of_meter_config_stats_reply_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_meter_config_stats_request_t *
    of_meter_config_stats_request_new_(of_version_t version);
extern of_meter_config_stats_request_t *
    of_meter_config_stats_request_new_from_message_(of_message_t msg);
extern void of_meter_config_stats_request_init(
    of_meter_config_stats_request_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_meter_features_stats_reply_t *
    of_meter_features_stats_reply_new_(of_version_t version);
extern of_meter_features_stats_reply_t *
    of_meter_features_stats_reply_new_from_message_(of_message_t msg);
extern void of_meter_features_stats_reply_init(
    of_meter_features_stats_reply_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_meter_features_stats_request_t *
    of_meter_features_stats_request_new_(of_version_t version);
extern of_meter_features_stats_request_t *
    of_meter_features_stats_request_new_from_message_(of_message_t msg);
extern void of_meter_features_stats_request_init(
    of_meter_features_stats_request_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_meter_mod_t *
    of_meter_mod_new_(of_version_t version);
extern of_meter_mod_t *
    of_meter_mod_new_from_message_(of_message_t msg);
extern void of_meter_mod_init(
    of_meter_mod_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_meter_mod_failed_error_msg_t *
    of_meter_mod_failed_error_msg_new_(of_version_t version);
extern of_meter_mod_failed_error_msg_t *
    of_meter_mod_failed_error_msg_new_from_message_(of_message_t msg);
extern void of_meter_mod_failed_error_msg_init(
    of_meter_mod_failed_error_msg_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_meter_stats_reply_t *
    of_meter_stats_reply_new_(of_version_t version);
extern of_meter_stats_reply_t *
    of_meter_stats_reply_new_from_message_(of_message_t msg);
extern void of_meter_stats_reply_init(
    of_meter_stats_reply_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_meter_stats_request_t *
    of_meter_stats_request_new_(of_version_t version);
extern of_meter_stats_request_t *
    of_meter_stats_request_new_from_message_(of_message_t msg);
extern void of_meter_stats_request_init(
    of_meter_stats_request_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_nicira_controller_role_reply_t *
    of_nicira_controller_role_reply_new_(of_version_t version);
extern of_nicira_controller_role_reply_t *
    of_nicira_controller_role_reply_new_from_message_(of_message_t msg);
extern void of_nicira_controller_role_reply_init(
    of_nicira_controller_role_reply_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_nicira_controller_role_request_t *
    of_nicira_controller_role_request_new_(of_version_t version);
extern of_nicira_controller_role_request_t *
    of_nicira_controller_role_request_new_from_message_(of_message_t msg);
extern void of_nicira_controller_role_request_init(
    of_nicira_controller_role_request_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_nicira_header_t *
    of_nicira_header_new_(of_version_t version);
extern of_nicira_header_t *
    of_nicira_header_new_from_message_(of_message_t msg);
extern void of_nicira_header_init(
    of_nicira_header_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_packet_in_t *
    of_packet_in_new_(of_version_t version);
extern of_packet_in_t *
    of_packet_in_new_from_message_(of_message_t msg);
extern void of_packet_in_init(
    of_packet_in_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_packet_out_t *
    of_packet_out_new_(of_version_t version);
extern of_packet_out_t *
    of_packet_out_new_from_message_(of_message_t msg);
extern void of_packet_out_init(
    of_packet_out_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_port_desc_stats_reply_t *
    of_port_desc_stats_reply_new_(of_version_t version);
extern of_port_desc_stats_reply_t *
    of_port_desc_stats_reply_new_from_message_(of_message_t msg);
extern void of_port_desc_stats_reply_init(
    of_port_desc_stats_reply_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_port_desc_stats_request_t *
    of_port_desc_stats_request_new_(of_version_t version);
extern of_port_desc_stats_request_t *
    of_port_desc_stats_request_new_from_message_(of_message_t msg);
extern void of_port_desc_stats_request_init(
    of_port_desc_stats_request_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_port_mod_t *
    of_port_mod_new_(of_version_t version);
extern of_port_mod_t *
    of_port_mod_new_from_message_(of_message_t msg);
extern void of_port_mod_init(
    of_port_mod_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_port_mod_failed_error_msg_t *
    of_port_mod_failed_error_msg_new_(of_version_t version);
extern of_port_mod_failed_error_msg_t *
    of_port_mod_failed_error_msg_new_from_message_(of_message_t msg);
extern void of_port_mod_failed_error_msg_init(
    of_port_mod_failed_error_msg_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_port_stats_reply_t *
    of_port_stats_reply_new_(of_version_t version);
extern of_port_stats_reply_t *
    of_port_stats_reply_new_from_message_(of_message_t msg);
extern void of_port_stats_reply_init(
    of_port_stats_reply_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_port_stats_request_t *
    of_port_stats_request_new_(of_version_t version);
extern of_port_stats_request_t *
    of_port_stats_request_new_from_message_(of_message_t msg);
extern void of_port_stats_request_init(
    of_port_stats_request_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_port_status_t *
    of_port_status_new_(of_version_t version);
extern of_port_status_t *
    of_port_status_new_from_message_(of_message_t msg);
extern void of_port_status_init(
    of_port_status_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_queue_get_config_reply_t *
    of_queue_get_config_reply_new_(of_version_t version);
extern of_queue_get_config_reply_t *
    of_queue_get_config_reply_new_from_message_(of_message_t msg);
extern void of_queue_get_config_reply_init(
    of_queue_get_config_reply_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_queue_get_config_request_t *
    of_queue_get_config_request_new_(of_version_t version);
extern of_queue_get_config_request_t *
    of_queue_get_config_request_new_from_message_(of_message_t msg);
extern void of_queue_get_config_request_init(
    of_queue_get_config_request_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_queue_op_failed_error_msg_t *
    of_queue_op_failed_error_msg_new_(of_version_t version);
extern of_queue_op_failed_error_msg_t *
    of_queue_op_failed_error_msg_new_from_message_(of_message_t msg);
extern void of_queue_op_failed_error_msg_init(
    of_queue_op_failed_error_msg_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_queue_stats_reply_t *
    of_queue_stats_reply_new_(of_version_t version);
extern of_queue_stats_reply_t *
    of_queue_stats_reply_new_from_message_(of_message_t msg);
extern void of_queue_stats_reply_init(
    of_queue_stats_reply_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_queue_stats_request_t *
    of_queue_stats_request_new_(of_version_t version);
extern of_queue_stats_request_t *
    of_queue_stats_request_new_from_message_(of_message_t msg);
extern void of_queue_stats_request_init(
    of_queue_stats_request_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_role_reply_t *
    of_role_reply_new_(of_version_t version);
extern of_role_reply_t *
    of_role_reply_new_from_message_(of_message_t msg);
extern void of_role_reply_init(
    of_role_reply_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_role_request_t *
    of_role_request_new_(of_version_t version);
extern of_role_request_t *
    of_role_request_new_from_message_(of_message_t msg);
extern void of_role_request_init(
    of_role_request_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_role_request_failed_error_msg_t *
    of_role_request_failed_error_msg_new_(of_version_t version);
extern of_role_request_failed_error_msg_t *
    of_role_request_failed_error_msg_new_from_message_(of_message_t msg);
extern void of_role_request_failed_error_msg_init(
    of_role_request_failed_error_msg_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_set_config_t *
    of_set_config_new_(of_version_t version);
extern of_set_config_t *
    of_set_config_new_from_message_(of_message_t msg);
extern void of_set_config_init(
    of_set_config_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_stats_reply_t *
    of_stats_reply_new_(of_version_t version);
extern of_stats_reply_t *
    of_stats_reply_new_from_message_(of_message_t msg);
extern void of_stats_reply_init(
    of_stats_reply_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_stats_request_t *
    of_stats_request_new_(of_version_t version);
extern of_stats_request_t *
    of_stats_request_new_from_message_(of_message_t msg);
extern void of_stats_request_init(
    of_stats_request_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_switch_config_failed_error_msg_t *
    of_switch_config_failed_error_msg_new_(of_version_t version);
extern of_switch_config_failed_error_msg_t *
    of_switch_config_failed_error_msg_new_from_message_(of_message_t msg);
extern void of_switch_config_failed_error_msg_init(
    of_switch_config_failed_error_msg_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_table_features_failed_error_msg_t *
    of_table_features_failed_error_msg_new_(of_version_t version);
extern of_table_features_failed_error_msg_t *
    of_table_features_failed_error_msg_new_from_message_(of_message_t msg);
extern void of_table_features_failed_error_msg_init(
    of_table_features_failed_error_msg_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_table_features_stats_reply_t *
    of_table_features_stats_reply_new_(of_version_t version);
extern of_table_features_stats_reply_t *
    of_table_features_stats_reply_new_from_message_(of_message_t msg);
extern void of_table_features_stats_reply_init(
    of_table_features_stats_reply_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_table_features_stats_request_t *
    of_table_features_stats_request_new_(of_version_t version);
extern of_table_features_stats_request_t *
    of_table_features_stats_request_new_from_message_(of_message_t msg);
extern void of_table_features_stats_request_init(
    of_table_features_stats_request_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_table_mod_t *
    of_table_mod_new_(of_version_t version);
extern of_table_mod_t *
    of_table_mod_new_from_message_(of_message_t msg);
extern void of_table_mod_init(
    of_table_mod_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_table_mod_failed_error_msg_t *
    of_table_mod_failed_error_msg_new_(of_version_t version);
extern of_table_mod_failed_error_msg_t *
    of_table_mod_failed_error_msg_new_from_message_(of_message_t msg);
extern void of_table_mod_failed_error_msg_init(
    of_table_mod_failed_error_msg_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_table_stats_reply_t *
    of_table_stats_reply_new_(of_version_t version);
extern of_table_stats_reply_t *
    of_table_stats_reply_new_from_message_(of_message_t msg);
extern void of_table_stats_reply_init(
    of_table_stats_reply_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_table_stats_request_t *
    of_table_stats_request_new_(of_version_t version);
extern of_table_stats_request_t *
    of_table_stats_request_new_from_message_(of_message_t msg);
extern void of_table_stats_request_init(
    of_table_stats_request_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_t *
    of_action_new_(of_version_t version);
extern void of_action_init(
    of_action_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_bsn_t *
    of_action_bsn_new_(of_version_t version);
extern void of_action_bsn_init(
    of_action_bsn_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_bsn_mirror_t *
    of_action_bsn_mirror_new_(of_version_t version);
extern void of_action_bsn_mirror_init(
    of_action_bsn_mirror_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_bsn_set_tunnel_dst_t *
    of_action_bsn_set_tunnel_dst_new_(of_version_t version);
extern void of_action_bsn_set_tunnel_dst_init(
    of_action_bsn_set_tunnel_dst_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_copy_ttl_in_t *
    of_action_copy_ttl_in_new_(of_version_t version);
extern void of_action_copy_ttl_in_init(
    of_action_copy_ttl_in_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_copy_ttl_out_t *
    of_action_copy_ttl_out_new_(of_version_t version);
extern void of_action_copy_ttl_out_init(
    of_action_copy_ttl_out_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_dec_mpls_ttl_t *
    of_action_dec_mpls_ttl_new_(of_version_t version);
extern void of_action_dec_mpls_ttl_init(
    of_action_dec_mpls_ttl_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_dec_nw_ttl_t *
    of_action_dec_nw_ttl_new_(of_version_t version);
extern void of_action_dec_nw_ttl_init(
    of_action_dec_nw_ttl_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_enqueue_t *
    of_action_enqueue_new_(of_version_t version);
extern void of_action_enqueue_init(
    of_action_enqueue_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_experimenter_t *
    of_action_experimenter_new_(of_version_t version);
extern void of_action_experimenter_init(
    of_action_experimenter_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_group_t *
    of_action_group_new_(of_version_t version);
extern void of_action_group_init(
    of_action_group_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_header_t *
    of_action_header_new_(of_version_t version);
extern void of_action_header_init(
    of_action_header_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_id_t *
    of_action_id_new_(of_version_t version);
extern void of_action_id_init(
    of_action_id_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_id_bsn_t *
    of_action_id_bsn_new_(of_version_t version);
extern void of_action_id_bsn_init(
    of_action_id_bsn_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_id_bsn_mirror_t *
    of_action_id_bsn_mirror_new_(of_version_t version);
extern void of_action_id_bsn_mirror_init(
    of_action_id_bsn_mirror_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_id_bsn_set_tunnel_dst_t *
    of_action_id_bsn_set_tunnel_dst_new_(of_version_t version);
extern void of_action_id_bsn_set_tunnel_dst_init(
    of_action_id_bsn_set_tunnel_dst_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_id_copy_ttl_in_t *
    of_action_id_copy_ttl_in_new_(of_version_t version);
extern void of_action_id_copy_ttl_in_init(
    of_action_id_copy_ttl_in_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_id_copy_ttl_out_t *
    of_action_id_copy_ttl_out_new_(of_version_t version);
extern void of_action_id_copy_ttl_out_init(
    of_action_id_copy_ttl_out_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_id_dec_mpls_ttl_t *
    of_action_id_dec_mpls_ttl_new_(of_version_t version);
extern void of_action_id_dec_mpls_ttl_init(
    of_action_id_dec_mpls_ttl_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_id_dec_nw_ttl_t *
    of_action_id_dec_nw_ttl_new_(of_version_t version);
extern void of_action_id_dec_nw_ttl_init(
    of_action_id_dec_nw_ttl_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_id_experimenter_t *
    of_action_id_experimenter_new_(of_version_t version);
extern void of_action_id_experimenter_init(
    of_action_id_experimenter_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_id_group_t *
    of_action_id_group_new_(of_version_t version);
extern void of_action_id_group_init(
    of_action_id_group_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_id_header_t *
    of_action_id_header_new_(of_version_t version);
extern void of_action_id_header_init(
    of_action_id_header_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_id_nicira_t *
    of_action_id_nicira_new_(of_version_t version);
extern void of_action_id_nicira_init(
    of_action_id_nicira_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_id_nicira_dec_ttl_t *
    of_action_id_nicira_dec_ttl_new_(of_version_t version);
extern void of_action_id_nicira_dec_ttl_init(
    of_action_id_nicira_dec_ttl_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_id_output_t *
    of_action_id_output_new_(of_version_t version);
extern void of_action_id_output_init(
    of_action_id_output_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_id_pop_mpls_t *
    of_action_id_pop_mpls_new_(of_version_t version);
extern void of_action_id_pop_mpls_init(
    of_action_id_pop_mpls_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_id_pop_pbb_t *
    of_action_id_pop_pbb_new_(of_version_t version);
extern void of_action_id_pop_pbb_init(
    of_action_id_pop_pbb_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_id_pop_vlan_t *
    of_action_id_pop_vlan_new_(of_version_t version);
extern void of_action_id_pop_vlan_init(
    of_action_id_pop_vlan_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_id_push_mpls_t *
    of_action_id_push_mpls_new_(of_version_t version);
extern void of_action_id_push_mpls_init(
    of_action_id_push_mpls_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_id_push_pbb_t *
    of_action_id_push_pbb_new_(of_version_t version);
extern void of_action_id_push_pbb_init(
    of_action_id_push_pbb_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_id_push_vlan_t *
    of_action_id_push_vlan_new_(of_version_t version);
extern void of_action_id_push_vlan_init(
    of_action_id_push_vlan_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_id_set_field_t *
    of_action_id_set_field_new_(of_version_t version);
extern void of_action_id_set_field_init(
    of_action_id_set_field_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_id_set_mpls_ttl_t *
    of_action_id_set_mpls_ttl_new_(of_version_t version);
extern void of_action_id_set_mpls_ttl_init(
    of_action_id_set_mpls_ttl_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_id_set_nw_ttl_t *
    of_action_id_set_nw_ttl_new_(of_version_t version);
extern void of_action_id_set_nw_ttl_init(
    of_action_id_set_nw_ttl_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_id_set_queue_t *
    of_action_id_set_queue_new_(of_version_t version);
extern void of_action_id_set_queue_init(
    of_action_id_set_queue_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_nicira_t *
    of_action_nicira_new_(of_version_t version);
extern void of_action_nicira_init(
    of_action_nicira_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_nicira_dec_ttl_t *
    of_action_nicira_dec_ttl_new_(of_version_t version);
extern void of_action_nicira_dec_ttl_init(
    of_action_nicira_dec_ttl_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_output_t *
    of_action_output_new_(of_version_t version);
extern void of_action_output_init(
    of_action_output_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_pop_mpls_t *
    of_action_pop_mpls_new_(of_version_t version);
extern void of_action_pop_mpls_init(
    of_action_pop_mpls_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_pop_pbb_t *
    of_action_pop_pbb_new_(of_version_t version);
extern void of_action_pop_pbb_init(
    of_action_pop_pbb_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_pop_vlan_t *
    of_action_pop_vlan_new_(of_version_t version);
extern void of_action_pop_vlan_init(
    of_action_pop_vlan_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_push_mpls_t *
    of_action_push_mpls_new_(of_version_t version);
extern void of_action_push_mpls_init(
    of_action_push_mpls_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_push_pbb_t *
    of_action_push_pbb_new_(of_version_t version);
extern void of_action_push_pbb_init(
    of_action_push_pbb_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_push_vlan_t *
    of_action_push_vlan_new_(of_version_t version);
extern void of_action_push_vlan_init(
    of_action_push_vlan_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_set_dl_dst_t *
    of_action_set_dl_dst_new_(of_version_t version);
extern void of_action_set_dl_dst_init(
    of_action_set_dl_dst_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_set_dl_src_t *
    of_action_set_dl_src_new_(of_version_t version);
extern void of_action_set_dl_src_init(
    of_action_set_dl_src_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_set_field_t *
    of_action_set_field_new_(of_version_t version);
extern void of_action_set_field_init(
    of_action_set_field_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_set_mpls_label_t *
    of_action_set_mpls_label_new_(of_version_t version);
extern void of_action_set_mpls_label_init(
    of_action_set_mpls_label_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_set_mpls_tc_t *
    of_action_set_mpls_tc_new_(of_version_t version);
extern void of_action_set_mpls_tc_init(
    of_action_set_mpls_tc_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_set_mpls_ttl_t *
    of_action_set_mpls_ttl_new_(of_version_t version);
extern void of_action_set_mpls_ttl_init(
    of_action_set_mpls_ttl_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_set_nw_dst_t *
    of_action_set_nw_dst_new_(of_version_t version);
extern void of_action_set_nw_dst_init(
    of_action_set_nw_dst_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_set_nw_ecn_t *
    of_action_set_nw_ecn_new_(of_version_t version);
extern void of_action_set_nw_ecn_init(
    of_action_set_nw_ecn_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_set_nw_src_t *
    of_action_set_nw_src_new_(of_version_t version);
extern void of_action_set_nw_src_init(
    of_action_set_nw_src_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_set_nw_tos_t *
    of_action_set_nw_tos_new_(of_version_t version);
extern void of_action_set_nw_tos_init(
    of_action_set_nw_tos_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_set_nw_ttl_t *
    of_action_set_nw_ttl_new_(of_version_t version);
extern void of_action_set_nw_ttl_init(
    of_action_set_nw_ttl_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_set_queue_t *
    of_action_set_queue_new_(of_version_t version);
extern void of_action_set_queue_init(
    of_action_set_queue_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_set_tp_dst_t *
    of_action_set_tp_dst_new_(of_version_t version);
extern void of_action_set_tp_dst_init(
    of_action_set_tp_dst_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_set_tp_src_t *
    of_action_set_tp_src_new_(of_version_t version);
extern void of_action_set_tp_src_init(
    of_action_set_tp_src_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_set_vlan_pcp_t *
    of_action_set_vlan_pcp_new_(of_version_t version);
extern void of_action_set_vlan_pcp_init(
    of_action_set_vlan_pcp_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_set_vlan_vid_t *
    of_action_set_vlan_vid_new_(of_version_t version);
extern void of_action_set_vlan_vid_init(
    of_action_set_vlan_vid_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_action_strip_vlan_t *
    of_action_strip_vlan_new_(of_version_t version);
extern void of_action_strip_vlan_init(
    of_action_strip_vlan_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_interface_t *
    of_bsn_interface_new_(of_version_t version);
extern void of_bsn_interface_init(
    of_bsn_interface_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_lacp_stats_entry_t *
    of_bsn_lacp_stats_entry_new_(of_version_t version);
extern void of_bsn_lacp_stats_entry_init(
    of_bsn_lacp_stats_entry_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_port_counter_stats_entry_t *
    of_bsn_port_counter_stats_entry_new_(of_version_t version);
extern void of_bsn_port_counter_stats_entry_init(
    of_bsn_port_counter_stats_entry_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_switch_pipeline_stats_entry_t *
    of_bsn_switch_pipeline_stats_entry_new_(of_version_t version);
extern void of_bsn_switch_pipeline_stats_entry_init(
    of_bsn_switch_pipeline_stats_entry_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_vlan_counter_stats_entry_t *
    of_bsn_vlan_counter_stats_entry_new_(of_version_t version);
extern void of_bsn_vlan_counter_stats_entry_init(
    of_bsn_vlan_counter_stats_entry_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_vport_t *
    of_bsn_vport_new_(of_version_t version);
extern void of_bsn_vport_init(
    of_bsn_vport_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_vport_header_t *
    of_bsn_vport_header_new_(of_version_t version);
extern void of_bsn_vport_header_init(
    of_bsn_vport_header_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bsn_vport_q_in_q_t *
    of_bsn_vport_q_in_q_new_(of_version_t version);
extern void of_bsn_vport_q_in_q_init(
    of_bsn_vport_q_in_q_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bucket_t *
    of_bucket_new_(of_version_t version);
extern void of_bucket_init(
    of_bucket_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_bucket_counter_t *
    of_bucket_counter_new_(of_version_t version);
extern void of_bucket_counter_init(
    of_bucket_counter_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_experimenter_stats_header_t *
    of_experimenter_stats_header_new_(of_version_t version);
extern void of_experimenter_stats_header_init(
    of_experimenter_stats_header_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_flow_stats_entry_t *
    of_flow_stats_entry_new_(of_version_t version);
extern void of_flow_stats_entry_init(
    of_flow_stats_entry_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_group_desc_stats_entry_t *
    of_group_desc_stats_entry_new_(of_version_t version);
extern void of_group_desc_stats_entry_init(
    of_group_desc_stats_entry_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_group_stats_entry_t *
    of_group_stats_entry_new_(of_version_t version);
extern void of_group_stats_entry_init(
    of_group_stats_entry_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_header_t *
    of_header_new_(of_version_t version);
extern void of_header_init(
    of_header_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_hello_elem_t *
    of_hello_elem_new_(of_version_t version);
extern void of_hello_elem_init(
    of_hello_elem_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_hello_elem_header_t *
    of_hello_elem_header_new_(of_version_t version);
extern void of_hello_elem_header_init(
    of_hello_elem_header_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_hello_elem_versionbitmap_t *
    of_hello_elem_versionbitmap_new_(of_version_t version);
extern void of_hello_elem_versionbitmap_init(
    of_hello_elem_versionbitmap_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_instruction_t *
    of_instruction_new_(of_version_t version);
extern void of_instruction_init(
    of_instruction_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_instruction_apply_actions_t *
    of_instruction_apply_actions_new_(of_version_t version);
extern void of_instruction_apply_actions_init(
    of_instruction_apply_actions_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_instruction_bsn_t *
    of_instruction_bsn_new_(of_version_t version);
extern void of_instruction_bsn_init(
    of_instruction_bsn_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_instruction_bsn_disable_src_mac_check_t *
    of_instruction_bsn_disable_src_mac_check_new_(of_version_t version);
extern void of_instruction_bsn_disable_src_mac_check_init(
    of_instruction_bsn_disable_src_mac_check_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_instruction_clear_actions_t *
    of_instruction_clear_actions_new_(of_version_t version);
extern void of_instruction_clear_actions_init(
    of_instruction_clear_actions_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_instruction_experimenter_t *
    of_instruction_experimenter_new_(of_version_t version);
extern void of_instruction_experimenter_init(
    of_instruction_experimenter_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_instruction_goto_table_t *
    of_instruction_goto_table_new_(of_version_t version);
extern void of_instruction_goto_table_init(
    of_instruction_goto_table_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_instruction_header_t *
    of_instruction_header_new_(of_version_t version);
extern void of_instruction_header_init(
    of_instruction_header_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_instruction_id_t *
    of_instruction_id_new_(of_version_t version);
extern void of_instruction_id_init(
    of_instruction_id_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_instruction_id_apply_actions_t *
    of_instruction_id_apply_actions_new_(of_version_t version);
extern void of_instruction_id_apply_actions_init(
    of_instruction_id_apply_actions_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_instruction_id_bsn_t *
    of_instruction_id_bsn_new_(of_version_t version);
extern void of_instruction_id_bsn_init(
    of_instruction_id_bsn_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_instruction_id_bsn_disable_src_mac_check_t *
    of_instruction_id_bsn_disable_src_mac_check_new_(of_version_t version);
extern void of_instruction_id_bsn_disable_src_mac_check_init(
    of_instruction_id_bsn_disable_src_mac_check_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_instruction_id_clear_actions_t *
    of_instruction_id_clear_actions_new_(of_version_t version);
extern void of_instruction_id_clear_actions_init(
    of_instruction_id_clear_actions_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_instruction_id_experimenter_t *
    of_instruction_id_experimenter_new_(of_version_t version);
extern void of_instruction_id_experimenter_init(
    of_instruction_id_experimenter_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_instruction_id_goto_table_t *
    of_instruction_id_goto_table_new_(of_version_t version);
extern void of_instruction_id_goto_table_init(
    of_instruction_id_goto_table_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_instruction_id_header_t *
    of_instruction_id_header_new_(of_version_t version);
extern void of_instruction_id_header_init(
    of_instruction_id_header_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_instruction_id_meter_t *
    of_instruction_id_meter_new_(of_version_t version);
extern void of_instruction_id_meter_init(
    of_instruction_id_meter_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_instruction_id_write_actions_t *
    of_instruction_id_write_actions_new_(of_version_t version);
extern void of_instruction_id_write_actions_init(
    of_instruction_id_write_actions_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_instruction_id_write_metadata_t *
    of_instruction_id_write_metadata_new_(of_version_t version);
extern void of_instruction_id_write_metadata_init(
    of_instruction_id_write_metadata_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_instruction_meter_t *
    of_instruction_meter_new_(of_version_t version);
extern void of_instruction_meter_init(
    of_instruction_meter_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_instruction_write_actions_t *
    of_instruction_write_actions_new_(of_version_t version);
extern void of_instruction_write_actions_init(
    of_instruction_write_actions_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_instruction_write_metadata_t *
    of_instruction_write_metadata_new_(of_version_t version);
extern void of_instruction_write_metadata_init(
    of_instruction_write_metadata_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_match_v1_t *
    of_match_v1_new_(of_version_t version);
extern void of_match_v1_init(
    of_match_v1_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_match_v2_t *
    of_match_v2_new_(of_version_t version);
extern void of_match_v2_init(
    of_match_v2_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_match_v3_t *
    of_match_v3_new_(of_version_t version);
extern void of_match_v3_init(
    of_match_v3_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_meter_band_t *
    of_meter_band_new_(of_version_t version);
extern void of_meter_band_init(
    of_meter_band_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_meter_band_drop_t *
    of_meter_band_drop_new_(of_version_t version);
extern void of_meter_band_drop_init(
    of_meter_band_drop_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_meter_band_dscp_remark_t *
    of_meter_band_dscp_remark_new_(of_version_t version);
extern void of_meter_band_dscp_remark_init(
    of_meter_band_dscp_remark_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_meter_band_experimenter_t *
    of_meter_band_experimenter_new_(of_version_t version);
extern void of_meter_band_experimenter_init(
    of_meter_band_experimenter_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_meter_band_header_t *
    of_meter_band_header_new_(of_version_t version);
extern void of_meter_band_header_init(
    of_meter_band_header_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_meter_band_stats_t *
    of_meter_band_stats_new_(of_version_t version);
extern void of_meter_band_stats_init(
    of_meter_band_stats_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_meter_config_t *
    of_meter_config_new_(of_version_t version);
extern void of_meter_config_init(
    of_meter_config_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_meter_features_t *
    of_meter_features_new_(of_version_t version);
extern void of_meter_features_init(
    of_meter_features_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_meter_stats_t *
    of_meter_stats_new_(of_version_t version);
extern void of_meter_stats_init(
    of_meter_stats_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_t *
    of_oxm_new_(of_version_t version);
extern void of_oxm_init(
    of_oxm_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_arp_op_t *
    of_oxm_arp_op_new_(of_version_t version);
extern void of_oxm_arp_op_init(
    of_oxm_arp_op_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_arp_op_masked_t *
    of_oxm_arp_op_masked_new_(of_version_t version);
extern void of_oxm_arp_op_masked_init(
    of_oxm_arp_op_masked_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_arp_sha_t *
    of_oxm_arp_sha_new_(of_version_t version);
extern void of_oxm_arp_sha_init(
    of_oxm_arp_sha_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_arp_sha_masked_t *
    of_oxm_arp_sha_masked_new_(of_version_t version);
extern void of_oxm_arp_sha_masked_init(
    of_oxm_arp_sha_masked_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_arp_spa_t *
    of_oxm_arp_spa_new_(of_version_t version);
extern void of_oxm_arp_spa_init(
    of_oxm_arp_spa_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_arp_spa_masked_t *
    of_oxm_arp_spa_masked_new_(of_version_t version);
extern void of_oxm_arp_spa_masked_init(
    of_oxm_arp_spa_masked_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_arp_tha_t *
    of_oxm_arp_tha_new_(of_version_t version);
extern void of_oxm_arp_tha_init(
    of_oxm_arp_tha_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_arp_tha_masked_t *
    of_oxm_arp_tha_masked_new_(of_version_t version);
extern void of_oxm_arp_tha_masked_init(
    of_oxm_arp_tha_masked_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_arp_tpa_t *
    of_oxm_arp_tpa_new_(of_version_t version);
extern void of_oxm_arp_tpa_init(
    of_oxm_arp_tpa_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_arp_tpa_masked_t *
    of_oxm_arp_tpa_masked_new_(of_version_t version);
extern void of_oxm_arp_tpa_masked_init(
    of_oxm_arp_tpa_masked_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_bsn_global_vrf_allowed_t *
    of_oxm_bsn_global_vrf_allowed_new_(of_version_t version);
extern void of_oxm_bsn_global_vrf_allowed_init(
    of_oxm_bsn_global_vrf_allowed_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_bsn_global_vrf_allowed_masked_t *
    of_oxm_bsn_global_vrf_allowed_masked_new_(of_version_t version);
extern void of_oxm_bsn_global_vrf_allowed_masked_init(
    of_oxm_bsn_global_vrf_allowed_masked_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_bsn_in_ports_128_t *
    of_oxm_bsn_in_ports_128_new_(of_version_t version);
extern void of_oxm_bsn_in_ports_128_init(
    of_oxm_bsn_in_ports_128_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_bsn_in_ports_128_masked_t *
    of_oxm_bsn_in_ports_128_masked_new_(of_version_t version);
extern void of_oxm_bsn_in_ports_128_masked_init(
    of_oxm_bsn_in_ports_128_masked_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_bsn_l3_dst_class_id_t *
    of_oxm_bsn_l3_dst_class_id_new_(of_version_t version);
extern void of_oxm_bsn_l3_dst_class_id_init(
    of_oxm_bsn_l3_dst_class_id_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_bsn_l3_dst_class_id_masked_t *
    of_oxm_bsn_l3_dst_class_id_masked_new_(of_version_t version);
extern void of_oxm_bsn_l3_dst_class_id_masked_init(
    of_oxm_bsn_l3_dst_class_id_masked_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_bsn_l3_interface_class_id_t *
    of_oxm_bsn_l3_interface_class_id_new_(of_version_t version);
extern void of_oxm_bsn_l3_interface_class_id_init(
    of_oxm_bsn_l3_interface_class_id_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_bsn_l3_interface_class_id_masked_t *
    of_oxm_bsn_l3_interface_class_id_masked_new_(of_version_t version);
extern void of_oxm_bsn_l3_interface_class_id_masked_init(
    of_oxm_bsn_l3_interface_class_id_masked_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_bsn_l3_src_class_id_t *
    of_oxm_bsn_l3_src_class_id_new_(of_version_t version);
extern void of_oxm_bsn_l3_src_class_id_init(
    of_oxm_bsn_l3_src_class_id_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_bsn_l3_src_class_id_masked_t *
    of_oxm_bsn_l3_src_class_id_masked_new_(of_version_t version);
extern void of_oxm_bsn_l3_src_class_id_masked_init(
    of_oxm_bsn_l3_src_class_id_masked_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_bsn_lag_id_t *
    of_oxm_bsn_lag_id_new_(of_version_t version);
extern void of_oxm_bsn_lag_id_init(
    of_oxm_bsn_lag_id_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_bsn_lag_id_masked_t *
    of_oxm_bsn_lag_id_masked_new_(of_version_t version);
extern void of_oxm_bsn_lag_id_masked_init(
    of_oxm_bsn_lag_id_masked_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_bsn_vrf_t *
    of_oxm_bsn_vrf_new_(of_version_t version);
extern void of_oxm_bsn_vrf_init(
    of_oxm_bsn_vrf_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_bsn_vrf_masked_t *
    of_oxm_bsn_vrf_masked_new_(of_version_t version);
extern void of_oxm_bsn_vrf_masked_init(
    of_oxm_bsn_vrf_masked_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_eth_dst_t *
    of_oxm_eth_dst_new_(of_version_t version);
extern void of_oxm_eth_dst_init(
    of_oxm_eth_dst_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_eth_dst_masked_t *
    of_oxm_eth_dst_masked_new_(of_version_t version);
extern void of_oxm_eth_dst_masked_init(
    of_oxm_eth_dst_masked_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_eth_src_t *
    of_oxm_eth_src_new_(of_version_t version);
extern void of_oxm_eth_src_init(
    of_oxm_eth_src_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_eth_src_masked_t *
    of_oxm_eth_src_masked_new_(of_version_t version);
extern void of_oxm_eth_src_masked_init(
    of_oxm_eth_src_masked_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_eth_type_t *
    of_oxm_eth_type_new_(of_version_t version);
extern void of_oxm_eth_type_init(
    of_oxm_eth_type_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_eth_type_masked_t *
    of_oxm_eth_type_masked_new_(of_version_t version);
extern void of_oxm_eth_type_masked_init(
    of_oxm_eth_type_masked_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_header_t *
    of_oxm_header_new_(of_version_t version);
extern void of_oxm_header_init(
    of_oxm_header_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_icmpv4_code_t *
    of_oxm_icmpv4_code_new_(of_version_t version);
extern void of_oxm_icmpv4_code_init(
    of_oxm_icmpv4_code_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_icmpv4_code_masked_t *
    of_oxm_icmpv4_code_masked_new_(of_version_t version);
extern void of_oxm_icmpv4_code_masked_init(
    of_oxm_icmpv4_code_masked_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_icmpv4_type_t *
    of_oxm_icmpv4_type_new_(of_version_t version);
extern void of_oxm_icmpv4_type_init(
    of_oxm_icmpv4_type_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_icmpv4_type_masked_t *
    of_oxm_icmpv4_type_masked_new_(of_version_t version);
extern void of_oxm_icmpv4_type_masked_init(
    of_oxm_icmpv4_type_masked_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_icmpv6_code_t *
    of_oxm_icmpv6_code_new_(of_version_t version);
extern void of_oxm_icmpv6_code_init(
    of_oxm_icmpv6_code_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_icmpv6_code_masked_t *
    of_oxm_icmpv6_code_masked_new_(of_version_t version);
extern void of_oxm_icmpv6_code_masked_init(
    of_oxm_icmpv6_code_masked_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_icmpv6_type_t *
    of_oxm_icmpv6_type_new_(of_version_t version);
extern void of_oxm_icmpv6_type_init(
    of_oxm_icmpv6_type_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_icmpv6_type_masked_t *
    of_oxm_icmpv6_type_masked_new_(of_version_t version);
extern void of_oxm_icmpv6_type_masked_init(
    of_oxm_icmpv6_type_masked_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_in_phy_port_t *
    of_oxm_in_phy_port_new_(of_version_t version);
extern void of_oxm_in_phy_port_init(
    of_oxm_in_phy_port_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_in_phy_port_masked_t *
    of_oxm_in_phy_port_masked_new_(of_version_t version);
extern void of_oxm_in_phy_port_masked_init(
    of_oxm_in_phy_port_masked_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_in_port_t *
    of_oxm_in_port_new_(of_version_t version);
extern void of_oxm_in_port_init(
    of_oxm_in_port_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_in_port_masked_t *
    of_oxm_in_port_masked_new_(of_version_t version);
extern void of_oxm_in_port_masked_init(
    of_oxm_in_port_masked_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_ip_dscp_t *
    of_oxm_ip_dscp_new_(of_version_t version);
extern void of_oxm_ip_dscp_init(
    of_oxm_ip_dscp_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_ip_dscp_masked_t *
    of_oxm_ip_dscp_masked_new_(of_version_t version);
extern void of_oxm_ip_dscp_masked_init(
    of_oxm_ip_dscp_masked_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_ip_ecn_t *
    of_oxm_ip_ecn_new_(of_version_t version);
extern void of_oxm_ip_ecn_init(
    of_oxm_ip_ecn_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_ip_ecn_masked_t *
    of_oxm_ip_ecn_masked_new_(of_version_t version);
extern void of_oxm_ip_ecn_masked_init(
    of_oxm_ip_ecn_masked_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_ip_proto_t *
    of_oxm_ip_proto_new_(of_version_t version);
extern void of_oxm_ip_proto_init(
    of_oxm_ip_proto_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_ip_proto_masked_t *
    of_oxm_ip_proto_masked_new_(of_version_t version);
extern void of_oxm_ip_proto_masked_init(
    of_oxm_ip_proto_masked_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_ipv4_dst_t *
    of_oxm_ipv4_dst_new_(of_version_t version);
extern void of_oxm_ipv4_dst_init(
    of_oxm_ipv4_dst_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_ipv4_dst_masked_t *
    of_oxm_ipv4_dst_masked_new_(of_version_t version);
extern void of_oxm_ipv4_dst_masked_init(
    of_oxm_ipv4_dst_masked_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_ipv4_src_t *
    of_oxm_ipv4_src_new_(of_version_t version);
extern void of_oxm_ipv4_src_init(
    of_oxm_ipv4_src_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_ipv4_src_masked_t *
    of_oxm_ipv4_src_masked_new_(of_version_t version);
extern void of_oxm_ipv4_src_masked_init(
    of_oxm_ipv4_src_masked_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_ipv6_dst_t *
    of_oxm_ipv6_dst_new_(of_version_t version);
extern void of_oxm_ipv6_dst_init(
    of_oxm_ipv6_dst_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_ipv6_dst_masked_t *
    of_oxm_ipv6_dst_masked_new_(of_version_t version);
extern void of_oxm_ipv6_dst_masked_init(
    of_oxm_ipv6_dst_masked_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_ipv6_flabel_t *
    of_oxm_ipv6_flabel_new_(of_version_t version);
extern void of_oxm_ipv6_flabel_init(
    of_oxm_ipv6_flabel_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_ipv6_flabel_masked_t *
    of_oxm_ipv6_flabel_masked_new_(of_version_t version);
extern void of_oxm_ipv6_flabel_masked_init(
    of_oxm_ipv6_flabel_masked_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_ipv6_nd_sll_t *
    of_oxm_ipv6_nd_sll_new_(of_version_t version);
extern void of_oxm_ipv6_nd_sll_init(
    of_oxm_ipv6_nd_sll_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_ipv6_nd_sll_masked_t *
    of_oxm_ipv6_nd_sll_masked_new_(of_version_t version);
extern void of_oxm_ipv6_nd_sll_masked_init(
    of_oxm_ipv6_nd_sll_masked_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_ipv6_nd_target_t *
    of_oxm_ipv6_nd_target_new_(of_version_t version);
extern void of_oxm_ipv6_nd_target_init(
    of_oxm_ipv6_nd_target_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_ipv6_nd_target_masked_t *
    of_oxm_ipv6_nd_target_masked_new_(of_version_t version);
extern void of_oxm_ipv6_nd_target_masked_init(
    of_oxm_ipv6_nd_target_masked_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_ipv6_nd_tll_t *
    of_oxm_ipv6_nd_tll_new_(of_version_t version);
extern void of_oxm_ipv6_nd_tll_init(
    of_oxm_ipv6_nd_tll_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_ipv6_nd_tll_masked_t *
    of_oxm_ipv6_nd_tll_masked_new_(of_version_t version);
extern void of_oxm_ipv6_nd_tll_masked_init(
    of_oxm_ipv6_nd_tll_masked_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_ipv6_src_t *
    of_oxm_ipv6_src_new_(of_version_t version);
extern void of_oxm_ipv6_src_init(
    of_oxm_ipv6_src_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_ipv6_src_masked_t *
    of_oxm_ipv6_src_masked_new_(of_version_t version);
extern void of_oxm_ipv6_src_masked_init(
    of_oxm_ipv6_src_masked_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_metadata_t *
    of_oxm_metadata_new_(of_version_t version);
extern void of_oxm_metadata_init(
    of_oxm_metadata_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_metadata_masked_t *
    of_oxm_metadata_masked_new_(of_version_t version);
extern void of_oxm_metadata_masked_init(
    of_oxm_metadata_masked_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_mpls_label_t *
    of_oxm_mpls_label_new_(of_version_t version);
extern void of_oxm_mpls_label_init(
    of_oxm_mpls_label_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_mpls_label_masked_t *
    of_oxm_mpls_label_masked_new_(of_version_t version);
extern void of_oxm_mpls_label_masked_init(
    of_oxm_mpls_label_masked_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_mpls_tc_t *
    of_oxm_mpls_tc_new_(of_version_t version);
extern void of_oxm_mpls_tc_init(
    of_oxm_mpls_tc_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_mpls_tc_masked_t *
    of_oxm_mpls_tc_masked_new_(of_version_t version);
extern void of_oxm_mpls_tc_masked_init(
    of_oxm_mpls_tc_masked_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_sctp_dst_t *
    of_oxm_sctp_dst_new_(of_version_t version);
extern void of_oxm_sctp_dst_init(
    of_oxm_sctp_dst_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_sctp_dst_masked_t *
    of_oxm_sctp_dst_masked_new_(of_version_t version);
extern void of_oxm_sctp_dst_masked_init(
    of_oxm_sctp_dst_masked_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_sctp_src_t *
    of_oxm_sctp_src_new_(of_version_t version);
extern void of_oxm_sctp_src_init(
    of_oxm_sctp_src_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_sctp_src_masked_t *
    of_oxm_sctp_src_masked_new_(of_version_t version);
extern void of_oxm_sctp_src_masked_init(
    of_oxm_sctp_src_masked_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_tcp_dst_t *
    of_oxm_tcp_dst_new_(of_version_t version);
extern void of_oxm_tcp_dst_init(
    of_oxm_tcp_dst_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_tcp_dst_masked_t *
    of_oxm_tcp_dst_masked_new_(of_version_t version);
extern void of_oxm_tcp_dst_masked_init(
    of_oxm_tcp_dst_masked_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_tcp_src_t *
    of_oxm_tcp_src_new_(of_version_t version);
extern void of_oxm_tcp_src_init(
    of_oxm_tcp_src_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_tcp_src_masked_t *
    of_oxm_tcp_src_masked_new_(of_version_t version);
extern void of_oxm_tcp_src_masked_init(
    of_oxm_tcp_src_masked_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_udp_dst_t *
    of_oxm_udp_dst_new_(of_version_t version);
extern void of_oxm_udp_dst_init(
    of_oxm_udp_dst_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_udp_dst_masked_t *
    of_oxm_udp_dst_masked_new_(of_version_t version);
extern void of_oxm_udp_dst_masked_init(
    of_oxm_udp_dst_masked_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_udp_src_t *
    of_oxm_udp_src_new_(of_version_t version);
extern void of_oxm_udp_src_init(
    of_oxm_udp_src_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_udp_src_masked_t *
    of_oxm_udp_src_masked_new_(of_version_t version);
extern void of_oxm_udp_src_masked_init(
    of_oxm_udp_src_masked_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_vlan_pcp_t *
    of_oxm_vlan_pcp_new_(of_version_t version);
extern void of_oxm_vlan_pcp_init(
    of_oxm_vlan_pcp_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_vlan_pcp_masked_t *
    of_oxm_vlan_pcp_masked_new_(of_version_t version);
extern void of_oxm_vlan_pcp_masked_init(
    of_oxm_vlan_pcp_masked_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_vlan_vid_t *
    of_oxm_vlan_vid_new_(of_version_t version);
extern void of_oxm_vlan_vid_init(
    of_oxm_vlan_vid_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_oxm_vlan_vid_masked_t *
    of_oxm_vlan_vid_masked_new_(of_version_t version);
extern void of_oxm_vlan_vid_masked_init(
    of_oxm_vlan_vid_masked_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_packet_queue_t *
    of_packet_queue_new_(of_version_t version);
extern void of_packet_queue_init(
    of_packet_queue_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_port_desc_t *
    of_port_desc_new_(of_version_t version);
extern void of_port_desc_init(
    of_port_desc_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_port_stats_entry_t *
    of_port_stats_entry_new_(of_version_t version);
extern void of_port_stats_entry_init(
    of_port_stats_entry_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_queue_prop_t *
    of_queue_prop_new_(of_version_t version);
extern void of_queue_prop_init(
    of_queue_prop_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_queue_prop_experimenter_t *
    of_queue_prop_experimenter_new_(of_version_t version);
extern void of_queue_prop_experimenter_init(
    of_queue_prop_experimenter_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_queue_prop_header_t *
    of_queue_prop_header_new_(of_version_t version);
extern void of_queue_prop_header_init(
    of_queue_prop_header_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_queue_prop_max_rate_t *
    of_queue_prop_max_rate_new_(of_version_t version);
extern void of_queue_prop_max_rate_init(
    of_queue_prop_max_rate_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_queue_prop_min_rate_t *
    of_queue_prop_min_rate_new_(of_version_t version);
extern void of_queue_prop_min_rate_init(
    of_queue_prop_min_rate_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_queue_stats_entry_t *
    of_queue_stats_entry_new_(of_version_t version);
extern void of_queue_stats_entry_init(
    of_queue_stats_entry_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_table_feature_prop_t *
    of_table_feature_prop_new_(of_version_t version);
extern void of_table_feature_prop_init(
    of_table_feature_prop_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_table_feature_prop_apply_actions_t *
    of_table_feature_prop_apply_actions_new_(of_version_t version);
extern void of_table_feature_prop_apply_actions_init(
    of_table_feature_prop_apply_actions_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_table_feature_prop_apply_actions_miss_t *
    of_table_feature_prop_apply_actions_miss_new_(of_version_t version);
extern void of_table_feature_prop_apply_actions_miss_init(
    of_table_feature_prop_apply_actions_miss_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_table_feature_prop_apply_setfield_t *
    of_table_feature_prop_apply_setfield_new_(of_version_t version);
extern void of_table_feature_prop_apply_setfield_init(
    of_table_feature_prop_apply_setfield_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_table_feature_prop_apply_setfield_miss_t *
    of_table_feature_prop_apply_setfield_miss_new_(of_version_t version);
extern void of_table_feature_prop_apply_setfield_miss_init(
    of_table_feature_prop_apply_setfield_miss_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_table_feature_prop_experimenter_t *
    of_table_feature_prop_experimenter_new_(of_version_t version);
extern void of_table_feature_prop_experimenter_init(
    of_table_feature_prop_experimenter_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_table_feature_prop_header_t *
    of_table_feature_prop_header_new_(of_version_t version);
extern void of_table_feature_prop_header_init(
    of_table_feature_prop_header_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_table_feature_prop_instructions_t *
    of_table_feature_prop_instructions_new_(of_version_t version);
extern void of_table_feature_prop_instructions_init(
    of_table_feature_prop_instructions_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_table_feature_prop_instructions_miss_t *
    of_table_feature_prop_instructions_miss_new_(of_version_t version);
extern void of_table_feature_prop_instructions_miss_init(
    of_table_feature_prop_instructions_miss_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_table_feature_prop_match_t *
    of_table_feature_prop_match_new_(of_version_t version);
extern void of_table_feature_prop_match_init(
    of_table_feature_prop_match_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_table_feature_prop_next_tables_t *
    of_table_feature_prop_next_tables_new_(of_version_t version);
extern void of_table_feature_prop_next_tables_init(
    of_table_feature_prop_next_tables_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_table_feature_prop_next_tables_miss_t *
    of_table_feature_prop_next_tables_miss_new_(of_version_t version);
extern void of_table_feature_prop_next_tables_miss_init(
    of_table_feature_prop_next_tables_miss_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_table_feature_prop_wildcards_t *
    of_table_feature_prop_wildcards_new_(of_version_t version);
extern void of_table_feature_prop_wildcards_init(
    of_table_feature_prop_wildcards_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_table_feature_prop_write_actions_t *
    of_table_feature_prop_write_actions_new_(of_version_t version);
extern void of_table_feature_prop_write_actions_init(
    of_table_feature_prop_write_actions_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_table_feature_prop_write_actions_miss_t *
    of_table_feature_prop_write_actions_miss_new_(of_version_t version);
extern void of_table_feature_prop_write_actions_miss_init(
    of_table_feature_prop_write_actions_miss_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_table_feature_prop_write_setfield_t *
    of_table_feature_prop_write_setfield_new_(of_version_t version);
extern void of_table_feature_prop_write_setfield_init(
    of_table_feature_prop_write_setfield_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_table_feature_prop_write_setfield_miss_t *
    of_table_feature_prop_write_setfield_miss_new_(of_version_t version);
extern void of_table_feature_prop_write_setfield_miss_init(
    of_table_feature_prop_write_setfield_miss_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_table_features_t *
    of_table_features_new_(of_version_t version);
extern void of_table_features_init(
    of_table_features_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_table_stats_entry_t *
    of_table_stats_entry_new_(of_version_t version);
extern void of_table_stats_entry_init(
    of_table_stats_entry_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_uint32_t *
    of_uint32_new_(of_version_t version);
extern void of_uint32_init(
    of_uint32_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_uint64_t *
    of_uint64_new_(of_version_t version);
extern void of_uint64_init(
    of_uint64_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_uint8_t *
    of_uint8_new_(of_version_t version);
extern void of_uint8_init(
    of_uint8_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_list_action_t *
    of_list_action_new_(of_version_t version);
extern void of_list_action_init(
    of_list_action_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_list_action_id_t *
    of_list_action_id_new_(of_version_t version);
extern void of_list_action_id_init(
    of_list_action_id_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_list_bsn_interface_t *
    of_list_bsn_interface_new_(of_version_t version);
extern void of_list_bsn_interface_init(
    of_list_bsn_interface_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_list_bsn_lacp_stats_entry_t *
    of_list_bsn_lacp_stats_entry_new_(of_version_t version);
extern void of_list_bsn_lacp_stats_entry_init(
    of_list_bsn_lacp_stats_entry_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_list_bsn_port_counter_stats_entry_t *
    of_list_bsn_port_counter_stats_entry_new_(of_version_t version);
extern void of_list_bsn_port_counter_stats_entry_init(
    of_list_bsn_port_counter_stats_entry_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_list_bsn_switch_pipeline_stats_entry_t *
    of_list_bsn_switch_pipeline_stats_entry_new_(of_version_t version);
extern void of_list_bsn_switch_pipeline_stats_entry_init(
    of_list_bsn_switch_pipeline_stats_entry_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_list_bsn_vlan_counter_stats_entry_t *
    of_list_bsn_vlan_counter_stats_entry_new_(of_version_t version);
extern void of_list_bsn_vlan_counter_stats_entry_init(
    of_list_bsn_vlan_counter_stats_entry_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_list_bucket_t *
    of_list_bucket_new_(of_version_t version);
extern void of_list_bucket_init(
    of_list_bucket_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_list_bucket_counter_t *
    of_list_bucket_counter_new_(of_version_t version);
extern void of_list_bucket_counter_init(
    of_list_bucket_counter_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_list_flow_stats_entry_t *
    of_list_flow_stats_entry_new_(of_version_t version);
extern void of_list_flow_stats_entry_init(
    of_list_flow_stats_entry_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_list_group_desc_stats_entry_t *
    of_list_group_desc_stats_entry_new_(of_version_t version);
extern void of_list_group_desc_stats_entry_init(
    of_list_group_desc_stats_entry_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_list_group_stats_entry_t *
    of_list_group_stats_entry_new_(of_version_t version);
extern void of_list_group_stats_entry_init(
    of_list_group_stats_entry_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_list_hello_elem_t *
    of_list_hello_elem_new_(of_version_t version);
extern void of_list_hello_elem_init(
    of_list_hello_elem_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_list_instruction_t *
    of_list_instruction_new_(of_version_t version);
extern void of_list_instruction_init(
    of_list_instruction_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_list_meter_band_t *
    of_list_meter_band_new_(of_version_t version);
extern void of_list_meter_band_init(
    of_list_meter_band_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_list_meter_band_stats_t *
    of_list_meter_band_stats_new_(of_version_t version);
extern void of_list_meter_band_stats_init(
    of_list_meter_band_stats_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_list_meter_stats_t *
    of_list_meter_stats_new_(of_version_t version);
extern void of_list_meter_stats_init(
    of_list_meter_stats_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_list_oxm_t *
    of_list_oxm_new_(of_version_t version);
extern void of_list_oxm_init(
    of_list_oxm_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_list_packet_queue_t *
    of_list_packet_queue_new_(of_version_t version);
extern void of_list_packet_queue_init(
    of_list_packet_queue_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_list_port_desc_t *
    of_list_port_desc_new_(of_version_t version);
extern void of_list_port_desc_init(
    of_list_port_desc_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_list_port_stats_entry_t *
    of_list_port_stats_entry_new_(of_version_t version);
extern void of_list_port_stats_entry_init(
    of_list_port_stats_entry_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_list_queue_prop_t *
    of_list_queue_prop_new_(of_version_t version);
extern void of_list_queue_prop_init(
    of_list_queue_prop_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_list_queue_stats_entry_t *
    of_list_queue_stats_entry_new_(of_version_t version);
extern void of_list_queue_stats_entry_init(
    of_list_queue_stats_entry_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_list_table_feature_prop_t *
    of_list_table_feature_prop_new_(of_version_t version);
extern void of_list_table_feature_prop_init(
    of_list_table_feature_prop_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_list_table_features_t *
    of_list_table_features_new_(of_version_t version);
extern void of_list_table_features_init(
    of_list_table_features_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_list_table_stats_entry_t *
    of_list_table_stats_entry_new_(of_version_t version);
extern void of_list_table_stats_entry_init(
    of_list_table_stats_entry_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_list_uint32_t *
    of_list_uint32_new_(of_version_t version);
extern void of_list_uint32_init(
    of_list_uint32_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_list_uint64_t *
    of_list_uint64_new_(of_version_t version);
extern void of_list_uint64_init(
    of_list_uint64_t *obj, of_version_t version, int bytes, int clean_wire);

extern of_list_uint8_t *
    of_list_uint8_new_(of_version_t version);
extern void of_list_uint8_init(
    of_list_uint8_t *obj, of_version_t version, int bytes, int clean_wire);

/****************************************************************
 *
 * Delete operator static inline definitions.
 * These are here for type checking purposes only
 *
 ****************************************************************/

/**
 * Delete an object of type of_aggregate_stats_reply_t
 * @param obj An instance of type of_aggregate_stats_reply_t
 *
 * \ingroup of_aggregate_stats_reply
 */
static inline void
of_aggregate_stats_reply_delete(of_aggregate_stats_reply_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_aggregate_stats_request_t
 * @param obj An instance of type of_aggregate_stats_request_t
 *
 * \ingroup of_aggregate_stats_request
 */
static inline void
of_aggregate_stats_request_delete(of_aggregate_stats_request_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_async_get_reply_t
 * @param obj An instance of type of_async_get_reply_t
 *
 * \ingroup of_async_get_reply
 */
static inline void
of_async_get_reply_delete(of_async_get_reply_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_async_get_request_t
 * @param obj An instance of type of_async_get_request_t
 *
 * \ingroup of_async_get_request
 */
static inline void
of_async_get_request_delete(of_async_get_request_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_async_set_t
 * @param obj An instance of type of_async_set_t
 *
 * \ingroup of_async_set
 */
static inline void
of_async_set_delete(of_async_set_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bad_action_error_msg_t
 * @param obj An instance of type of_bad_action_error_msg_t
 *
 * \ingroup of_bad_action_error_msg
 */
static inline void
of_bad_action_error_msg_delete(of_bad_action_error_msg_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bad_instruction_error_msg_t
 * @param obj An instance of type of_bad_instruction_error_msg_t
 *
 * \ingroup of_bad_instruction_error_msg
 */
static inline void
of_bad_instruction_error_msg_delete(of_bad_instruction_error_msg_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bad_match_error_msg_t
 * @param obj An instance of type of_bad_match_error_msg_t
 *
 * \ingroup of_bad_match_error_msg
 */
static inline void
of_bad_match_error_msg_delete(of_bad_match_error_msg_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bad_request_error_msg_t
 * @param obj An instance of type of_bad_request_error_msg_t
 *
 * \ingroup of_bad_request_error_msg
 */
static inline void
of_bad_request_error_msg_delete(of_bad_request_error_msg_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_barrier_reply_t
 * @param obj An instance of type of_barrier_reply_t
 *
 * \ingroup of_barrier_reply
 */
static inline void
of_barrier_reply_delete(of_barrier_reply_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_barrier_request_t
 * @param obj An instance of type of_barrier_request_t
 *
 * \ingroup of_barrier_request
 */
static inline void
of_barrier_request_delete(of_barrier_request_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_bw_clear_data_reply_t
 * @param obj An instance of type of_bsn_bw_clear_data_reply_t
 *
 * \ingroup of_bsn_bw_clear_data_reply
 */
static inline void
of_bsn_bw_clear_data_reply_delete(of_bsn_bw_clear_data_reply_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_bw_clear_data_request_t
 * @param obj An instance of type of_bsn_bw_clear_data_request_t
 *
 * \ingroup of_bsn_bw_clear_data_request
 */
static inline void
of_bsn_bw_clear_data_request_delete(of_bsn_bw_clear_data_request_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_bw_enable_get_reply_t
 * @param obj An instance of type of_bsn_bw_enable_get_reply_t
 *
 * \ingroup of_bsn_bw_enable_get_reply
 */
static inline void
of_bsn_bw_enable_get_reply_delete(of_bsn_bw_enable_get_reply_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_bw_enable_get_request_t
 * @param obj An instance of type of_bsn_bw_enable_get_request_t
 *
 * \ingroup of_bsn_bw_enable_get_request
 */
static inline void
of_bsn_bw_enable_get_request_delete(of_bsn_bw_enable_get_request_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_bw_enable_set_reply_t
 * @param obj An instance of type of_bsn_bw_enable_set_reply_t
 *
 * \ingroup of_bsn_bw_enable_set_reply
 */
static inline void
of_bsn_bw_enable_set_reply_delete(of_bsn_bw_enable_set_reply_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_bw_enable_set_request_t
 * @param obj An instance of type of_bsn_bw_enable_set_request_t
 *
 * \ingroup of_bsn_bw_enable_set_request
 */
static inline void
of_bsn_bw_enable_set_request_delete(of_bsn_bw_enable_set_request_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_flow_idle_t
 * @param obj An instance of type of_bsn_flow_idle_t
 *
 * \ingroup of_bsn_flow_idle
 */
static inline void
of_bsn_flow_idle_delete(of_bsn_flow_idle_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_flow_idle_enable_get_reply_t
 * @param obj An instance of type of_bsn_flow_idle_enable_get_reply_t
 *
 * \ingroup of_bsn_flow_idle_enable_get_reply
 */
static inline void
of_bsn_flow_idle_enable_get_reply_delete(of_bsn_flow_idle_enable_get_reply_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_flow_idle_enable_get_request_t
 * @param obj An instance of type of_bsn_flow_idle_enable_get_request_t
 *
 * \ingroup of_bsn_flow_idle_enable_get_request
 */
static inline void
of_bsn_flow_idle_enable_get_request_delete(of_bsn_flow_idle_enable_get_request_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_flow_idle_enable_set_reply_t
 * @param obj An instance of type of_bsn_flow_idle_enable_set_reply_t
 *
 * \ingroup of_bsn_flow_idle_enable_set_reply
 */
static inline void
of_bsn_flow_idle_enable_set_reply_delete(of_bsn_flow_idle_enable_set_reply_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_flow_idle_enable_set_request_t
 * @param obj An instance of type of_bsn_flow_idle_enable_set_request_t
 *
 * \ingroup of_bsn_flow_idle_enable_set_request
 */
static inline void
of_bsn_flow_idle_enable_set_request_delete(of_bsn_flow_idle_enable_set_request_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_get_interfaces_reply_t
 * @param obj An instance of type of_bsn_get_interfaces_reply_t
 *
 * \ingroup of_bsn_get_interfaces_reply
 */
static inline void
of_bsn_get_interfaces_reply_delete(of_bsn_get_interfaces_reply_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_get_interfaces_request_t
 * @param obj An instance of type of_bsn_get_interfaces_request_t
 *
 * \ingroup of_bsn_get_interfaces_request
 */
static inline void
of_bsn_get_interfaces_request_delete(of_bsn_get_interfaces_request_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_get_ip_mask_reply_t
 * @param obj An instance of type of_bsn_get_ip_mask_reply_t
 *
 * \ingroup of_bsn_get_ip_mask_reply
 */
static inline void
of_bsn_get_ip_mask_reply_delete(of_bsn_get_ip_mask_reply_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_get_ip_mask_request_t
 * @param obj An instance of type of_bsn_get_ip_mask_request_t
 *
 * \ingroup of_bsn_get_ip_mask_request
 */
static inline void
of_bsn_get_ip_mask_request_delete(of_bsn_get_ip_mask_request_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_get_l2_table_reply_t
 * @param obj An instance of type of_bsn_get_l2_table_reply_t
 *
 * \ingroup of_bsn_get_l2_table_reply
 */
static inline void
of_bsn_get_l2_table_reply_delete(of_bsn_get_l2_table_reply_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_get_l2_table_request_t
 * @param obj An instance of type of_bsn_get_l2_table_request_t
 *
 * \ingroup of_bsn_get_l2_table_request
 */
static inline void
of_bsn_get_l2_table_request_delete(of_bsn_get_l2_table_request_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_get_mirroring_reply_t
 * @param obj An instance of type of_bsn_get_mirroring_reply_t
 *
 * \ingroup of_bsn_get_mirroring_reply
 */
static inline void
of_bsn_get_mirroring_reply_delete(of_bsn_get_mirroring_reply_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_get_mirroring_request_t
 * @param obj An instance of type of_bsn_get_mirroring_request_t
 *
 * \ingroup of_bsn_get_mirroring_request
 */
static inline void
of_bsn_get_mirroring_request_delete(of_bsn_get_mirroring_request_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_get_switch_pipeline_reply_t
 * @param obj An instance of type of_bsn_get_switch_pipeline_reply_t
 *
 * \ingroup of_bsn_get_switch_pipeline_reply
 */
static inline void
of_bsn_get_switch_pipeline_reply_delete(of_bsn_get_switch_pipeline_reply_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_get_switch_pipeline_request_t
 * @param obj An instance of type of_bsn_get_switch_pipeline_request_t
 *
 * \ingroup of_bsn_get_switch_pipeline_request
 */
static inline void
of_bsn_get_switch_pipeline_request_delete(of_bsn_get_switch_pipeline_request_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_header_t
 * @param obj An instance of type of_bsn_header_t
 *
 * \ingroup of_bsn_header
 */
static inline void
of_bsn_header_delete(of_bsn_header_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_hybrid_get_reply_t
 * @param obj An instance of type of_bsn_hybrid_get_reply_t
 *
 * \ingroup of_bsn_hybrid_get_reply
 */
static inline void
of_bsn_hybrid_get_reply_delete(of_bsn_hybrid_get_reply_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_hybrid_get_request_t
 * @param obj An instance of type of_bsn_hybrid_get_request_t
 *
 * \ingroup of_bsn_hybrid_get_request
 */
static inline void
of_bsn_hybrid_get_request_delete(of_bsn_hybrid_get_request_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_lacp_convergence_notif_t
 * @param obj An instance of type of_bsn_lacp_convergence_notif_t
 *
 * \ingroup of_bsn_lacp_convergence_notif
 */
static inline void
of_bsn_lacp_convergence_notif_delete(of_bsn_lacp_convergence_notif_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_lacp_stats_reply_t
 * @param obj An instance of type of_bsn_lacp_stats_reply_t
 *
 * \ingroup of_bsn_lacp_stats_reply
 */
static inline void
of_bsn_lacp_stats_reply_delete(of_bsn_lacp_stats_reply_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_lacp_stats_request_t
 * @param obj An instance of type of_bsn_lacp_stats_request_t
 *
 * \ingroup of_bsn_lacp_stats_request
 */
static inline void
of_bsn_lacp_stats_request_delete(of_bsn_lacp_stats_request_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_pdu_rx_reply_t
 * @param obj An instance of type of_bsn_pdu_rx_reply_t
 *
 * \ingroup of_bsn_pdu_rx_reply
 */
static inline void
of_bsn_pdu_rx_reply_delete(of_bsn_pdu_rx_reply_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_pdu_rx_request_t
 * @param obj An instance of type of_bsn_pdu_rx_request_t
 *
 * \ingroup of_bsn_pdu_rx_request
 */
static inline void
of_bsn_pdu_rx_request_delete(of_bsn_pdu_rx_request_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_pdu_rx_timeout_t
 * @param obj An instance of type of_bsn_pdu_rx_timeout_t
 *
 * \ingroup of_bsn_pdu_rx_timeout
 */
static inline void
of_bsn_pdu_rx_timeout_delete(of_bsn_pdu_rx_timeout_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_pdu_tx_reply_t
 * @param obj An instance of type of_bsn_pdu_tx_reply_t
 *
 * \ingroup of_bsn_pdu_tx_reply
 */
static inline void
of_bsn_pdu_tx_reply_delete(of_bsn_pdu_tx_reply_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_pdu_tx_request_t
 * @param obj An instance of type of_bsn_pdu_tx_request_t
 *
 * \ingroup of_bsn_pdu_tx_request
 */
static inline void
of_bsn_pdu_tx_request_delete(of_bsn_pdu_tx_request_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_port_counter_stats_reply_t
 * @param obj An instance of type of_bsn_port_counter_stats_reply_t
 *
 * \ingroup of_bsn_port_counter_stats_reply
 */
static inline void
of_bsn_port_counter_stats_reply_delete(of_bsn_port_counter_stats_reply_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_port_counter_stats_request_t
 * @param obj An instance of type of_bsn_port_counter_stats_request_t
 *
 * \ingroup of_bsn_port_counter_stats_request
 */
static inline void
of_bsn_port_counter_stats_request_delete(of_bsn_port_counter_stats_request_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_set_ip_mask_t
 * @param obj An instance of type of_bsn_set_ip_mask_t
 *
 * \ingroup of_bsn_set_ip_mask
 */
static inline void
of_bsn_set_ip_mask_delete(of_bsn_set_ip_mask_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_set_l2_table_reply_t
 * @param obj An instance of type of_bsn_set_l2_table_reply_t
 *
 * \ingroup of_bsn_set_l2_table_reply
 */
static inline void
of_bsn_set_l2_table_reply_delete(of_bsn_set_l2_table_reply_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_set_l2_table_request_t
 * @param obj An instance of type of_bsn_set_l2_table_request_t
 *
 * \ingroup of_bsn_set_l2_table_request
 */
static inline void
of_bsn_set_l2_table_request_delete(of_bsn_set_l2_table_request_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_set_lacp_reply_t
 * @param obj An instance of type of_bsn_set_lacp_reply_t
 *
 * \ingroup of_bsn_set_lacp_reply
 */
static inline void
of_bsn_set_lacp_reply_delete(of_bsn_set_lacp_reply_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_set_lacp_request_t
 * @param obj An instance of type of_bsn_set_lacp_request_t
 *
 * \ingroup of_bsn_set_lacp_request
 */
static inline void
of_bsn_set_lacp_request_delete(of_bsn_set_lacp_request_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_set_mirroring_t
 * @param obj An instance of type of_bsn_set_mirroring_t
 *
 * \ingroup of_bsn_set_mirroring
 */
static inline void
of_bsn_set_mirroring_delete(of_bsn_set_mirroring_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_set_pktin_suppression_reply_t
 * @param obj An instance of type of_bsn_set_pktin_suppression_reply_t
 *
 * \ingroup of_bsn_set_pktin_suppression_reply
 */
static inline void
of_bsn_set_pktin_suppression_reply_delete(of_bsn_set_pktin_suppression_reply_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_set_pktin_suppression_request_t
 * @param obj An instance of type of_bsn_set_pktin_suppression_request_t
 *
 * \ingroup of_bsn_set_pktin_suppression_request
 */
static inline void
of_bsn_set_pktin_suppression_request_delete(of_bsn_set_pktin_suppression_request_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_set_switch_pipeline_reply_t
 * @param obj An instance of type of_bsn_set_switch_pipeline_reply_t
 *
 * \ingroup of_bsn_set_switch_pipeline_reply
 */
static inline void
of_bsn_set_switch_pipeline_reply_delete(of_bsn_set_switch_pipeline_reply_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_set_switch_pipeline_request_t
 * @param obj An instance of type of_bsn_set_switch_pipeline_request_t
 *
 * \ingroup of_bsn_set_switch_pipeline_request
 */
static inline void
of_bsn_set_switch_pipeline_request_delete(of_bsn_set_switch_pipeline_request_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_shell_command_t
 * @param obj An instance of type of_bsn_shell_command_t
 *
 * \ingroup of_bsn_shell_command
 */
static inline void
of_bsn_shell_command_delete(of_bsn_shell_command_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_shell_output_t
 * @param obj An instance of type of_bsn_shell_output_t
 *
 * \ingroup of_bsn_shell_output
 */
static inline void
of_bsn_shell_output_delete(of_bsn_shell_output_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_shell_status_t
 * @param obj An instance of type of_bsn_shell_status_t
 *
 * \ingroup of_bsn_shell_status
 */
static inline void
of_bsn_shell_status_delete(of_bsn_shell_status_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_stats_reply_t
 * @param obj An instance of type of_bsn_stats_reply_t
 *
 * \ingroup of_bsn_stats_reply
 */
static inline void
of_bsn_stats_reply_delete(of_bsn_stats_reply_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_stats_request_t
 * @param obj An instance of type of_bsn_stats_request_t
 *
 * \ingroup of_bsn_stats_request
 */
static inline void
of_bsn_stats_request_delete(of_bsn_stats_request_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_switch_pipeline_stats_reply_t
 * @param obj An instance of type of_bsn_switch_pipeline_stats_reply_t
 *
 * \ingroup of_bsn_switch_pipeline_stats_reply
 */
static inline void
of_bsn_switch_pipeline_stats_reply_delete(of_bsn_switch_pipeline_stats_reply_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_switch_pipeline_stats_request_t
 * @param obj An instance of type of_bsn_switch_pipeline_stats_request_t
 *
 * \ingroup of_bsn_switch_pipeline_stats_request
 */
static inline void
of_bsn_switch_pipeline_stats_request_delete(of_bsn_switch_pipeline_stats_request_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_time_reply_t
 * @param obj An instance of type of_bsn_time_reply_t
 *
 * \ingroup of_bsn_time_reply
 */
static inline void
of_bsn_time_reply_delete(of_bsn_time_reply_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_time_request_t
 * @param obj An instance of type of_bsn_time_request_t
 *
 * \ingroup of_bsn_time_request
 */
static inline void
of_bsn_time_request_delete(of_bsn_time_request_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_virtual_port_create_reply_t
 * @param obj An instance of type of_bsn_virtual_port_create_reply_t
 *
 * \ingroup of_bsn_virtual_port_create_reply
 */
static inline void
of_bsn_virtual_port_create_reply_delete(of_bsn_virtual_port_create_reply_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_virtual_port_create_request_t
 * @param obj An instance of type of_bsn_virtual_port_create_request_t
 *
 * \ingroup of_bsn_virtual_port_create_request
 */
static inline void
of_bsn_virtual_port_create_request_delete(of_bsn_virtual_port_create_request_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_virtual_port_remove_reply_t
 * @param obj An instance of type of_bsn_virtual_port_remove_reply_t
 *
 * \ingroup of_bsn_virtual_port_remove_reply
 */
static inline void
of_bsn_virtual_port_remove_reply_delete(of_bsn_virtual_port_remove_reply_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_virtual_port_remove_request_t
 * @param obj An instance of type of_bsn_virtual_port_remove_request_t
 *
 * \ingroup of_bsn_virtual_port_remove_request
 */
static inline void
of_bsn_virtual_port_remove_request_delete(of_bsn_virtual_port_remove_request_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_vlan_counter_stats_reply_t
 * @param obj An instance of type of_bsn_vlan_counter_stats_reply_t
 *
 * \ingroup of_bsn_vlan_counter_stats_reply
 */
static inline void
of_bsn_vlan_counter_stats_reply_delete(of_bsn_vlan_counter_stats_reply_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_vlan_counter_stats_request_t
 * @param obj An instance of type of_bsn_vlan_counter_stats_request_t
 *
 * \ingroup of_bsn_vlan_counter_stats_request
 */
static inline void
of_bsn_vlan_counter_stats_request_delete(of_bsn_vlan_counter_stats_request_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_desc_stats_reply_t
 * @param obj An instance of type of_desc_stats_reply_t
 *
 * \ingroup of_desc_stats_reply
 */
static inline void
of_desc_stats_reply_delete(of_desc_stats_reply_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_desc_stats_request_t
 * @param obj An instance of type of_desc_stats_request_t
 *
 * \ingroup of_desc_stats_request
 */
static inline void
of_desc_stats_request_delete(of_desc_stats_request_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_echo_reply_t
 * @param obj An instance of type of_echo_reply_t
 *
 * \ingroup of_echo_reply
 */
static inline void
of_echo_reply_delete(of_echo_reply_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_echo_request_t
 * @param obj An instance of type of_echo_request_t
 *
 * \ingroup of_echo_request
 */
static inline void
of_echo_request_delete(of_echo_request_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_error_msg_t
 * @param obj An instance of type of_error_msg_t
 *
 * \ingroup of_error_msg
 */
static inline void
of_error_msg_delete(of_error_msg_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_experimenter_t
 * @param obj An instance of type of_experimenter_t
 *
 * \ingroup of_experimenter
 */
static inline void
of_experimenter_delete(of_experimenter_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_experimenter_error_msg_t
 * @param obj An instance of type of_experimenter_error_msg_t
 *
 * \ingroup of_experimenter_error_msg
 */
static inline void
of_experimenter_error_msg_delete(of_experimenter_error_msg_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_experimenter_stats_reply_t
 * @param obj An instance of type of_experimenter_stats_reply_t
 *
 * \ingroup of_experimenter_stats_reply
 */
static inline void
of_experimenter_stats_reply_delete(of_experimenter_stats_reply_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_experimenter_stats_request_t
 * @param obj An instance of type of_experimenter_stats_request_t
 *
 * \ingroup of_experimenter_stats_request
 */
static inline void
of_experimenter_stats_request_delete(of_experimenter_stats_request_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_features_reply_t
 * @param obj An instance of type of_features_reply_t
 *
 * \ingroup of_features_reply
 */
static inline void
of_features_reply_delete(of_features_reply_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_features_request_t
 * @param obj An instance of type of_features_request_t
 *
 * \ingroup of_features_request
 */
static inline void
of_features_request_delete(of_features_request_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_flow_add_t
 * @param obj An instance of type of_flow_add_t
 *
 * \ingroup of_flow_add
 */
static inline void
of_flow_add_delete(of_flow_add_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_flow_delete_t
 * @param obj An instance of type of_flow_delete_t
 *
 * \ingroup of_flow_delete
 */
static inline void
of_flow_delete_delete(of_flow_delete_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_flow_delete_strict_t
 * @param obj An instance of type of_flow_delete_strict_t
 *
 * \ingroup of_flow_delete_strict
 */
static inline void
of_flow_delete_strict_delete(of_flow_delete_strict_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_flow_mod_t
 * @param obj An instance of type of_flow_mod_t
 *
 * \ingroup of_flow_mod
 */
static inline void
of_flow_mod_delete(of_flow_mod_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_flow_mod_failed_error_msg_t
 * @param obj An instance of type of_flow_mod_failed_error_msg_t
 *
 * \ingroup of_flow_mod_failed_error_msg
 */
static inline void
of_flow_mod_failed_error_msg_delete(of_flow_mod_failed_error_msg_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_flow_modify_t
 * @param obj An instance of type of_flow_modify_t
 *
 * \ingroup of_flow_modify
 */
static inline void
of_flow_modify_delete(of_flow_modify_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_flow_modify_strict_t
 * @param obj An instance of type of_flow_modify_strict_t
 *
 * \ingroup of_flow_modify_strict
 */
static inline void
of_flow_modify_strict_delete(of_flow_modify_strict_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_flow_removed_t
 * @param obj An instance of type of_flow_removed_t
 *
 * \ingroup of_flow_removed
 */
static inline void
of_flow_removed_delete(of_flow_removed_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_flow_stats_reply_t
 * @param obj An instance of type of_flow_stats_reply_t
 *
 * \ingroup of_flow_stats_reply
 */
static inline void
of_flow_stats_reply_delete(of_flow_stats_reply_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_flow_stats_request_t
 * @param obj An instance of type of_flow_stats_request_t
 *
 * \ingroup of_flow_stats_request
 */
static inline void
of_flow_stats_request_delete(of_flow_stats_request_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_get_config_reply_t
 * @param obj An instance of type of_get_config_reply_t
 *
 * \ingroup of_get_config_reply
 */
static inline void
of_get_config_reply_delete(of_get_config_reply_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_get_config_request_t
 * @param obj An instance of type of_get_config_request_t
 *
 * \ingroup of_get_config_request
 */
static inline void
of_get_config_request_delete(of_get_config_request_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_group_add_t
 * @param obj An instance of type of_group_add_t
 *
 * \ingroup of_group_add
 */
static inline void
of_group_add_delete(of_group_add_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_group_delete_t
 * @param obj An instance of type of_group_delete_t
 *
 * \ingroup of_group_delete
 */
static inline void
of_group_delete_delete(of_group_delete_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_group_desc_stats_reply_t
 * @param obj An instance of type of_group_desc_stats_reply_t
 *
 * \ingroup of_group_desc_stats_reply
 */
static inline void
of_group_desc_stats_reply_delete(of_group_desc_stats_reply_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_group_desc_stats_request_t
 * @param obj An instance of type of_group_desc_stats_request_t
 *
 * \ingroup of_group_desc_stats_request
 */
static inline void
of_group_desc_stats_request_delete(of_group_desc_stats_request_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_group_features_stats_reply_t
 * @param obj An instance of type of_group_features_stats_reply_t
 *
 * \ingroup of_group_features_stats_reply
 */
static inline void
of_group_features_stats_reply_delete(of_group_features_stats_reply_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_group_features_stats_request_t
 * @param obj An instance of type of_group_features_stats_request_t
 *
 * \ingroup of_group_features_stats_request
 */
static inline void
of_group_features_stats_request_delete(of_group_features_stats_request_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_group_mod_t
 * @param obj An instance of type of_group_mod_t
 *
 * \ingroup of_group_mod
 */
static inline void
of_group_mod_delete(of_group_mod_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_group_mod_failed_error_msg_t
 * @param obj An instance of type of_group_mod_failed_error_msg_t
 *
 * \ingroup of_group_mod_failed_error_msg
 */
static inline void
of_group_mod_failed_error_msg_delete(of_group_mod_failed_error_msg_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_group_modify_t
 * @param obj An instance of type of_group_modify_t
 *
 * \ingroup of_group_modify
 */
static inline void
of_group_modify_delete(of_group_modify_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_group_stats_reply_t
 * @param obj An instance of type of_group_stats_reply_t
 *
 * \ingroup of_group_stats_reply
 */
static inline void
of_group_stats_reply_delete(of_group_stats_reply_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_group_stats_request_t
 * @param obj An instance of type of_group_stats_request_t
 *
 * \ingroup of_group_stats_request
 */
static inline void
of_group_stats_request_delete(of_group_stats_request_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_hello_t
 * @param obj An instance of type of_hello_t
 *
 * \ingroup of_hello
 */
static inline void
of_hello_delete(of_hello_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_hello_failed_error_msg_t
 * @param obj An instance of type of_hello_failed_error_msg_t
 *
 * \ingroup of_hello_failed_error_msg
 */
static inline void
of_hello_failed_error_msg_delete(of_hello_failed_error_msg_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_meter_config_stats_reply_t
 * @param obj An instance of type of_meter_config_stats_reply_t
 *
 * \ingroup of_meter_config_stats_reply
 */
static inline void
of_meter_config_stats_reply_delete(of_meter_config_stats_reply_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_meter_config_stats_request_t
 * @param obj An instance of type of_meter_config_stats_request_t
 *
 * \ingroup of_meter_config_stats_request
 */
static inline void
of_meter_config_stats_request_delete(of_meter_config_stats_request_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_meter_features_stats_reply_t
 * @param obj An instance of type of_meter_features_stats_reply_t
 *
 * \ingroup of_meter_features_stats_reply
 */
static inline void
of_meter_features_stats_reply_delete(of_meter_features_stats_reply_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_meter_features_stats_request_t
 * @param obj An instance of type of_meter_features_stats_request_t
 *
 * \ingroup of_meter_features_stats_request
 */
static inline void
of_meter_features_stats_request_delete(of_meter_features_stats_request_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_meter_mod_t
 * @param obj An instance of type of_meter_mod_t
 *
 * \ingroup of_meter_mod
 */
static inline void
of_meter_mod_delete(of_meter_mod_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_meter_mod_failed_error_msg_t
 * @param obj An instance of type of_meter_mod_failed_error_msg_t
 *
 * \ingroup of_meter_mod_failed_error_msg
 */
static inline void
of_meter_mod_failed_error_msg_delete(of_meter_mod_failed_error_msg_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_meter_stats_reply_t
 * @param obj An instance of type of_meter_stats_reply_t
 *
 * \ingroup of_meter_stats_reply
 */
static inline void
of_meter_stats_reply_delete(of_meter_stats_reply_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_meter_stats_request_t
 * @param obj An instance of type of_meter_stats_request_t
 *
 * \ingroup of_meter_stats_request
 */
static inline void
of_meter_stats_request_delete(of_meter_stats_request_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_nicira_controller_role_reply_t
 * @param obj An instance of type of_nicira_controller_role_reply_t
 *
 * \ingroup of_nicira_controller_role_reply
 */
static inline void
of_nicira_controller_role_reply_delete(of_nicira_controller_role_reply_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_nicira_controller_role_request_t
 * @param obj An instance of type of_nicira_controller_role_request_t
 *
 * \ingroup of_nicira_controller_role_request
 */
static inline void
of_nicira_controller_role_request_delete(of_nicira_controller_role_request_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_nicira_header_t
 * @param obj An instance of type of_nicira_header_t
 *
 * \ingroup of_nicira_header
 */
static inline void
of_nicira_header_delete(of_nicira_header_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_packet_in_t
 * @param obj An instance of type of_packet_in_t
 *
 * \ingroup of_packet_in
 */
static inline void
of_packet_in_delete(of_packet_in_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_packet_out_t
 * @param obj An instance of type of_packet_out_t
 *
 * \ingroup of_packet_out
 */
static inline void
of_packet_out_delete(of_packet_out_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_port_desc_stats_reply_t
 * @param obj An instance of type of_port_desc_stats_reply_t
 *
 * \ingroup of_port_desc_stats_reply
 */
static inline void
of_port_desc_stats_reply_delete(of_port_desc_stats_reply_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_port_desc_stats_request_t
 * @param obj An instance of type of_port_desc_stats_request_t
 *
 * \ingroup of_port_desc_stats_request
 */
static inline void
of_port_desc_stats_request_delete(of_port_desc_stats_request_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_port_mod_t
 * @param obj An instance of type of_port_mod_t
 *
 * \ingroup of_port_mod
 */
static inline void
of_port_mod_delete(of_port_mod_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_port_mod_failed_error_msg_t
 * @param obj An instance of type of_port_mod_failed_error_msg_t
 *
 * \ingroup of_port_mod_failed_error_msg
 */
static inline void
of_port_mod_failed_error_msg_delete(of_port_mod_failed_error_msg_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_port_stats_reply_t
 * @param obj An instance of type of_port_stats_reply_t
 *
 * \ingroup of_port_stats_reply
 */
static inline void
of_port_stats_reply_delete(of_port_stats_reply_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_port_stats_request_t
 * @param obj An instance of type of_port_stats_request_t
 *
 * \ingroup of_port_stats_request
 */
static inline void
of_port_stats_request_delete(of_port_stats_request_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_port_status_t
 * @param obj An instance of type of_port_status_t
 *
 * \ingroup of_port_status
 */
static inline void
of_port_status_delete(of_port_status_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_queue_get_config_reply_t
 * @param obj An instance of type of_queue_get_config_reply_t
 *
 * \ingroup of_queue_get_config_reply
 */
static inline void
of_queue_get_config_reply_delete(of_queue_get_config_reply_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_queue_get_config_request_t
 * @param obj An instance of type of_queue_get_config_request_t
 *
 * \ingroup of_queue_get_config_request
 */
static inline void
of_queue_get_config_request_delete(of_queue_get_config_request_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_queue_op_failed_error_msg_t
 * @param obj An instance of type of_queue_op_failed_error_msg_t
 *
 * \ingroup of_queue_op_failed_error_msg
 */
static inline void
of_queue_op_failed_error_msg_delete(of_queue_op_failed_error_msg_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_queue_stats_reply_t
 * @param obj An instance of type of_queue_stats_reply_t
 *
 * \ingroup of_queue_stats_reply
 */
static inline void
of_queue_stats_reply_delete(of_queue_stats_reply_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_queue_stats_request_t
 * @param obj An instance of type of_queue_stats_request_t
 *
 * \ingroup of_queue_stats_request
 */
static inline void
of_queue_stats_request_delete(of_queue_stats_request_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_role_reply_t
 * @param obj An instance of type of_role_reply_t
 *
 * \ingroup of_role_reply
 */
static inline void
of_role_reply_delete(of_role_reply_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_role_request_t
 * @param obj An instance of type of_role_request_t
 *
 * \ingroup of_role_request
 */
static inline void
of_role_request_delete(of_role_request_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_role_request_failed_error_msg_t
 * @param obj An instance of type of_role_request_failed_error_msg_t
 *
 * \ingroup of_role_request_failed_error_msg
 */
static inline void
of_role_request_failed_error_msg_delete(of_role_request_failed_error_msg_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_set_config_t
 * @param obj An instance of type of_set_config_t
 *
 * \ingroup of_set_config
 */
static inline void
of_set_config_delete(of_set_config_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_stats_reply_t
 * @param obj An instance of type of_stats_reply_t
 *
 * \ingroup of_stats_reply
 */
static inline void
of_stats_reply_delete(of_stats_reply_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_stats_request_t
 * @param obj An instance of type of_stats_request_t
 *
 * \ingroup of_stats_request
 */
static inline void
of_stats_request_delete(of_stats_request_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_switch_config_failed_error_msg_t
 * @param obj An instance of type of_switch_config_failed_error_msg_t
 *
 * \ingroup of_switch_config_failed_error_msg
 */
static inline void
of_switch_config_failed_error_msg_delete(of_switch_config_failed_error_msg_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_table_features_failed_error_msg_t
 * @param obj An instance of type of_table_features_failed_error_msg_t
 *
 * \ingroup of_table_features_failed_error_msg
 */
static inline void
of_table_features_failed_error_msg_delete(of_table_features_failed_error_msg_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_table_features_stats_reply_t
 * @param obj An instance of type of_table_features_stats_reply_t
 *
 * \ingroup of_table_features_stats_reply
 */
static inline void
of_table_features_stats_reply_delete(of_table_features_stats_reply_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_table_features_stats_request_t
 * @param obj An instance of type of_table_features_stats_request_t
 *
 * \ingroup of_table_features_stats_request
 */
static inline void
of_table_features_stats_request_delete(of_table_features_stats_request_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_table_mod_t
 * @param obj An instance of type of_table_mod_t
 *
 * \ingroup of_table_mod
 */
static inline void
of_table_mod_delete(of_table_mod_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_table_mod_failed_error_msg_t
 * @param obj An instance of type of_table_mod_failed_error_msg_t
 *
 * \ingroup of_table_mod_failed_error_msg
 */
static inline void
of_table_mod_failed_error_msg_delete(of_table_mod_failed_error_msg_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_table_stats_reply_t
 * @param obj An instance of type of_table_stats_reply_t
 *
 * \ingroup of_table_stats_reply
 */
static inline void
of_table_stats_reply_delete(of_table_stats_reply_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_table_stats_request_t
 * @param obj An instance of type of_table_stats_request_t
 *
 * \ingroup of_table_stats_request
 */
static inline void
of_table_stats_request_delete(of_table_stats_request_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_t
 * @param obj An instance of type of_action_t
 *
 * \ingroup of_action
 */
static inline void
of_action_delete(of_action_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_bsn_t
 * @param obj An instance of type of_action_bsn_t
 *
 * \ingroup of_action_bsn
 */
static inline void
of_action_bsn_delete(of_action_bsn_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_bsn_mirror_t
 * @param obj An instance of type of_action_bsn_mirror_t
 *
 * \ingroup of_action_bsn_mirror
 */
static inline void
of_action_bsn_mirror_delete(of_action_bsn_mirror_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_bsn_set_tunnel_dst_t
 * @param obj An instance of type of_action_bsn_set_tunnel_dst_t
 *
 * \ingroup of_action_bsn_set_tunnel_dst
 */
static inline void
of_action_bsn_set_tunnel_dst_delete(of_action_bsn_set_tunnel_dst_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_copy_ttl_in_t
 * @param obj An instance of type of_action_copy_ttl_in_t
 *
 * \ingroup of_action_copy_ttl_in
 */
static inline void
of_action_copy_ttl_in_delete(of_action_copy_ttl_in_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_copy_ttl_out_t
 * @param obj An instance of type of_action_copy_ttl_out_t
 *
 * \ingroup of_action_copy_ttl_out
 */
static inline void
of_action_copy_ttl_out_delete(of_action_copy_ttl_out_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_dec_mpls_ttl_t
 * @param obj An instance of type of_action_dec_mpls_ttl_t
 *
 * \ingroup of_action_dec_mpls_ttl
 */
static inline void
of_action_dec_mpls_ttl_delete(of_action_dec_mpls_ttl_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_dec_nw_ttl_t
 * @param obj An instance of type of_action_dec_nw_ttl_t
 *
 * \ingroup of_action_dec_nw_ttl
 */
static inline void
of_action_dec_nw_ttl_delete(of_action_dec_nw_ttl_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_enqueue_t
 * @param obj An instance of type of_action_enqueue_t
 *
 * \ingroup of_action_enqueue
 */
static inline void
of_action_enqueue_delete(of_action_enqueue_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_experimenter_t
 * @param obj An instance of type of_action_experimenter_t
 *
 * \ingroup of_action_experimenter
 */
static inline void
of_action_experimenter_delete(of_action_experimenter_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_group_t
 * @param obj An instance of type of_action_group_t
 *
 * \ingroup of_action_group
 */
static inline void
of_action_group_delete(of_action_group_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_header_t
 * @param obj An instance of type of_action_header_t
 *
 * \ingroup of_action_header
 */
static inline void
of_action_header_delete(of_action_header_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_id_t
 * @param obj An instance of type of_action_id_t
 *
 * \ingroup of_action_id
 */
static inline void
of_action_id_delete(of_action_id_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_id_bsn_t
 * @param obj An instance of type of_action_id_bsn_t
 *
 * \ingroup of_action_id_bsn
 */
static inline void
of_action_id_bsn_delete(of_action_id_bsn_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_id_bsn_mirror_t
 * @param obj An instance of type of_action_id_bsn_mirror_t
 *
 * \ingroup of_action_id_bsn_mirror
 */
static inline void
of_action_id_bsn_mirror_delete(of_action_id_bsn_mirror_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_id_bsn_set_tunnel_dst_t
 * @param obj An instance of type of_action_id_bsn_set_tunnel_dst_t
 *
 * \ingroup of_action_id_bsn_set_tunnel_dst
 */
static inline void
of_action_id_bsn_set_tunnel_dst_delete(of_action_id_bsn_set_tunnel_dst_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_id_copy_ttl_in_t
 * @param obj An instance of type of_action_id_copy_ttl_in_t
 *
 * \ingroup of_action_id_copy_ttl_in
 */
static inline void
of_action_id_copy_ttl_in_delete(of_action_id_copy_ttl_in_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_id_copy_ttl_out_t
 * @param obj An instance of type of_action_id_copy_ttl_out_t
 *
 * \ingroup of_action_id_copy_ttl_out
 */
static inline void
of_action_id_copy_ttl_out_delete(of_action_id_copy_ttl_out_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_id_dec_mpls_ttl_t
 * @param obj An instance of type of_action_id_dec_mpls_ttl_t
 *
 * \ingroup of_action_id_dec_mpls_ttl
 */
static inline void
of_action_id_dec_mpls_ttl_delete(of_action_id_dec_mpls_ttl_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_id_dec_nw_ttl_t
 * @param obj An instance of type of_action_id_dec_nw_ttl_t
 *
 * \ingroup of_action_id_dec_nw_ttl
 */
static inline void
of_action_id_dec_nw_ttl_delete(of_action_id_dec_nw_ttl_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_id_experimenter_t
 * @param obj An instance of type of_action_id_experimenter_t
 *
 * \ingroup of_action_id_experimenter
 */
static inline void
of_action_id_experimenter_delete(of_action_id_experimenter_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_id_group_t
 * @param obj An instance of type of_action_id_group_t
 *
 * \ingroup of_action_id_group
 */
static inline void
of_action_id_group_delete(of_action_id_group_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_id_header_t
 * @param obj An instance of type of_action_id_header_t
 *
 * \ingroup of_action_id_header
 */
static inline void
of_action_id_header_delete(of_action_id_header_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_id_nicira_t
 * @param obj An instance of type of_action_id_nicira_t
 *
 * \ingroup of_action_id_nicira
 */
static inline void
of_action_id_nicira_delete(of_action_id_nicira_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_id_nicira_dec_ttl_t
 * @param obj An instance of type of_action_id_nicira_dec_ttl_t
 *
 * \ingroup of_action_id_nicira_dec_ttl
 */
static inline void
of_action_id_nicira_dec_ttl_delete(of_action_id_nicira_dec_ttl_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_id_output_t
 * @param obj An instance of type of_action_id_output_t
 *
 * \ingroup of_action_id_output
 */
static inline void
of_action_id_output_delete(of_action_id_output_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_id_pop_mpls_t
 * @param obj An instance of type of_action_id_pop_mpls_t
 *
 * \ingroup of_action_id_pop_mpls
 */
static inline void
of_action_id_pop_mpls_delete(of_action_id_pop_mpls_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_id_pop_pbb_t
 * @param obj An instance of type of_action_id_pop_pbb_t
 *
 * \ingroup of_action_id_pop_pbb
 */
static inline void
of_action_id_pop_pbb_delete(of_action_id_pop_pbb_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_id_pop_vlan_t
 * @param obj An instance of type of_action_id_pop_vlan_t
 *
 * \ingroup of_action_id_pop_vlan
 */
static inline void
of_action_id_pop_vlan_delete(of_action_id_pop_vlan_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_id_push_mpls_t
 * @param obj An instance of type of_action_id_push_mpls_t
 *
 * \ingroup of_action_id_push_mpls
 */
static inline void
of_action_id_push_mpls_delete(of_action_id_push_mpls_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_id_push_pbb_t
 * @param obj An instance of type of_action_id_push_pbb_t
 *
 * \ingroup of_action_id_push_pbb
 */
static inline void
of_action_id_push_pbb_delete(of_action_id_push_pbb_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_id_push_vlan_t
 * @param obj An instance of type of_action_id_push_vlan_t
 *
 * \ingroup of_action_id_push_vlan
 */
static inline void
of_action_id_push_vlan_delete(of_action_id_push_vlan_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_id_set_field_t
 * @param obj An instance of type of_action_id_set_field_t
 *
 * \ingroup of_action_id_set_field
 */
static inline void
of_action_id_set_field_delete(of_action_id_set_field_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_id_set_mpls_ttl_t
 * @param obj An instance of type of_action_id_set_mpls_ttl_t
 *
 * \ingroup of_action_id_set_mpls_ttl
 */
static inline void
of_action_id_set_mpls_ttl_delete(of_action_id_set_mpls_ttl_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_id_set_nw_ttl_t
 * @param obj An instance of type of_action_id_set_nw_ttl_t
 *
 * \ingroup of_action_id_set_nw_ttl
 */
static inline void
of_action_id_set_nw_ttl_delete(of_action_id_set_nw_ttl_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_id_set_queue_t
 * @param obj An instance of type of_action_id_set_queue_t
 *
 * \ingroup of_action_id_set_queue
 */
static inline void
of_action_id_set_queue_delete(of_action_id_set_queue_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_nicira_t
 * @param obj An instance of type of_action_nicira_t
 *
 * \ingroup of_action_nicira
 */
static inline void
of_action_nicira_delete(of_action_nicira_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_nicira_dec_ttl_t
 * @param obj An instance of type of_action_nicira_dec_ttl_t
 *
 * \ingroup of_action_nicira_dec_ttl
 */
static inline void
of_action_nicira_dec_ttl_delete(of_action_nicira_dec_ttl_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_output_t
 * @param obj An instance of type of_action_output_t
 *
 * \ingroup of_action_output
 */
static inline void
of_action_output_delete(of_action_output_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_pop_mpls_t
 * @param obj An instance of type of_action_pop_mpls_t
 *
 * \ingroup of_action_pop_mpls
 */
static inline void
of_action_pop_mpls_delete(of_action_pop_mpls_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_pop_pbb_t
 * @param obj An instance of type of_action_pop_pbb_t
 *
 * \ingroup of_action_pop_pbb
 */
static inline void
of_action_pop_pbb_delete(of_action_pop_pbb_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_pop_vlan_t
 * @param obj An instance of type of_action_pop_vlan_t
 *
 * \ingroup of_action_pop_vlan
 */
static inline void
of_action_pop_vlan_delete(of_action_pop_vlan_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_push_mpls_t
 * @param obj An instance of type of_action_push_mpls_t
 *
 * \ingroup of_action_push_mpls
 */
static inline void
of_action_push_mpls_delete(of_action_push_mpls_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_push_pbb_t
 * @param obj An instance of type of_action_push_pbb_t
 *
 * \ingroup of_action_push_pbb
 */
static inline void
of_action_push_pbb_delete(of_action_push_pbb_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_push_vlan_t
 * @param obj An instance of type of_action_push_vlan_t
 *
 * \ingroup of_action_push_vlan
 */
static inline void
of_action_push_vlan_delete(of_action_push_vlan_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_set_dl_dst_t
 * @param obj An instance of type of_action_set_dl_dst_t
 *
 * \ingroup of_action_set_dl_dst
 */
static inline void
of_action_set_dl_dst_delete(of_action_set_dl_dst_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_set_dl_src_t
 * @param obj An instance of type of_action_set_dl_src_t
 *
 * \ingroup of_action_set_dl_src
 */
static inline void
of_action_set_dl_src_delete(of_action_set_dl_src_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_set_field_t
 * @param obj An instance of type of_action_set_field_t
 *
 * \ingroup of_action_set_field
 */
static inline void
of_action_set_field_delete(of_action_set_field_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_set_mpls_label_t
 * @param obj An instance of type of_action_set_mpls_label_t
 *
 * \ingroup of_action_set_mpls_label
 */
static inline void
of_action_set_mpls_label_delete(of_action_set_mpls_label_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_set_mpls_tc_t
 * @param obj An instance of type of_action_set_mpls_tc_t
 *
 * \ingroup of_action_set_mpls_tc
 */
static inline void
of_action_set_mpls_tc_delete(of_action_set_mpls_tc_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_set_mpls_ttl_t
 * @param obj An instance of type of_action_set_mpls_ttl_t
 *
 * \ingroup of_action_set_mpls_ttl
 */
static inline void
of_action_set_mpls_ttl_delete(of_action_set_mpls_ttl_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_set_nw_dst_t
 * @param obj An instance of type of_action_set_nw_dst_t
 *
 * \ingroup of_action_set_nw_dst
 */
static inline void
of_action_set_nw_dst_delete(of_action_set_nw_dst_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_set_nw_ecn_t
 * @param obj An instance of type of_action_set_nw_ecn_t
 *
 * \ingroup of_action_set_nw_ecn
 */
static inline void
of_action_set_nw_ecn_delete(of_action_set_nw_ecn_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_set_nw_src_t
 * @param obj An instance of type of_action_set_nw_src_t
 *
 * \ingroup of_action_set_nw_src
 */
static inline void
of_action_set_nw_src_delete(of_action_set_nw_src_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_set_nw_tos_t
 * @param obj An instance of type of_action_set_nw_tos_t
 *
 * \ingroup of_action_set_nw_tos
 */
static inline void
of_action_set_nw_tos_delete(of_action_set_nw_tos_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_set_nw_ttl_t
 * @param obj An instance of type of_action_set_nw_ttl_t
 *
 * \ingroup of_action_set_nw_ttl
 */
static inline void
of_action_set_nw_ttl_delete(of_action_set_nw_ttl_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_set_queue_t
 * @param obj An instance of type of_action_set_queue_t
 *
 * \ingroup of_action_set_queue
 */
static inline void
of_action_set_queue_delete(of_action_set_queue_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_set_tp_dst_t
 * @param obj An instance of type of_action_set_tp_dst_t
 *
 * \ingroup of_action_set_tp_dst
 */
static inline void
of_action_set_tp_dst_delete(of_action_set_tp_dst_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_set_tp_src_t
 * @param obj An instance of type of_action_set_tp_src_t
 *
 * \ingroup of_action_set_tp_src
 */
static inline void
of_action_set_tp_src_delete(of_action_set_tp_src_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_set_vlan_pcp_t
 * @param obj An instance of type of_action_set_vlan_pcp_t
 *
 * \ingroup of_action_set_vlan_pcp
 */
static inline void
of_action_set_vlan_pcp_delete(of_action_set_vlan_pcp_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_set_vlan_vid_t
 * @param obj An instance of type of_action_set_vlan_vid_t
 *
 * \ingroup of_action_set_vlan_vid
 */
static inline void
of_action_set_vlan_vid_delete(of_action_set_vlan_vid_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_action_strip_vlan_t
 * @param obj An instance of type of_action_strip_vlan_t
 *
 * \ingroup of_action_strip_vlan
 */
static inline void
of_action_strip_vlan_delete(of_action_strip_vlan_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_interface_t
 * @param obj An instance of type of_bsn_interface_t
 *
 * \ingroup of_bsn_interface
 */
static inline void
of_bsn_interface_delete(of_bsn_interface_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_lacp_stats_entry_t
 * @param obj An instance of type of_bsn_lacp_stats_entry_t
 *
 * \ingroup of_bsn_lacp_stats_entry
 */
static inline void
of_bsn_lacp_stats_entry_delete(of_bsn_lacp_stats_entry_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_port_counter_stats_entry_t
 * @param obj An instance of type of_bsn_port_counter_stats_entry_t
 *
 * \ingroup of_bsn_port_counter_stats_entry
 */
static inline void
of_bsn_port_counter_stats_entry_delete(of_bsn_port_counter_stats_entry_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_switch_pipeline_stats_entry_t
 * @param obj An instance of type of_bsn_switch_pipeline_stats_entry_t
 *
 * \ingroup of_bsn_switch_pipeline_stats_entry
 */
static inline void
of_bsn_switch_pipeline_stats_entry_delete(of_bsn_switch_pipeline_stats_entry_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_vlan_counter_stats_entry_t
 * @param obj An instance of type of_bsn_vlan_counter_stats_entry_t
 *
 * \ingroup of_bsn_vlan_counter_stats_entry
 */
static inline void
of_bsn_vlan_counter_stats_entry_delete(of_bsn_vlan_counter_stats_entry_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_vport_t
 * @param obj An instance of type of_bsn_vport_t
 *
 * \ingroup of_bsn_vport
 */
static inline void
of_bsn_vport_delete(of_bsn_vport_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_vport_header_t
 * @param obj An instance of type of_bsn_vport_header_t
 *
 * \ingroup of_bsn_vport_header
 */
static inline void
of_bsn_vport_header_delete(of_bsn_vport_header_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bsn_vport_q_in_q_t
 * @param obj An instance of type of_bsn_vport_q_in_q_t
 *
 * \ingroup of_bsn_vport_q_in_q
 */
static inline void
of_bsn_vport_q_in_q_delete(of_bsn_vport_q_in_q_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bucket_t
 * @param obj An instance of type of_bucket_t
 *
 * \ingroup of_bucket
 */
static inline void
of_bucket_delete(of_bucket_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_bucket_counter_t
 * @param obj An instance of type of_bucket_counter_t
 *
 * \ingroup of_bucket_counter
 */
static inline void
of_bucket_counter_delete(of_bucket_counter_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_experimenter_stats_header_t
 * @param obj An instance of type of_experimenter_stats_header_t
 *
 * \ingroup of_experimenter_stats_header
 */
static inline void
of_experimenter_stats_header_delete(of_experimenter_stats_header_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_flow_stats_entry_t
 * @param obj An instance of type of_flow_stats_entry_t
 *
 * \ingroup of_flow_stats_entry
 */
static inline void
of_flow_stats_entry_delete(of_flow_stats_entry_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_group_desc_stats_entry_t
 * @param obj An instance of type of_group_desc_stats_entry_t
 *
 * \ingroup of_group_desc_stats_entry
 */
static inline void
of_group_desc_stats_entry_delete(of_group_desc_stats_entry_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_group_stats_entry_t
 * @param obj An instance of type of_group_stats_entry_t
 *
 * \ingroup of_group_stats_entry
 */
static inline void
of_group_stats_entry_delete(of_group_stats_entry_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_header_t
 * @param obj An instance of type of_header_t
 *
 * \ingroup of_header
 */
static inline void
of_header_delete(of_header_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_hello_elem_t
 * @param obj An instance of type of_hello_elem_t
 *
 * \ingroup of_hello_elem
 */
static inline void
of_hello_elem_delete(of_hello_elem_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_hello_elem_header_t
 * @param obj An instance of type of_hello_elem_header_t
 *
 * \ingroup of_hello_elem_header
 */
static inline void
of_hello_elem_header_delete(of_hello_elem_header_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_hello_elem_versionbitmap_t
 * @param obj An instance of type of_hello_elem_versionbitmap_t
 *
 * \ingroup of_hello_elem_versionbitmap
 */
static inline void
of_hello_elem_versionbitmap_delete(of_hello_elem_versionbitmap_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_instruction_t
 * @param obj An instance of type of_instruction_t
 *
 * \ingroup of_instruction
 */
static inline void
of_instruction_delete(of_instruction_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_instruction_apply_actions_t
 * @param obj An instance of type of_instruction_apply_actions_t
 *
 * \ingroup of_instruction_apply_actions
 */
static inline void
of_instruction_apply_actions_delete(of_instruction_apply_actions_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_instruction_bsn_t
 * @param obj An instance of type of_instruction_bsn_t
 *
 * \ingroup of_instruction_bsn
 */
static inline void
of_instruction_bsn_delete(of_instruction_bsn_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_instruction_bsn_disable_src_mac_check_t
 * @param obj An instance of type of_instruction_bsn_disable_src_mac_check_t
 *
 * \ingroup of_instruction_bsn_disable_src_mac_check
 */
static inline void
of_instruction_bsn_disable_src_mac_check_delete(of_instruction_bsn_disable_src_mac_check_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_instruction_clear_actions_t
 * @param obj An instance of type of_instruction_clear_actions_t
 *
 * \ingroup of_instruction_clear_actions
 */
static inline void
of_instruction_clear_actions_delete(of_instruction_clear_actions_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_instruction_experimenter_t
 * @param obj An instance of type of_instruction_experimenter_t
 *
 * \ingroup of_instruction_experimenter
 */
static inline void
of_instruction_experimenter_delete(of_instruction_experimenter_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_instruction_goto_table_t
 * @param obj An instance of type of_instruction_goto_table_t
 *
 * \ingroup of_instruction_goto_table
 */
static inline void
of_instruction_goto_table_delete(of_instruction_goto_table_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_instruction_header_t
 * @param obj An instance of type of_instruction_header_t
 *
 * \ingroup of_instruction_header
 */
static inline void
of_instruction_header_delete(of_instruction_header_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_instruction_id_t
 * @param obj An instance of type of_instruction_id_t
 *
 * \ingroup of_instruction_id
 */
static inline void
of_instruction_id_delete(of_instruction_id_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_instruction_id_apply_actions_t
 * @param obj An instance of type of_instruction_id_apply_actions_t
 *
 * \ingroup of_instruction_id_apply_actions
 */
static inline void
of_instruction_id_apply_actions_delete(of_instruction_id_apply_actions_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_instruction_id_bsn_t
 * @param obj An instance of type of_instruction_id_bsn_t
 *
 * \ingroup of_instruction_id_bsn
 */
static inline void
of_instruction_id_bsn_delete(of_instruction_id_bsn_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_instruction_id_bsn_disable_src_mac_check_t
 * @param obj An instance of type of_instruction_id_bsn_disable_src_mac_check_t
 *
 * \ingroup of_instruction_id_bsn_disable_src_mac_check
 */
static inline void
of_instruction_id_bsn_disable_src_mac_check_delete(of_instruction_id_bsn_disable_src_mac_check_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_instruction_id_clear_actions_t
 * @param obj An instance of type of_instruction_id_clear_actions_t
 *
 * \ingroup of_instruction_id_clear_actions
 */
static inline void
of_instruction_id_clear_actions_delete(of_instruction_id_clear_actions_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_instruction_id_experimenter_t
 * @param obj An instance of type of_instruction_id_experimenter_t
 *
 * \ingroup of_instruction_id_experimenter
 */
static inline void
of_instruction_id_experimenter_delete(of_instruction_id_experimenter_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_instruction_id_goto_table_t
 * @param obj An instance of type of_instruction_id_goto_table_t
 *
 * \ingroup of_instruction_id_goto_table
 */
static inline void
of_instruction_id_goto_table_delete(of_instruction_id_goto_table_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_instruction_id_header_t
 * @param obj An instance of type of_instruction_id_header_t
 *
 * \ingroup of_instruction_id_header
 */
static inline void
of_instruction_id_header_delete(of_instruction_id_header_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_instruction_id_meter_t
 * @param obj An instance of type of_instruction_id_meter_t
 *
 * \ingroup of_instruction_id_meter
 */
static inline void
of_instruction_id_meter_delete(of_instruction_id_meter_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_instruction_id_write_actions_t
 * @param obj An instance of type of_instruction_id_write_actions_t
 *
 * \ingroup of_instruction_id_write_actions
 */
static inline void
of_instruction_id_write_actions_delete(of_instruction_id_write_actions_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_instruction_id_write_metadata_t
 * @param obj An instance of type of_instruction_id_write_metadata_t
 *
 * \ingroup of_instruction_id_write_metadata
 */
static inline void
of_instruction_id_write_metadata_delete(of_instruction_id_write_metadata_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_instruction_meter_t
 * @param obj An instance of type of_instruction_meter_t
 *
 * \ingroup of_instruction_meter
 */
static inline void
of_instruction_meter_delete(of_instruction_meter_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_instruction_write_actions_t
 * @param obj An instance of type of_instruction_write_actions_t
 *
 * \ingroup of_instruction_write_actions
 */
static inline void
of_instruction_write_actions_delete(of_instruction_write_actions_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_instruction_write_metadata_t
 * @param obj An instance of type of_instruction_write_metadata_t
 *
 * \ingroup of_instruction_write_metadata
 */
static inline void
of_instruction_write_metadata_delete(of_instruction_write_metadata_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_match_v1_t
 * @param obj An instance of type of_match_v1_t
 *
 * \ingroup of_match_v1
 */
static inline void
of_match_v1_delete(of_match_v1_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_match_v2_t
 * @param obj An instance of type of_match_v2_t
 *
 * \ingroup of_match_v2
 */
static inline void
of_match_v2_delete(of_match_v2_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_match_v3_t
 * @param obj An instance of type of_match_v3_t
 *
 * \ingroup of_match_v3
 */
static inline void
of_match_v3_delete(of_match_v3_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_meter_band_t
 * @param obj An instance of type of_meter_band_t
 *
 * \ingroup of_meter_band
 */
static inline void
of_meter_band_delete(of_meter_band_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_meter_band_drop_t
 * @param obj An instance of type of_meter_band_drop_t
 *
 * \ingroup of_meter_band_drop
 */
static inline void
of_meter_band_drop_delete(of_meter_band_drop_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_meter_band_dscp_remark_t
 * @param obj An instance of type of_meter_band_dscp_remark_t
 *
 * \ingroup of_meter_band_dscp_remark
 */
static inline void
of_meter_band_dscp_remark_delete(of_meter_band_dscp_remark_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_meter_band_experimenter_t
 * @param obj An instance of type of_meter_band_experimenter_t
 *
 * \ingroup of_meter_band_experimenter
 */
static inline void
of_meter_band_experimenter_delete(of_meter_band_experimenter_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_meter_band_header_t
 * @param obj An instance of type of_meter_band_header_t
 *
 * \ingroup of_meter_band_header
 */
static inline void
of_meter_band_header_delete(of_meter_band_header_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_meter_band_stats_t
 * @param obj An instance of type of_meter_band_stats_t
 *
 * \ingroup of_meter_band_stats
 */
static inline void
of_meter_band_stats_delete(of_meter_band_stats_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_meter_config_t
 * @param obj An instance of type of_meter_config_t
 *
 * \ingroup of_meter_config
 */
static inline void
of_meter_config_delete(of_meter_config_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_meter_features_t
 * @param obj An instance of type of_meter_features_t
 *
 * \ingroup of_meter_features
 */
static inline void
of_meter_features_delete(of_meter_features_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_meter_stats_t
 * @param obj An instance of type of_meter_stats_t
 *
 * \ingroup of_meter_stats
 */
static inline void
of_meter_stats_delete(of_meter_stats_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_t
 * @param obj An instance of type of_oxm_t
 *
 * \ingroup of_oxm
 */
static inline void
of_oxm_delete(of_oxm_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_arp_op_t
 * @param obj An instance of type of_oxm_arp_op_t
 *
 * \ingroup of_oxm_arp_op
 */
static inline void
of_oxm_arp_op_delete(of_oxm_arp_op_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_arp_op_masked_t
 * @param obj An instance of type of_oxm_arp_op_masked_t
 *
 * \ingroup of_oxm_arp_op_masked
 */
static inline void
of_oxm_arp_op_masked_delete(of_oxm_arp_op_masked_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_arp_sha_t
 * @param obj An instance of type of_oxm_arp_sha_t
 *
 * \ingroup of_oxm_arp_sha
 */
static inline void
of_oxm_arp_sha_delete(of_oxm_arp_sha_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_arp_sha_masked_t
 * @param obj An instance of type of_oxm_arp_sha_masked_t
 *
 * \ingroup of_oxm_arp_sha_masked
 */
static inline void
of_oxm_arp_sha_masked_delete(of_oxm_arp_sha_masked_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_arp_spa_t
 * @param obj An instance of type of_oxm_arp_spa_t
 *
 * \ingroup of_oxm_arp_spa
 */
static inline void
of_oxm_arp_spa_delete(of_oxm_arp_spa_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_arp_spa_masked_t
 * @param obj An instance of type of_oxm_arp_spa_masked_t
 *
 * \ingroup of_oxm_arp_spa_masked
 */
static inline void
of_oxm_arp_spa_masked_delete(of_oxm_arp_spa_masked_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_arp_tha_t
 * @param obj An instance of type of_oxm_arp_tha_t
 *
 * \ingroup of_oxm_arp_tha
 */
static inline void
of_oxm_arp_tha_delete(of_oxm_arp_tha_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_arp_tha_masked_t
 * @param obj An instance of type of_oxm_arp_tha_masked_t
 *
 * \ingroup of_oxm_arp_tha_masked
 */
static inline void
of_oxm_arp_tha_masked_delete(of_oxm_arp_tha_masked_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_arp_tpa_t
 * @param obj An instance of type of_oxm_arp_tpa_t
 *
 * \ingroup of_oxm_arp_tpa
 */
static inline void
of_oxm_arp_tpa_delete(of_oxm_arp_tpa_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_arp_tpa_masked_t
 * @param obj An instance of type of_oxm_arp_tpa_masked_t
 *
 * \ingroup of_oxm_arp_tpa_masked
 */
static inline void
of_oxm_arp_tpa_masked_delete(of_oxm_arp_tpa_masked_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_bsn_global_vrf_allowed_t
 * @param obj An instance of type of_oxm_bsn_global_vrf_allowed_t
 *
 * \ingroup of_oxm_bsn_global_vrf_allowed
 */
static inline void
of_oxm_bsn_global_vrf_allowed_delete(of_oxm_bsn_global_vrf_allowed_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_bsn_global_vrf_allowed_masked_t
 * @param obj An instance of type of_oxm_bsn_global_vrf_allowed_masked_t
 *
 * \ingroup of_oxm_bsn_global_vrf_allowed_masked
 */
static inline void
of_oxm_bsn_global_vrf_allowed_masked_delete(of_oxm_bsn_global_vrf_allowed_masked_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_bsn_in_ports_128_t
 * @param obj An instance of type of_oxm_bsn_in_ports_128_t
 *
 * \ingroup of_oxm_bsn_in_ports_128
 */
static inline void
of_oxm_bsn_in_ports_128_delete(of_oxm_bsn_in_ports_128_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_bsn_in_ports_128_masked_t
 * @param obj An instance of type of_oxm_bsn_in_ports_128_masked_t
 *
 * \ingroup of_oxm_bsn_in_ports_128_masked
 */
static inline void
of_oxm_bsn_in_ports_128_masked_delete(of_oxm_bsn_in_ports_128_masked_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_bsn_l3_dst_class_id_t
 * @param obj An instance of type of_oxm_bsn_l3_dst_class_id_t
 *
 * \ingroup of_oxm_bsn_l3_dst_class_id
 */
static inline void
of_oxm_bsn_l3_dst_class_id_delete(of_oxm_bsn_l3_dst_class_id_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_bsn_l3_dst_class_id_masked_t
 * @param obj An instance of type of_oxm_bsn_l3_dst_class_id_masked_t
 *
 * \ingroup of_oxm_bsn_l3_dst_class_id_masked
 */
static inline void
of_oxm_bsn_l3_dst_class_id_masked_delete(of_oxm_bsn_l3_dst_class_id_masked_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_bsn_l3_interface_class_id_t
 * @param obj An instance of type of_oxm_bsn_l3_interface_class_id_t
 *
 * \ingroup of_oxm_bsn_l3_interface_class_id
 */
static inline void
of_oxm_bsn_l3_interface_class_id_delete(of_oxm_bsn_l3_interface_class_id_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_bsn_l3_interface_class_id_masked_t
 * @param obj An instance of type of_oxm_bsn_l3_interface_class_id_masked_t
 *
 * \ingroup of_oxm_bsn_l3_interface_class_id_masked
 */
static inline void
of_oxm_bsn_l3_interface_class_id_masked_delete(of_oxm_bsn_l3_interface_class_id_masked_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_bsn_l3_src_class_id_t
 * @param obj An instance of type of_oxm_bsn_l3_src_class_id_t
 *
 * \ingroup of_oxm_bsn_l3_src_class_id
 */
static inline void
of_oxm_bsn_l3_src_class_id_delete(of_oxm_bsn_l3_src_class_id_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_bsn_l3_src_class_id_masked_t
 * @param obj An instance of type of_oxm_bsn_l3_src_class_id_masked_t
 *
 * \ingroup of_oxm_bsn_l3_src_class_id_masked
 */
static inline void
of_oxm_bsn_l3_src_class_id_masked_delete(of_oxm_bsn_l3_src_class_id_masked_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_bsn_lag_id_t
 * @param obj An instance of type of_oxm_bsn_lag_id_t
 *
 * \ingroup of_oxm_bsn_lag_id
 */
static inline void
of_oxm_bsn_lag_id_delete(of_oxm_bsn_lag_id_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_bsn_lag_id_masked_t
 * @param obj An instance of type of_oxm_bsn_lag_id_masked_t
 *
 * \ingroup of_oxm_bsn_lag_id_masked
 */
static inline void
of_oxm_bsn_lag_id_masked_delete(of_oxm_bsn_lag_id_masked_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_bsn_vrf_t
 * @param obj An instance of type of_oxm_bsn_vrf_t
 *
 * \ingroup of_oxm_bsn_vrf
 */
static inline void
of_oxm_bsn_vrf_delete(of_oxm_bsn_vrf_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_bsn_vrf_masked_t
 * @param obj An instance of type of_oxm_bsn_vrf_masked_t
 *
 * \ingroup of_oxm_bsn_vrf_masked
 */
static inline void
of_oxm_bsn_vrf_masked_delete(of_oxm_bsn_vrf_masked_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_eth_dst_t
 * @param obj An instance of type of_oxm_eth_dst_t
 *
 * \ingroup of_oxm_eth_dst
 */
static inline void
of_oxm_eth_dst_delete(of_oxm_eth_dst_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_eth_dst_masked_t
 * @param obj An instance of type of_oxm_eth_dst_masked_t
 *
 * \ingroup of_oxm_eth_dst_masked
 */
static inline void
of_oxm_eth_dst_masked_delete(of_oxm_eth_dst_masked_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_eth_src_t
 * @param obj An instance of type of_oxm_eth_src_t
 *
 * \ingroup of_oxm_eth_src
 */
static inline void
of_oxm_eth_src_delete(of_oxm_eth_src_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_eth_src_masked_t
 * @param obj An instance of type of_oxm_eth_src_masked_t
 *
 * \ingroup of_oxm_eth_src_masked
 */
static inline void
of_oxm_eth_src_masked_delete(of_oxm_eth_src_masked_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_eth_type_t
 * @param obj An instance of type of_oxm_eth_type_t
 *
 * \ingroup of_oxm_eth_type
 */
static inline void
of_oxm_eth_type_delete(of_oxm_eth_type_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_eth_type_masked_t
 * @param obj An instance of type of_oxm_eth_type_masked_t
 *
 * \ingroup of_oxm_eth_type_masked
 */
static inline void
of_oxm_eth_type_masked_delete(of_oxm_eth_type_masked_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_header_t
 * @param obj An instance of type of_oxm_header_t
 *
 * \ingroup of_oxm_header
 */
static inline void
of_oxm_header_delete(of_oxm_header_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_icmpv4_code_t
 * @param obj An instance of type of_oxm_icmpv4_code_t
 *
 * \ingroup of_oxm_icmpv4_code
 */
static inline void
of_oxm_icmpv4_code_delete(of_oxm_icmpv4_code_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_icmpv4_code_masked_t
 * @param obj An instance of type of_oxm_icmpv4_code_masked_t
 *
 * \ingroup of_oxm_icmpv4_code_masked
 */
static inline void
of_oxm_icmpv4_code_masked_delete(of_oxm_icmpv4_code_masked_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_icmpv4_type_t
 * @param obj An instance of type of_oxm_icmpv4_type_t
 *
 * \ingroup of_oxm_icmpv4_type
 */
static inline void
of_oxm_icmpv4_type_delete(of_oxm_icmpv4_type_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_icmpv4_type_masked_t
 * @param obj An instance of type of_oxm_icmpv4_type_masked_t
 *
 * \ingroup of_oxm_icmpv4_type_masked
 */
static inline void
of_oxm_icmpv4_type_masked_delete(of_oxm_icmpv4_type_masked_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_icmpv6_code_t
 * @param obj An instance of type of_oxm_icmpv6_code_t
 *
 * \ingroup of_oxm_icmpv6_code
 */
static inline void
of_oxm_icmpv6_code_delete(of_oxm_icmpv6_code_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_icmpv6_code_masked_t
 * @param obj An instance of type of_oxm_icmpv6_code_masked_t
 *
 * \ingroup of_oxm_icmpv6_code_masked
 */
static inline void
of_oxm_icmpv6_code_masked_delete(of_oxm_icmpv6_code_masked_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_icmpv6_type_t
 * @param obj An instance of type of_oxm_icmpv6_type_t
 *
 * \ingroup of_oxm_icmpv6_type
 */
static inline void
of_oxm_icmpv6_type_delete(of_oxm_icmpv6_type_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_icmpv6_type_masked_t
 * @param obj An instance of type of_oxm_icmpv6_type_masked_t
 *
 * \ingroup of_oxm_icmpv6_type_masked
 */
static inline void
of_oxm_icmpv6_type_masked_delete(of_oxm_icmpv6_type_masked_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_in_phy_port_t
 * @param obj An instance of type of_oxm_in_phy_port_t
 *
 * \ingroup of_oxm_in_phy_port
 */
static inline void
of_oxm_in_phy_port_delete(of_oxm_in_phy_port_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_in_phy_port_masked_t
 * @param obj An instance of type of_oxm_in_phy_port_masked_t
 *
 * \ingroup of_oxm_in_phy_port_masked
 */
static inline void
of_oxm_in_phy_port_masked_delete(of_oxm_in_phy_port_masked_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_in_port_t
 * @param obj An instance of type of_oxm_in_port_t
 *
 * \ingroup of_oxm_in_port
 */
static inline void
of_oxm_in_port_delete(of_oxm_in_port_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_in_port_masked_t
 * @param obj An instance of type of_oxm_in_port_masked_t
 *
 * \ingroup of_oxm_in_port_masked
 */
static inline void
of_oxm_in_port_masked_delete(of_oxm_in_port_masked_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_ip_dscp_t
 * @param obj An instance of type of_oxm_ip_dscp_t
 *
 * \ingroup of_oxm_ip_dscp
 */
static inline void
of_oxm_ip_dscp_delete(of_oxm_ip_dscp_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_ip_dscp_masked_t
 * @param obj An instance of type of_oxm_ip_dscp_masked_t
 *
 * \ingroup of_oxm_ip_dscp_masked
 */
static inline void
of_oxm_ip_dscp_masked_delete(of_oxm_ip_dscp_masked_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_ip_ecn_t
 * @param obj An instance of type of_oxm_ip_ecn_t
 *
 * \ingroup of_oxm_ip_ecn
 */
static inline void
of_oxm_ip_ecn_delete(of_oxm_ip_ecn_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_ip_ecn_masked_t
 * @param obj An instance of type of_oxm_ip_ecn_masked_t
 *
 * \ingroup of_oxm_ip_ecn_masked
 */
static inline void
of_oxm_ip_ecn_masked_delete(of_oxm_ip_ecn_masked_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_ip_proto_t
 * @param obj An instance of type of_oxm_ip_proto_t
 *
 * \ingroup of_oxm_ip_proto
 */
static inline void
of_oxm_ip_proto_delete(of_oxm_ip_proto_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_ip_proto_masked_t
 * @param obj An instance of type of_oxm_ip_proto_masked_t
 *
 * \ingroup of_oxm_ip_proto_masked
 */
static inline void
of_oxm_ip_proto_masked_delete(of_oxm_ip_proto_masked_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_ipv4_dst_t
 * @param obj An instance of type of_oxm_ipv4_dst_t
 *
 * \ingroup of_oxm_ipv4_dst
 */
static inline void
of_oxm_ipv4_dst_delete(of_oxm_ipv4_dst_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_ipv4_dst_masked_t
 * @param obj An instance of type of_oxm_ipv4_dst_masked_t
 *
 * \ingroup of_oxm_ipv4_dst_masked
 */
static inline void
of_oxm_ipv4_dst_masked_delete(of_oxm_ipv4_dst_masked_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_ipv4_src_t
 * @param obj An instance of type of_oxm_ipv4_src_t
 *
 * \ingroup of_oxm_ipv4_src
 */
static inline void
of_oxm_ipv4_src_delete(of_oxm_ipv4_src_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_ipv4_src_masked_t
 * @param obj An instance of type of_oxm_ipv4_src_masked_t
 *
 * \ingroup of_oxm_ipv4_src_masked
 */
static inline void
of_oxm_ipv4_src_masked_delete(of_oxm_ipv4_src_masked_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_ipv6_dst_t
 * @param obj An instance of type of_oxm_ipv6_dst_t
 *
 * \ingroup of_oxm_ipv6_dst
 */
static inline void
of_oxm_ipv6_dst_delete(of_oxm_ipv6_dst_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_ipv6_dst_masked_t
 * @param obj An instance of type of_oxm_ipv6_dst_masked_t
 *
 * \ingroup of_oxm_ipv6_dst_masked
 */
static inline void
of_oxm_ipv6_dst_masked_delete(of_oxm_ipv6_dst_masked_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_ipv6_flabel_t
 * @param obj An instance of type of_oxm_ipv6_flabel_t
 *
 * \ingroup of_oxm_ipv6_flabel
 */
static inline void
of_oxm_ipv6_flabel_delete(of_oxm_ipv6_flabel_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_ipv6_flabel_masked_t
 * @param obj An instance of type of_oxm_ipv6_flabel_masked_t
 *
 * \ingroup of_oxm_ipv6_flabel_masked
 */
static inline void
of_oxm_ipv6_flabel_masked_delete(of_oxm_ipv6_flabel_masked_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_ipv6_nd_sll_t
 * @param obj An instance of type of_oxm_ipv6_nd_sll_t
 *
 * \ingroup of_oxm_ipv6_nd_sll
 */
static inline void
of_oxm_ipv6_nd_sll_delete(of_oxm_ipv6_nd_sll_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_ipv6_nd_sll_masked_t
 * @param obj An instance of type of_oxm_ipv6_nd_sll_masked_t
 *
 * \ingroup of_oxm_ipv6_nd_sll_masked
 */
static inline void
of_oxm_ipv6_nd_sll_masked_delete(of_oxm_ipv6_nd_sll_masked_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_ipv6_nd_target_t
 * @param obj An instance of type of_oxm_ipv6_nd_target_t
 *
 * \ingroup of_oxm_ipv6_nd_target
 */
static inline void
of_oxm_ipv6_nd_target_delete(of_oxm_ipv6_nd_target_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_ipv6_nd_target_masked_t
 * @param obj An instance of type of_oxm_ipv6_nd_target_masked_t
 *
 * \ingroup of_oxm_ipv6_nd_target_masked
 */
static inline void
of_oxm_ipv6_nd_target_masked_delete(of_oxm_ipv6_nd_target_masked_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_ipv6_nd_tll_t
 * @param obj An instance of type of_oxm_ipv6_nd_tll_t
 *
 * \ingroup of_oxm_ipv6_nd_tll
 */
static inline void
of_oxm_ipv6_nd_tll_delete(of_oxm_ipv6_nd_tll_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_ipv6_nd_tll_masked_t
 * @param obj An instance of type of_oxm_ipv6_nd_tll_masked_t
 *
 * \ingroup of_oxm_ipv6_nd_tll_masked
 */
static inline void
of_oxm_ipv6_nd_tll_masked_delete(of_oxm_ipv6_nd_tll_masked_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_ipv6_src_t
 * @param obj An instance of type of_oxm_ipv6_src_t
 *
 * \ingroup of_oxm_ipv6_src
 */
static inline void
of_oxm_ipv6_src_delete(of_oxm_ipv6_src_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_ipv6_src_masked_t
 * @param obj An instance of type of_oxm_ipv6_src_masked_t
 *
 * \ingroup of_oxm_ipv6_src_masked
 */
static inline void
of_oxm_ipv6_src_masked_delete(of_oxm_ipv6_src_masked_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_metadata_t
 * @param obj An instance of type of_oxm_metadata_t
 *
 * \ingroup of_oxm_metadata
 */
static inline void
of_oxm_metadata_delete(of_oxm_metadata_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_metadata_masked_t
 * @param obj An instance of type of_oxm_metadata_masked_t
 *
 * \ingroup of_oxm_metadata_masked
 */
static inline void
of_oxm_metadata_masked_delete(of_oxm_metadata_masked_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_mpls_label_t
 * @param obj An instance of type of_oxm_mpls_label_t
 *
 * \ingroup of_oxm_mpls_label
 */
static inline void
of_oxm_mpls_label_delete(of_oxm_mpls_label_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_mpls_label_masked_t
 * @param obj An instance of type of_oxm_mpls_label_masked_t
 *
 * \ingroup of_oxm_mpls_label_masked
 */
static inline void
of_oxm_mpls_label_masked_delete(of_oxm_mpls_label_masked_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_mpls_tc_t
 * @param obj An instance of type of_oxm_mpls_tc_t
 *
 * \ingroup of_oxm_mpls_tc
 */
static inline void
of_oxm_mpls_tc_delete(of_oxm_mpls_tc_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_mpls_tc_masked_t
 * @param obj An instance of type of_oxm_mpls_tc_masked_t
 *
 * \ingroup of_oxm_mpls_tc_masked
 */
static inline void
of_oxm_mpls_tc_masked_delete(of_oxm_mpls_tc_masked_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_sctp_dst_t
 * @param obj An instance of type of_oxm_sctp_dst_t
 *
 * \ingroup of_oxm_sctp_dst
 */
static inline void
of_oxm_sctp_dst_delete(of_oxm_sctp_dst_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_sctp_dst_masked_t
 * @param obj An instance of type of_oxm_sctp_dst_masked_t
 *
 * \ingroup of_oxm_sctp_dst_masked
 */
static inline void
of_oxm_sctp_dst_masked_delete(of_oxm_sctp_dst_masked_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_sctp_src_t
 * @param obj An instance of type of_oxm_sctp_src_t
 *
 * \ingroup of_oxm_sctp_src
 */
static inline void
of_oxm_sctp_src_delete(of_oxm_sctp_src_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_sctp_src_masked_t
 * @param obj An instance of type of_oxm_sctp_src_masked_t
 *
 * \ingroup of_oxm_sctp_src_masked
 */
static inline void
of_oxm_sctp_src_masked_delete(of_oxm_sctp_src_masked_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_tcp_dst_t
 * @param obj An instance of type of_oxm_tcp_dst_t
 *
 * \ingroup of_oxm_tcp_dst
 */
static inline void
of_oxm_tcp_dst_delete(of_oxm_tcp_dst_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_tcp_dst_masked_t
 * @param obj An instance of type of_oxm_tcp_dst_masked_t
 *
 * \ingroup of_oxm_tcp_dst_masked
 */
static inline void
of_oxm_tcp_dst_masked_delete(of_oxm_tcp_dst_masked_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_tcp_src_t
 * @param obj An instance of type of_oxm_tcp_src_t
 *
 * \ingroup of_oxm_tcp_src
 */
static inline void
of_oxm_tcp_src_delete(of_oxm_tcp_src_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_tcp_src_masked_t
 * @param obj An instance of type of_oxm_tcp_src_masked_t
 *
 * \ingroup of_oxm_tcp_src_masked
 */
static inline void
of_oxm_tcp_src_masked_delete(of_oxm_tcp_src_masked_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_udp_dst_t
 * @param obj An instance of type of_oxm_udp_dst_t
 *
 * \ingroup of_oxm_udp_dst
 */
static inline void
of_oxm_udp_dst_delete(of_oxm_udp_dst_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_udp_dst_masked_t
 * @param obj An instance of type of_oxm_udp_dst_masked_t
 *
 * \ingroup of_oxm_udp_dst_masked
 */
static inline void
of_oxm_udp_dst_masked_delete(of_oxm_udp_dst_masked_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_udp_src_t
 * @param obj An instance of type of_oxm_udp_src_t
 *
 * \ingroup of_oxm_udp_src
 */
static inline void
of_oxm_udp_src_delete(of_oxm_udp_src_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_udp_src_masked_t
 * @param obj An instance of type of_oxm_udp_src_masked_t
 *
 * \ingroup of_oxm_udp_src_masked
 */
static inline void
of_oxm_udp_src_masked_delete(of_oxm_udp_src_masked_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_vlan_pcp_t
 * @param obj An instance of type of_oxm_vlan_pcp_t
 *
 * \ingroup of_oxm_vlan_pcp
 */
static inline void
of_oxm_vlan_pcp_delete(of_oxm_vlan_pcp_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_vlan_pcp_masked_t
 * @param obj An instance of type of_oxm_vlan_pcp_masked_t
 *
 * \ingroup of_oxm_vlan_pcp_masked
 */
static inline void
of_oxm_vlan_pcp_masked_delete(of_oxm_vlan_pcp_masked_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_vlan_vid_t
 * @param obj An instance of type of_oxm_vlan_vid_t
 *
 * \ingroup of_oxm_vlan_vid
 */
static inline void
of_oxm_vlan_vid_delete(of_oxm_vlan_vid_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_oxm_vlan_vid_masked_t
 * @param obj An instance of type of_oxm_vlan_vid_masked_t
 *
 * \ingroup of_oxm_vlan_vid_masked
 */
static inline void
of_oxm_vlan_vid_masked_delete(of_oxm_vlan_vid_masked_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_packet_queue_t
 * @param obj An instance of type of_packet_queue_t
 *
 * \ingroup of_packet_queue
 */
static inline void
of_packet_queue_delete(of_packet_queue_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_port_desc_t
 * @param obj An instance of type of_port_desc_t
 *
 * \ingroup of_port_desc
 */
static inline void
of_port_desc_delete(of_port_desc_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_port_stats_entry_t
 * @param obj An instance of type of_port_stats_entry_t
 *
 * \ingroup of_port_stats_entry
 */
static inline void
of_port_stats_entry_delete(of_port_stats_entry_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_queue_prop_t
 * @param obj An instance of type of_queue_prop_t
 *
 * \ingroup of_queue_prop
 */
static inline void
of_queue_prop_delete(of_queue_prop_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_queue_prop_experimenter_t
 * @param obj An instance of type of_queue_prop_experimenter_t
 *
 * \ingroup of_queue_prop_experimenter
 */
static inline void
of_queue_prop_experimenter_delete(of_queue_prop_experimenter_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_queue_prop_header_t
 * @param obj An instance of type of_queue_prop_header_t
 *
 * \ingroup of_queue_prop_header
 */
static inline void
of_queue_prop_header_delete(of_queue_prop_header_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_queue_prop_max_rate_t
 * @param obj An instance of type of_queue_prop_max_rate_t
 *
 * \ingroup of_queue_prop_max_rate
 */
static inline void
of_queue_prop_max_rate_delete(of_queue_prop_max_rate_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_queue_prop_min_rate_t
 * @param obj An instance of type of_queue_prop_min_rate_t
 *
 * \ingroup of_queue_prop_min_rate
 */
static inline void
of_queue_prop_min_rate_delete(of_queue_prop_min_rate_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_queue_stats_entry_t
 * @param obj An instance of type of_queue_stats_entry_t
 *
 * \ingroup of_queue_stats_entry
 */
static inline void
of_queue_stats_entry_delete(of_queue_stats_entry_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_table_feature_prop_t
 * @param obj An instance of type of_table_feature_prop_t
 *
 * \ingroup of_table_feature_prop
 */
static inline void
of_table_feature_prop_delete(of_table_feature_prop_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_table_feature_prop_apply_actions_t
 * @param obj An instance of type of_table_feature_prop_apply_actions_t
 *
 * \ingroup of_table_feature_prop_apply_actions
 */
static inline void
of_table_feature_prop_apply_actions_delete(of_table_feature_prop_apply_actions_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_table_feature_prop_apply_actions_miss_t
 * @param obj An instance of type of_table_feature_prop_apply_actions_miss_t
 *
 * \ingroup of_table_feature_prop_apply_actions_miss
 */
static inline void
of_table_feature_prop_apply_actions_miss_delete(of_table_feature_prop_apply_actions_miss_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_table_feature_prop_apply_setfield_t
 * @param obj An instance of type of_table_feature_prop_apply_setfield_t
 *
 * \ingroup of_table_feature_prop_apply_setfield
 */
static inline void
of_table_feature_prop_apply_setfield_delete(of_table_feature_prop_apply_setfield_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_table_feature_prop_apply_setfield_miss_t
 * @param obj An instance of type of_table_feature_prop_apply_setfield_miss_t
 *
 * \ingroup of_table_feature_prop_apply_setfield_miss
 */
static inline void
of_table_feature_prop_apply_setfield_miss_delete(of_table_feature_prop_apply_setfield_miss_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_table_feature_prop_experimenter_t
 * @param obj An instance of type of_table_feature_prop_experimenter_t
 *
 * \ingroup of_table_feature_prop_experimenter
 */
static inline void
of_table_feature_prop_experimenter_delete(of_table_feature_prop_experimenter_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_table_feature_prop_header_t
 * @param obj An instance of type of_table_feature_prop_header_t
 *
 * \ingroup of_table_feature_prop_header
 */
static inline void
of_table_feature_prop_header_delete(of_table_feature_prop_header_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_table_feature_prop_instructions_t
 * @param obj An instance of type of_table_feature_prop_instructions_t
 *
 * \ingroup of_table_feature_prop_instructions
 */
static inline void
of_table_feature_prop_instructions_delete(of_table_feature_prop_instructions_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_table_feature_prop_instructions_miss_t
 * @param obj An instance of type of_table_feature_prop_instructions_miss_t
 *
 * \ingroup of_table_feature_prop_instructions_miss
 */
static inline void
of_table_feature_prop_instructions_miss_delete(of_table_feature_prop_instructions_miss_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_table_feature_prop_match_t
 * @param obj An instance of type of_table_feature_prop_match_t
 *
 * \ingroup of_table_feature_prop_match
 */
static inline void
of_table_feature_prop_match_delete(of_table_feature_prop_match_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_table_feature_prop_next_tables_t
 * @param obj An instance of type of_table_feature_prop_next_tables_t
 *
 * \ingroup of_table_feature_prop_next_tables
 */
static inline void
of_table_feature_prop_next_tables_delete(of_table_feature_prop_next_tables_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_table_feature_prop_next_tables_miss_t
 * @param obj An instance of type of_table_feature_prop_next_tables_miss_t
 *
 * \ingroup of_table_feature_prop_next_tables_miss
 */
static inline void
of_table_feature_prop_next_tables_miss_delete(of_table_feature_prop_next_tables_miss_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_table_feature_prop_wildcards_t
 * @param obj An instance of type of_table_feature_prop_wildcards_t
 *
 * \ingroup of_table_feature_prop_wildcards
 */
static inline void
of_table_feature_prop_wildcards_delete(of_table_feature_prop_wildcards_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_table_feature_prop_write_actions_t
 * @param obj An instance of type of_table_feature_prop_write_actions_t
 *
 * \ingroup of_table_feature_prop_write_actions
 */
static inline void
of_table_feature_prop_write_actions_delete(of_table_feature_prop_write_actions_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_table_feature_prop_write_actions_miss_t
 * @param obj An instance of type of_table_feature_prop_write_actions_miss_t
 *
 * \ingroup of_table_feature_prop_write_actions_miss
 */
static inline void
of_table_feature_prop_write_actions_miss_delete(of_table_feature_prop_write_actions_miss_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_table_feature_prop_write_setfield_t
 * @param obj An instance of type of_table_feature_prop_write_setfield_t
 *
 * \ingroup of_table_feature_prop_write_setfield
 */
static inline void
of_table_feature_prop_write_setfield_delete(of_table_feature_prop_write_setfield_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_table_feature_prop_write_setfield_miss_t
 * @param obj An instance of type of_table_feature_prop_write_setfield_miss_t
 *
 * \ingroup of_table_feature_prop_write_setfield_miss
 */
static inline void
of_table_feature_prop_write_setfield_miss_delete(of_table_feature_prop_write_setfield_miss_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_table_features_t
 * @param obj An instance of type of_table_features_t
 *
 * \ingroup of_table_features
 */
static inline void
of_table_features_delete(of_table_features_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_table_stats_entry_t
 * @param obj An instance of type of_table_stats_entry_t
 *
 * \ingroup of_table_stats_entry
 */
static inline void
of_table_stats_entry_delete(of_table_stats_entry_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_uint32_t
 * @param obj An instance of type of_uint32_t
 *
 * \ingroup of_uint32
 */
static inline void
of_uint32_delete(of_uint32_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_uint64_t
 * @param obj An instance of type of_uint64_t
 *
 * \ingroup of_uint64
 */
static inline void
of_uint64_delete(of_uint64_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_uint8_t
 * @param obj An instance of type of_uint8_t
 *
 * \ingroup of_uint8
 */
static inline void
of_uint8_delete(of_uint8_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_list_action_t
 * @param obj An instance of type of_list_action_t
 *
 * \ingroup of_list_action
 */
static inline void
of_list_action_delete(of_list_action_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_list_action_id_t
 * @param obj An instance of type of_list_action_id_t
 *
 * \ingroup of_list_action_id
 */
static inline void
of_list_action_id_delete(of_list_action_id_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_list_bsn_interface_t
 * @param obj An instance of type of_list_bsn_interface_t
 *
 * \ingroup of_list_bsn_interface
 */
static inline void
of_list_bsn_interface_delete(of_list_bsn_interface_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_list_bsn_lacp_stats_entry_t
 * @param obj An instance of type of_list_bsn_lacp_stats_entry_t
 *
 * \ingroup of_list_bsn_lacp_stats_entry
 */
static inline void
of_list_bsn_lacp_stats_entry_delete(of_list_bsn_lacp_stats_entry_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_list_bsn_port_counter_stats_entry_t
 * @param obj An instance of type of_list_bsn_port_counter_stats_entry_t
 *
 * \ingroup of_list_bsn_port_counter_stats_entry
 */
static inline void
of_list_bsn_port_counter_stats_entry_delete(of_list_bsn_port_counter_stats_entry_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_list_bsn_switch_pipeline_stats_entry_t
 * @param obj An instance of type of_list_bsn_switch_pipeline_stats_entry_t
 *
 * \ingroup of_list_bsn_switch_pipeline_stats_entry
 */
static inline void
of_list_bsn_switch_pipeline_stats_entry_delete(of_list_bsn_switch_pipeline_stats_entry_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_list_bsn_vlan_counter_stats_entry_t
 * @param obj An instance of type of_list_bsn_vlan_counter_stats_entry_t
 *
 * \ingroup of_list_bsn_vlan_counter_stats_entry
 */
static inline void
of_list_bsn_vlan_counter_stats_entry_delete(of_list_bsn_vlan_counter_stats_entry_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_list_bucket_t
 * @param obj An instance of type of_list_bucket_t
 *
 * \ingroup of_list_bucket
 */
static inline void
of_list_bucket_delete(of_list_bucket_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_list_bucket_counter_t
 * @param obj An instance of type of_list_bucket_counter_t
 *
 * \ingroup of_list_bucket_counter
 */
static inline void
of_list_bucket_counter_delete(of_list_bucket_counter_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_list_flow_stats_entry_t
 * @param obj An instance of type of_list_flow_stats_entry_t
 *
 * \ingroup of_list_flow_stats_entry
 */
static inline void
of_list_flow_stats_entry_delete(of_list_flow_stats_entry_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_list_group_desc_stats_entry_t
 * @param obj An instance of type of_list_group_desc_stats_entry_t
 *
 * \ingroup of_list_group_desc_stats_entry
 */
static inline void
of_list_group_desc_stats_entry_delete(of_list_group_desc_stats_entry_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_list_group_stats_entry_t
 * @param obj An instance of type of_list_group_stats_entry_t
 *
 * \ingroup of_list_group_stats_entry
 */
static inline void
of_list_group_stats_entry_delete(of_list_group_stats_entry_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_list_hello_elem_t
 * @param obj An instance of type of_list_hello_elem_t
 *
 * \ingroup of_list_hello_elem
 */
static inline void
of_list_hello_elem_delete(of_list_hello_elem_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_list_instruction_t
 * @param obj An instance of type of_list_instruction_t
 *
 * \ingroup of_list_instruction
 */
static inline void
of_list_instruction_delete(of_list_instruction_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_list_meter_band_t
 * @param obj An instance of type of_list_meter_band_t
 *
 * \ingroup of_list_meter_band
 */
static inline void
of_list_meter_band_delete(of_list_meter_band_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_list_meter_band_stats_t
 * @param obj An instance of type of_list_meter_band_stats_t
 *
 * \ingroup of_list_meter_band_stats
 */
static inline void
of_list_meter_band_stats_delete(of_list_meter_band_stats_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_list_meter_stats_t
 * @param obj An instance of type of_list_meter_stats_t
 *
 * \ingroup of_list_meter_stats
 */
static inline void
of_list_meter_stats_delete(of_list_meter_stats_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_list_oxm_t
 * @param obj An instance of type of_list_oxm_t
 *
 * \ingroup of_list_oxm
 */
static inline void
of_list_oxm_delete(of_list_oxm_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_list_packet_queue_t
 * @param obj An instance of type of_list_packet_queue_t
 *
 * \ingroup of_list_packet_queue
 */
static inline void
of_list_packet_queue_delete(of_list_packet_queue_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_list_port_desc_t
 * @param obj An instance of type of_list_port_desc_t
 *
 * \ingroup of_list_port_desc
 */
static inline void
of_list_port_desc_delete(of_list_port_desc_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_list_port_stats_entry_t
 * @param obj An instance of type of_list_port_stats_entry_t
 *
 * \ingroup of_list_port_stats_entry
 */
static inline void
of_list_port_stats_entry_delete(of_list_port_stats_entry_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_list_queue_prop_t
 * @param obj An instance of type of_list_queue_prop_t
 *
 * \ingroup of_list_queue_prop
 */
static inline void
of_list_queue_prop_delete(of_list_queue_prop_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_list_queue_stats_entry_t
 * @param obj An instance of type of_list_queue_stats_entry_t
 *
 * \ingroup of_list_queue_stats_entry
 */
static inline void
of_list_queue_stats_entry_delete(of_list_queue_stats_entry_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_list_table_feature_prop_t
 * @param obj An instance of type of_list_table_feature_prop_t
 *
 * \ingroup of_list_table_feature_prop
 */
static inline void
of_list_table_feature_prop_delete(of_list_table_feature_prop_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_list_table_features_t
 * @param obj An instance of type of_list_table_features_t
 *
 * \ingroup of_list_table_features
 */
static inline void
of_list_table_features_delete(of_list_table_features_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_list_table_stats_entry_t
 * @param obj An instance of type of_list_table_stats_entry_t
 *
 * \ingroup of_list_table_stats_entry
 */
static inline void
of_list_table_stats_entry_delete(of_list_table_stats_entry_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_list_uint32_t
 * @param obj An instance of type of_list_uint32_t
 *
 * \ingroup of_list_uint32
 */
static inline void
of_list_uint32_delete(of_list_uint32_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_list_uint64_t
 * @param obj An instance of type of_list_uint64_t
 *
 * \ingroup of_list_uint64
 */
static inline void
of_list_uint64_delete(of_list_uint64_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

/**
 * Delete an object of type of_list_uint8_t
 * @param obj An instance of type of_list_uint8_t
 *
 * \ingroup of_list_uint8
 */
static inline void
of_list_uint8_delete(of_list_uint8_t *obj) {
    of_object_delete((of_object_t *)(obj));
}

typedef void (*of_object_init_f)(of_object_t *obj, of_version_t version,
    int bytes, int clean_wire);
extern const of_object_init_f of_object_init_map[];

/****************************************************************
 *
 * Function pointer initialization functions
 * These are part of the "coerce" type casting for objects
 *
 ****************************************************************/

/****************************************************************
 *
 * Unified, per-member accessor function declarations
 *
 ****************************************************************/

/* Unified accessor functions for of_aggregate_stats_reply */

extern void of_aggregate_stats_reply_xid_set(
    of_aggregate_stats_reply_t *obj,
    uint32_t xid);
extern void of_aggregate_stats_reply_xid_get(
    of_aggregate_stats_reply_t *obj,
    uint32_t *xid);

extern void of_aggregate_stats_reply_flags_set(
    of_aggregate_stats_reply_t *obj,
    uint16_t flags);
extern void of_aggregate_stats_reply_flags_get(
    of_aggregate_stats_reply_t *obj,
    uint16_t *flags);

extern void of_aggregate_stats_reply_packet_count_set(
    of_aggregate_stats_reply_t *obj,
    uint64_t packet_count);
extern void of_aggregate_stats_reply_packet_count_get(
    of_aggregate_stats_reply_t *obj,
    uint64_t *packet_count);

extern void of_aggregate_stats_reply_byte_count_set(
    of_aggregate_stats_reply_t *obj,
    uint64_t byte_count);
extern void of_aggregate_stats_reply_byte_count_get(
    of_aggregate_stats_reply_t *obj,
    uint64_t *byte_count);

extern void of_aggregate_stats_reply_flow_count_set(
    of_aggregate_stats_reply_t *obj,
    uint32_t flow_count);
extern void of_aggregate_stats_reply_flow_count_get(
    of_aggregate_stats_reply_t *obj,
    uint32_t *flow_count);

/* Unified accessor functions for of_aggregate_stats_request */

extern void of_aggregate_stats_request_xid_set(
    of_aggregate_stats_request_t *obj,
    uint32_t xid);
extern void of_aggregate_stats_request_xid_get(
    of_aggregate_stats_request_t *obj,
    uint32_t *xid);

extern void of_aggregate_stats_request_flags_set(
    of_aggregate_stats_request_t *obj,
    uint16_t flags);
extern void of_aggregate_stats_request_flags_get(
    of_aggregate_stats_request_t *obj,
    uint16_t *flags);

extern void of_aggregate_stats_request_table_id_set(
    of_aggregate_stats_request_t *obj,
    uint8_t table_id);
extern void of_aggregate_stats_request_table_id_get(
    of_aggregate_stats_request_t *obj,
    uint8_t *table_id);

extern void of_aggregate_stats_request_out_port_set(
    of_aggregate_stats_request_t *obj,
    of_port_no_t out_port);
extern void of_aggregate_stats_request_out_port_get(
    of_aggregate_stats_request_t *obj,
    of_port_no_t *out_port);

extern void of_aggregate_stats_request_out_group_set(
    of_aggregate_stats_request_t *obj,
    uint32_t out_group);
extern void of_aggregate_stats_request_out_group_get(
    of_aggregate_stats_request_t *obj,
    uint32_t *out_group);

extern void of_aggregate_stats_request_cookie_set(
    of_aggregate_stats_request_t *obj,
    uint64_t cookie);
extern void of_aggregate_stats_request_cookie_get(
    of_aggregate_stats_request_t *obj,
    uint64_t *cookie);

extern void of_aggregate_stats_request_cookie_mask_set(
    of_aggregate_stats_request_t *obj,
    uint64_t cookie_mask);
extern void of_aggregate_stats_request_cookie_mask_get(
    of_aggregate_stats_request_t *obj,
    uint64_t *cookie_mask);

extern int WARN_UNUSED_RESULT of_aggregate_stats_request_match_set(
    of_aggregate_stats_request_t *obj,
    of_match_t *match);
extern int WARN_UNUSED_RESULT of_aggregate_stats_request_match_get(
    of_aggregate_stats_request_t *obj,
    of_match_t *match);

/* Unified accessor functions for of_async_get_reply */

extern void of_async_get_reply_xid_set(
    of_async_get_reply_t *obj,
    uint32_t xid);
extern void of_async_get_reply_xid_get(
    of_async_get_reply_t *obj,
    uint32_t *xid);

extern void of_async_get_reply_packet_in_mask_equal_master_set(
    of_async_get_reply_t *obj,
    uint32_t packet_in_mask_equal_master);
extern void of_async_get_reply_packet_in_mask_equal_master_get(
    of_async_get_reply_t *obj,
    uint32_t *packet_in_mask_equal_master);

extern void of_async_get_reply_packet_in_mask_slave_set(
    of_async_get_reply_t *obj,
    uint32_t packet_in_mask_slave);
extern void of_async_get_reply_packet_in_mask_slave_get(
    of_async_get_reply_t *obj,
    uint32_t *packet_in_mask_slave);

extern void of_async_get_reply_port_status_mask_equal_master_set(
    of_async_get_reply_t *obj,
    uint32_t port_status_mask_equal_master);
extern void of_async_get_reply_port_status_mask_equal_master_get(
    of_async_get_reply_t *obj,
    uint32_t *port_status_mask_equal_master);

extern void of_async_get_reply_port_status_mask_slave_set(
    of_async_get_reply_t *obj,
    uint32_t port_status_mask_slave);
extern void of_async_get_reply_port_status_mask_slave_get(
    of_async_get_reply_t *obj,
    uint32_t *port_status_mask_slave);

extern void of_async_get_reply_flow_removed_mask_equal_master_set(
    of_async_get_reply_t *obj,
    uint32_t flow_removed_mask_equal_master);
extern void of_async_get_reply_flow_removed_mask_equal_master_get(
    of_async_get_reply_t *obj,
    uint32_t *flow_removed_mask_equal_master);

extern void of_async_get_reply_flow_removed_mask_slave_set(
    of_async_get_reply_t *obj,
    uint32_t flow_removed_mask_slave);
extern void of_async_get_reply_flow_removed_mask_slave_get(
    of_async_get_reply_t *obj,
    uint32_t *flow_removed_mask_slave);

/* Unified accessor functions for of_async_get_request */

extern void of_async_get_request_xid_set(
    of_async_get_request_t *obj,
    uint32_t xid);
extern void of_async_get_request_xid_get(
    of_async_get_request_t *obj,
    uint32_t *xid);

extern void of_async_get_request_packet_in_mask_equal_master_set(
    of_async_get_request_t *obj,
    uint32_t packet_in_mask_equal_master);
extern void of_async_get_request_packet_in_mask_equal_master_get(
    of_async_get_request_t *obj,
    uint32_t *packet_in_mask_equal_master);

extern void of_async_get_request_packet_in_mask_slave_set(
    of_async_get_request_t *obj,
    uint32_t packet_in_mask_slave);
extern void of_async_get_request_packet_in_mask_slave_get(
    of_async_get_request_t *obj,
    uint32_t *packet_in_mask_slave);

extern void of_async_get_request_port_status_mask_equal_master_set(
    of_async_get_request_t *obj,
    uint32_t port_status_mask_equal_master);
extern void of_async_get_request_port_status_mask_equal_master_get(
    of_async_get_request_t *obj,
    uint32_t *port_status_mask_equal_master);

extern void of_async_get_request_port_status_mask_slave_set(
    of_async_get_request_t *obj,
    uint32_t port_status_mask_slave);
extern void of_async_get_request_port_status_mask_slave_get(
    of_async_get_request_t *obj,
    uint32_t *port_status_mask_slave);

extern void of_async_get_request_flow_removed_mask_equal_master_set(
    of_async_get_request_t *obj,
    uint32_t flow_removed_mask_equal_master);
extern void of_async_get_request_flow_removed_mask_equal_master_get(
    of_async_get_request_t *obj,
    uint32_t *flow_removed_mask_equal_master);

extern void of_async_get_request_flow_removed_mask_slave_set(
    of_async_get_request_t *obj,
    uint32_t flow_removed_mask_slave);
extern void of_async_get_request_flow_removed_mask_slave_get(
    of_async_get_request_t *obj,
    uint32_t *flow_removed_mask_slave);

/* Unified accessor functions for of_async_set */

extern void of_async_set_xid_set(
    of_async_set_t *obj,
    uint32_t xid);
extern void of_async_set_xid_get(
    of_async_set_t *obj,
    uint32_t *xid);

extern void of_async_set_packet_in_mask_equal_master_set(
    of_async_set_t *obj,
    uint32_t packet_in_mask_equal_master);
extern void of_async_set_packet_in_mask_equal_master_get(
    of_async_set_t *obj,
    uint32_t *packet_in_mask_equal_master);

extern void of_async_set_packet_in_mask_slave_set(
    of_async_set_t *obj,
    uint32_t packet_in_mask_slave);
extern void of_async_set_packet_in_mask_slave_get(
    of_async_set_t *obj,
    uint32_t *packet_in_mask_slave);

extern void of_async_set_port_status_mask_equal_master_set(
    of_async_set_t *obj,
    uint32_t port_status_mask_equal_master);
extern void of_async_set_port_status_mask_equal_master_get(
    of_async_set_t *obj,
    uint32_t *port_status_mask_equal_master);

extern void of_async_set_port_status_mask_slave_set(
    of_async_set_t *obj,
    uint32_t port_status_mask_slave);
extern void of_async_set_port_status_mask_slave_get(
    of_async_set_t *obj,
    uint32_t *port_status_mask_slave);

extern void of_async_set_flow_removed_mask_equal_master_set(
    of_async_set_t *obj,
    uint32_t flow_removed_mask_equal_master);
extern void of_async_set_flow_removed_mask_equal_master_get(
    of_async_set_t *obj,
    uint32_t *flow_removed_mask_equal_master);

extern void of_async_set_flow_removed_mask_slave_set(
    of_async_set_t *obj,
    uint32_t flow_removed_mask_slave);
extern void of_async_set_flow_removed_mask_slave_get(
    of_async_set_t *obj,
    uint32_t *flow_removed_mask_slave);

/* Unified accessor functions for of_bad_action_error_msg */

extern void of_bad_action_error_msg_xid_set(
    of_bad_action_error_msg_t *obj,
    uint32_t xid);
extern void of_bad_action_error_msg_xid_get(
    of_bad_action_error_msg_t *obj,
    uint32_t *xid);

extern void of_bad_action_error_msg_code_set(
    of_bad_action_error_msg_t *obj,
    uint16_t code);
extern void of_bad_action_error_msg_code_get(
    of_bad_action_error_msg_t *obj,
    uint16_t *code);

extern int WARN_UNUSED_RESULT of_bad_action_error_msg_data_set(
    of_bad_action_error_msg_t *obj,
    of_octets_t *data);
extern void of_bad_action_error_msg_data_get(
    of_bad_action_error_msg_t *obj,
    of_octets_t *data);

/* Unified accessor functions for of_bad_instruction_error_msg */

extern void of_bad_instruction_error_msg_xid_set(
    of_bad_instruction_error_msg_t *obj,
    uint32_t xid);
extern void of_bad_instruction_error_msg_xid_get(
    of_bad_instruction_error_msg_t *obj,
    uint32_t *xid);

extern void of_bad_instruction_error_msg_code_set(
    of_bad_instruction_error_msg_t *obj,
    uint16_t code);
extern void of_bad_instruction_error_msg_code_get(
    of_bad_instruction_error_msg_t *obj,
    uint16_t *code);

extern int WARN_UNUSED_RESULT of_bad_instruction_error_msg_data_set(
    of_bad_instruction_error_msg_t *obj,
    of_octets_t *data);
extern void of_bad_instruction_error_msg_data_get(
    of_bad_instruction_error_msg_t *obj,
    of_octets_t *data);

/* Unified accessor functions for of_bad_match_error_msg */

extern void of_bad_match_error_msg_xid_set(
    of_bad_match_error_msg_t *obj,
    uint32_t xid);
extern void of_bad_match_error_msg_xid_get(
    of_bad_match_error_msg_t *obj,
    uint32_t *xid);

extern void of_bad_match_error_msg_code_set(
    of_bad_match_error_msg_t *obj,
    uint16_t code);
extern void of_bad_match_error_msg_code_get(
    of_bad_match_error_msg_t *obj,
    uint16_t *code);

extern int WARN_UNUSED_RESULT of_bad_match_error_msg_data_set(
    of_bad_match_error_msg_t *obj,
    of_octets_t *data);
extern void of_bad_match_error_msg_data_get(
    of_bad_match_error_msg_t *obj,
    of_octets_t *data);

/* Unified accessor functions for of_bad_request_error_msg */

extern void of_bad_request_error_msg_xid_set(
    of_bad_request_error_msg_t *obj,
    uint32_t xid);
extern void of_bad_request_error_msg_xid_get(
    of_bad_request_error_msg_t *obj,
    uint32_t *xid);

extern void of_bad_request_error_msg_code_set(
    of_bad_request_error_msg_t *obj,
    uint16_t code);
extern void of_bad_request_error_msg_code_get(
    of_bad_request_error_msg_t *obj,
    uint16_t *code);

extern int WARN_UNUSED_RESULT of_bad_request_error_msg_data_set(
    of_bad_request_error_msg_t *obj,
    of_octets_t *data);
extern void of_bad_request_error_msg_data_get(
    of_bad_request_error_msg_t *obj,
    of_octets_t *data);

/* Unified accessor functions for of_barrier_reply */

extern void of_barrier_reply_xid_set(
    of_barrier_reply_t *obj,
    uint32_t xid);
extern void of_barrier_reply_xid_get(
    of_barrier_reply_t *obj,
    uint32_t *xid);

/* Unified accessor functions for of_barrier_request */

extern void of_barrier_request_xid_set(
    of_barrier_request_t *obj,
    uint32_t xid);
extern void of_barrier_request_xid_get(
    of_barrier_request_t *obj,
    uint32_t *xid);

/* Unified accessor functions for of_bsn_bw_clear_data_reply */

extern void of_bsn_bw_clear_data_reply_xid_set(
    of_bsn_bw_clear_data_reply_t *obj,
    uint32_t xid);
extern void of_bsn_bw_clear_data_reply_xid_get(
    of_bsn_bw_clear_data_reply_t *obj,
    uint32_t *xid);

extern void of_bsn_bw_clear_data_reply_experimenter_set(
    of_bsn_bw_clear_data_reply_t *obj,
    uint32_t experimenter);
extern void of_bsn_bw_clear_data_reply_experimenter_get(
    of_bsn_bw_clear_data_reply_t *obj,
    uint32_t *experimenter);

extern void of_bsn_bw_clear_data_reply_subtype_set(
    of_bsn_bw_clear_data_reply_t *obj,
    uint32_t subtype);
extern void of_bsn_bw_clear_data_reply_subtype_get(
    of_bsn_bw_clear_data_reply_t *obj,
    uint32_t *subtype);

extern void of_bsn_bw_clear_data_reply_status_set(
    of_bsn_bw_clear_data_reply_t *obj,
    uint32_t status);
extern void of_bsn_bw_clear_data_reply_status_get(
    of_bsn_bw_clear_data_reply_t *obj,
    uint32_t *status);

/* Unified accessor functions for of_bsn_bw_clear_data_request */

extern void of_bsn_bw_clear_data_request_xid_set(
    of_bsn_bw_clear_data_request_t *obj,
    uint32_t xid);
extern void of_bsn_bw_clear_data_request_xid_get(
    of_bsn_bw_clear_data_request_t *obj,
    uint32_t *xid);

extern void of_bsn_bw_clear_data_request_experimenter_set(
    of_bsn_bw_clear_data_request_t *obj,
    uint32_t experimenter);
extern void of_bsn_bw_clear_data_request_experimenter_get(
    of_bsn_bw_clear_data_request_t *obj,
    uint32_t *experimenter);

extern void of_bsn_bw_clear_data_request_subtype_set(
    of_bsn_bw_clear_data_request_t *obj,
    uint32_t subtype);
extern void of_bsn_bw_clear_data_request_subtype_get(
    of_bsn_bw_clear_data_request_t *obj,
    uint32_t *subtype);

/* Unified accessor functions for of_bsn_bw_enable_get_reply */

extern void of_bsn_bw_enable_get_reply_xid_set(
    of_bsn_bw_enable_get_reply_t *obj,
    uint32_t xid);
extern void of_bsn_bw_enable_get_reply_xid_get(
    of_bsn_bw_enable_get_reply_t *obj,
    uint32_t *xid);

extern void of_bsn_bw_enable_get_reply_experimenter_set(
    of_bsn_bw_enable_get_reply_t *obj,
    uint32_t experimenter);
extern void of_bsn_bw_enable_get_reply_experimenter_get(
    of_bsn_bw_enable_get_reply_t *obj,
    uint32_t *experimenter);

extern void of_bsn_bw_enable_get_reply_subtype_set(
    of_bsn_bw_enable_get_reply_t *obj,
    uint32_t subtype);
extern void of_bsn_bw_enable_get_reply_subtype_get(
    of_bsn_bw_enable_get_reply_t *obj,
    uint32_t *subtype);

extern void of_bsn_bw_enable_get_reply_enabled_set(
    of_bsn_bw_enable_get_reply_t *obj,
    uint32_t enabled);
extern void of_bsn_bw_enable_get_reply_enabled_get(
    of_bsn_bw_enable_get_reply_t *obj,
    uint32_t *enabled);

/* Unified accessor functions for of_bsn_bw_enable_get_request */

extern void of_bsn_bw_enable_get_request_xid_set(
    of_bsn_bw_enable_get_request_t *obj,
    uint32_t xid);
extern void of_bsn_bw_enable_get_request_xid_get(
    of_bsn_bw_enable_get_request_t *obj,
    uint32_t *xid);

extern void of_bsn_bw_enable_get_request_experimenter_set(
    of_bsn_bw_enable_get_request_t *obj,
    uint32_t experimenter);
extern void of_bsn_bw_enable_get_request_experimenter_get(
    of_bsn_bw_enable_get_request_t *obj,
    uint32_t *experimenter);

extern void of_bsn_bw_enable_get_request_subtype_set(
    of_bsn_bw_enable_get_request_t *obj,
    uint32_t subtype);
extern void of_bsn_bw_enable_get_request_subtype_get(
    of_bsn_bw_enable_get_request_t *obj,
    uint32_t *subtype);

/* Unified accessor functions for of_bsn_bw_enable_set_reply */

extern void of_bsn_bw_enable_set_reply_xid_set(
    of_bsn_bw_enable_set_reply_t *obj,
    uint32_t xid);
extern void of_bsn_bw_enable_set_reply_xid_get(
    of_bsn_bw_enable_set_reply_t *obj,
    uint32_t *xid);

extern void of_bsn_bw_enable_set_reply_experimenter_set(
    of_bsn_bw_enable_set_reply_t *obj,
    uint32_t experimenter);
extern void of_bsn_bw_enable_set_reply_experimenter_get(
    of_bsn_bw_enable_set_reply_t *obj,
    uint32_t *experimenter);

extern void of_bsn_bw_enable_set_reply_subtype_set(
    of_bsn_bw_enable_set_reply_t *obj,
    uint32_t subtype);
extern void of_bsn_bw_enable_set_reply_subtype_get(
    of_bsn_bw_enable_set_reply_t *obj,
    uint32_t *subtype);

extern void of_bsn_bw_enable_set_reply_enable_set(
    of_bsn_bw_enable_set_reply_t *obj,
    uint32_t enable);
extern void of_bsn_bw_enable_set_reply_enable_get(
    of_bsn_bw_enable_set_reply_t *obj,
    uint32_t *enable);

extern void of_bsn_bw_enable_set_reply_status_set(
    of_bsn_bw_enable_set_reply_t *obj,
    uint32_t status);
extern void of_bsn_bw_enable_set_reply_status_get(
    of_bsn_bw_enable_set_reply_t *obj,
    uint32_t *status);

/* Unified accessor functions for of_bsn_bw_enable_set_request */

extern void of_bsn_bw_enable_set_request_xid_set(
    of_bsn_bw_enable_set_request_t *obj,
    uint32_t xid);
extern void of_bsn_bw_enable_set_request_xid_get(
    of_bsn_bw_enable_set_request_t *obj,
    uint32_t *xid);

extern void of_bsn_bw_enable_set_request_experimenter_set(
    of_bsn_bw_enable_set_request_t *obj,
    uint32_t experimenter);
extern void of_bsn_bw_enable_set_request_experimenter_get(
    of_bsn_bw_enable_set_request_t *obj,
    uint32_t *experimenter);

extern void of_bsn_bw_enable_set_request_subtype_set(
    of_bsn_bw_enable_set_request_t *obj,
    uint32_t subtype);
extern void of_bsn_bw_enable_set_request_subtype_get(
    of_bsn_bw_enable_set_request_t *obj,
    uint32_t *subtype);

extern void of_bsn_bw_enable_set_request_enable_set(
    of_bsn_bw_enable_set_request_t *obj,
    uint32_t enable);
extern void of_bsn_bw_enable_set_request_enable_get(
    of_bsn_bw_enable_set_request_t *obj,
    uint32_t *enable);

/* Unified accessor functions for of_bsn_flow_idle */

extern void of_bsn_flow_idle_xid_set(
    of_bsn_flow_idle_t *obj,
    uint32_t xid);
extern void of_bsn_flow_idle_xid_get(
    of_bsn_flow_idle_t *obj,
    uint32_t *xid);

extern void of_bsn_flow_idle_experimenter_set(
    of_bsn_flow_idle_t *obj,
    uint32_t experimenter);
extern void of_bsn_flow_idle_experimenter_get(
    of_bsn_flow_idle_t *obj,
    uint32_t *experimenter);

extern void of_bsn_flow_idle_subtype_set(
    of_bsn_flow_idle_t *obj,
    uint32_t subtype);
extern void of_bsn_flow_idle_subtype_get(
    of_bsn_flow_idle_t *obj,
    uint32_t *subtype);

extern void of_bsn_flow_idle_cookie_set(
    of_bsn_flow_idle_t *obj,
    uint64_t cookie);
extern void of_bsn_flow_idle_cookie_get(
    of_bsn_flow_idle_t *obj,
    uint64_t *cookie);

extern void of_bsn_flow_idle_priority_set(
    of_bsn_flow_idle_t *obj,
    uint16_t priority);
extern void of_bsn_flow_idle_priority_get(
    of_bsn_flow_idle_t *obj,
    uint16_t *priority);

extern void of_bsn_flow_idle_table_id_set(
    of_bsn_flow_idle_t *obj,
    uint8_t table_id);
extern void of_bsn_flow_idle_table_id_get(
    of_bsn_flow_idle_t *obj,
    uint8_t *table_id);

extern int WARN_UNUSED_RESULT of_bsn_flow_idle_match_set(
    of_bsn_flow_idle_t *obj,
    of_match_t *match);
extern int WARN_UNUSED_RESULT of_bsn_flow_idle_match_get(
    of_bsn_flow_idle_t *obj,
    of_match_t *match);

/* Unified accessor functions for of_bsn_flow_idle_enable_get_reply */

extern void of_bsn_flow_idle_enable_get_reply_xid_set(
    of_bsn_flow_idle_enable_get_reply_t *obj,
    uint32_t xid);
extern void of_bsn_flow_idle_enable_get_reply_xid_get(
    of_bsn_flow_idle_enable_get_reply_t *obj,
    uint32_t *xid);

extern void of_bsn_flow_idle_enable_get_reply_experimenter_set(
    of_bsn_flow_idle_enable_get_reply_t *obj,
    uint32_t experimenter);
extern void of_bsn_flow_idle_enable_get_reply_experimenter_get(
    of_bsn_flow_idle_enable_get_reply_t *obj,
    uint32_t *experimenter);

extern void of_bsn_flow_idle_enable_get_reply_subtype_set(
    of_bsn_flow_idle_enable_get_reply_t *obj,
    uint32_t subtype);
extern void of_bsn_flow_idle_enable_get_reply_subtype_get(
    of_bsn_flow_idle_enable_get_reply_t *obj,
    uint32_t *subtype);

extern void of_bsn_flow_idle_enable_get_reply_enabled_set(
    of_bsn_flow_idle_enable_get_reply_t *obj,
    uint32_t enabled);
extern void of_bsn_flow_idle_enable_get_reply_enabled_get(
    of_bsn_flow_idle_enable_get_reply_t *obj,
    uint32_t *enabled);

/* Unified accessor functions for of_bsn_flow_idle_enable_get_request */

extern void of_bsn_flow_idle_enable_get_request_xid_set(
    of_bsn_flow_idle_enable_get_request_t *obj,
    uint32_t xid);
extern void of_bsn_flow_idle_enable_get_request_xid_get(
    of_bsn_flow_idle_enable_get_request_t *obj,
    uint32_t *xid);

extern void of_bsn_flow_idle_enable_get_request_experimenter_set(
    of_bsn_flow_idle_enable_get_request_t *obj,
    uint32_t experimenter);
extern void of_bsn_flow_idle_enable_get_request_experimenter_get(
    of_bsn_flow_idle_enable_get_request_t *obj,
    uint32_t *experimenter);

extern void of_bsn_flow_idle_enable_get_request_subtype_set(
    of_bsn_flow_idle_enable_get_request_t *obj,
    uint32_t subtype);
extern void of_bsn_flow_idle_enable_get_request_subtype_get(
    of_bsn_flow_idle_enable_get_request_t *obj,
    uint32_t *subtype);

/* Unified accessor functions for of_bsn_flow_idle_enable_set_reply */

extern void of_bsn_flow_idle_enable_set_reply_xid_set(
    of_bsn_flow_idle_enable_set_reply_t *obj,
    uint32_t xid);
extern void of_bsn_flow_idle_enable_set_reply_xid_get(
    of_bsn_flow_idle_enable_set_reply_t *obj,
    uint32_t *xid);

extern void of_bsn_flow_idle_enable_set_reply_experimenter_set(
    of_bsn_flow_idle_enable_set_reply_t *obj,
    uint32_t experimenter);
extern void of_bsn_flow_idle_enable_set_reply_experimenter_get(
    of_bsn_flow_idle_enable_set_reply_t *obj,
    uint32_t *experimenter);

extern void of_bsn_flow_idle_enable_set_reply_subtype_set(
    of_bsn_flow_idle_enable_set_reply_t *obj,
    uint32_t subtype);
extern void of_bsn_flow_idle_enable_set_reply_subtype_get(
    of_bsn_flow_idle_enable_set_reply_t *obj,
    uint32_t *subtype);

extern void of_bsn_flow_idle_enable_set_reply_enable_set(
    of_bsn_flow_idle_enable_set_reply_t *obj,
    uint32_t enable);
extern void of_bsn_flow_idle_enable_set_reply_enable_get(
    of_bsn_flow_idle_enable_set_reply_t *obj,
    uint32_t *enable);

extern void of_bsn_flow_idle_enable_set_reply_status_set(
    of_bsn_flow_idle_enable_set_reply_t *obj,
    uint32_t status);
extern void of_bsn_flow_idle_enable_set_reply_status_get(
    of_bsn_flow_idle_enable_set_reply_t *obj,
    uint32_t *status);

/* Unified accessor functions for of_bsn_flow_idle_enable_set_request */

extern void of_bsn_flow_idle_enable_set_request_xid_set(
    of_bsn_flow_idle_enable_set_request_t *obj,
    uint32_t xid);
extern void of_bsn_flow_idle_enable_set_request_xid_get(
    of_bsn_flow_idle_enable_set_request_t *obj,
    uint32_t *xid);

extern void of_bsn_flow_idle_enable_set_request_experimenter_set(
    of_bsn_flow_idle_enable_set_request_t *obj,
    uint32_t experimenter);
extern void of_bsn_flow_idle_enable_set_request_experimenter_get(
    of_bsn_flow_idle_enable_set_request_t *obj,
    uint32_t *experimenter);

extern void of_bsn_flow_idle_enable_set_request_subtype_set(
    of_bsn_flow_idle_enable_set_request_t *obj,
    uint32_t subtype);
extern void of_bsn_flow_idle_enable_set_request_subtype_get(
    of_bsn_flow_idle_enable_set_request_t *obj,
    uint32_t *subtype);

extern void of_bsn_flow_idle_enable_set_request_enable_set(
    of_bsn_flow_idle_enable_set_request_t *obj,
    uint32_t enable);
extern void of_bsn_flow_idle_enable_set_request_enable_get(
    of_bsn_flow_idle_enable_set_request_t *obj,
    uint32_t *enable);

/* Unified accessor functions for of_bsn_get_interfaces_reply */

extern void of_bsn_get_interfaces_reply_xid_set(
    of_bsn_get_interfaces_reply_t *obj,
    uint32_t xid);
extern void of_bsn_get_interfaces_reply_xid_get(
    of_bsn_get_interfaces_reply_t *obj,
    uint32_t *xid);

extern void of_bsn_get_interfaces_reply_experimenter_set(
    of_bsn_get_interfaces_reply_t *obj,
    uint32_t experimenter);
extern void of_bsn_get_interfaces_reply_experimenter_get(
    of_bsn_get_interfaces_reply_t *obj,
    uint32_t *experimenter);

extern void of_bsn_get_interfaces_reply_subtype_set(
    of_bsn_get_interfaces_reply_t *obj,
    uint32_t subtype);
extern void of_bsn_get_interfaces_reply_subtype_get(
    of_bsn_get_interfaces_reply_t *obj,
    uint32_t *subtype);

extern int WARN_UNUSED_RESULT of_bsn_get_interfaces_reply_interfaces_set(
    of_bsn_get_interfaces_reply_t *obj,
    of_list_bsn_interface_t *interfaces);
extern void of_bsn_get_interfaces_reply_interfaces_bind(
    of_bsn_get_interfaces_reply_t *obj,
    of_list_bsn_interface_t *interfaces);
extern of_list_bsn_interface_t *of_bsn_get_interfaces_reply_interfaces_get(
    of_bsn_get_interfaces_reply_t *obj);

/* Unified accessor functions for of_bsn_get_interfaces_request */

extern void of_bsn_get_interfaces_request_xid_set(
    of_bsn_get_interfaces_request_t *obj,
    uint32_t xid);
extern void of_bsn_get_interfaces_request_xid_get(
    of_bsn_get_interfaces_request_t *obj,
    uint32_t *xid);

extern void of_bsn_get_interfaces_request_experimenter_set(
    of_bsn_get_interfaces_request_t *obj,
    uint32_t experimenter);
extern void of_bsn_get_interfaces_request_experimenter_get(
    of_bsn_get_interfaces_request_t *obj,
    uint32_t *experimenter);

extern void of_bsn_get_interfaces_request_subtype_set(
    of_bsn_get_interfaces_request_t *obj,
    uint32_t subtype);
extern void of_bsn_get_interfaces_request_subtype_get(
    of_bsn_get_interfaces_request_t *obj,
    uint32_t *subtype);

/* Unified accessor functions for of_bsn_get_ip_mask_reply */

extern void of_bsn_get_ip_mask_reply_xid_set(
    of_bsn_get_ip_mask_reply_t *obj,
    uint32_t xid);
extern void of_bsn_get_ip_mask_reply_xid_get(
    of_bsn_get_ip_mask_reply_t *obj,
    uint32_t *xid);

extern void of_bsn_get_ip_mask_reply_experimenter_set(
    of_bsn_get_ip_mask_reply_t *obj,
    uint32_t experimenter);
extern void of_bsn_get_ip_mask_reply_experimenter_get(
    of_bsn_get_ip_mask_reply_t *obj,
    uint32_t *experimenter);

extern void of_bsn_get_ip_mask_reply_subtype_set(
    of_bsn_get_ip_mask_reply_t *obj,
    uint32_t subtype);
extern void of_bsn_get_ip_mask_reply_subtype_get(
    of_bsn_get_ip_mask_reply_t *obj,
    uint32_t *subtype);

extern void of_bsn_get_ip_mask_reply_index_set(
    of_bsn_get_ip_mask_reply_t *obj,
    uint8_t index);
extern void of_bsn_get_ip_mask_reply_index_get(
    of_bsn_get_ip_mask_reply_t *obj,
    uint8_t *index);

extern void of_bsn_get_ip_mask_reply_mask_set(
    of_bsn_get_ip_mask_reply_t *obj,
    uint32_t mask);
extern void of_bsn_get_ip_mask_reply_mask_get(
    of_bsn_get_ip_mask_reply_t *obj,
    uint32_t *mask);

/* Unified accessor functions for of_bsn_get_ip_mask_request */

extern void of_bsn_get_ip_mask_request_xid_set(
    of_bsn_get_ip_mask_request_t *obj,
    uint32_t xid);
extern void of_bsn_get_ip_mask_request_xid_get(
    of_bsn_get_ip_mask_request_t *obj,
    uint32_t *xid);

extern void of_bsn_get_ip_mask_request_experimenter_set(
    of_bsn_get_ip_mask_request_t *obj,
    uint32_t experimenter);
extern void of_bsn_get_ip_mask_request_experimenter_get(
    of_bsn_get_ip_mask_request_t *obj,
    uint32_t *experimenter);

extern void of_bsn_get_ip_mask_request_subtype_set(
    of_bsn_get_ip_mask_request_t *obj,
    uint32_t subtype);
extern void of_bsn_get_ip_mask_request_subtype_get(
    of_bsn_get_ip_mask_request_t *obj,
    uint32_t *subtype);

extern void of_bsn_get_ip_mask_request_index_set(
    of_bsn_get_ip_mask_request_t *obj,
    uint8_t index);
extern void of_bsn_get_ip_mask_request_index_get(
    of_bsn_get_ip_mask_request_t *obj,
    uint8_t *index);

/* Unified accessor functions for of_bsn_get_l2_table_reply */

extern void of_bsn_get_l2_table_reply_xid_set(
    of_bsn_get_l2_table_reply_t *obj,
    uint32_t xid);
extern void of_bsn_get_l2_table_reply_xid_get(
    of_bsn_get_l2_table_reply_t *obj,
    uint32_t *xid);

extern void of_bsn_get_l2_table_reply_experimenter_set(
    of_bsn_get_l2_table_reply_t *obj,
    uint32_t experimenter);
extern void of_bsn_get_l2_table_reply_experimenter_get(
    of_bsn_get_l2_table_reply_t *obj,
    uint32_t *experimenter);

extern void of_bsn_get_l2_table_reply_subtype_set(
    of_bsn_get_l2_table_reply_t *obj,
    uint32_t subtype);
extern void of_bsn_get_l2_table_reply_subtype_get(
    of_bsn_get_l2_table_reply_t *obj,
    uint32_t *subtype);

extern void of_bsn_get_l2_table_reply_l2_table_enable_set(
    of_bsn_get_l2_table_reply_t *obj,
    uint8_t l2_table_enable);
extern void of_bsn_get_l2_table_reply_l2_table_enable_get(
    of_bsn_get_l2_table_reply_t *obj,
    uint8_t *l2_table_enable);

extern void of_bsn_get_l2_table_reply_l2_table_priority_set(
    of_bsn_get_l2_table_reply_t *obj,
    uint16_t l2_table_priority);
extern void of_bsn_get_l2_table_reply_l2_table_priority_get(
    of_bsn_get_l2_table_reply_t *obj,
    uint16_t *l2_table_priority);

/* Unified accessor functions for of_bsn_get_l2_table_request */

extern void of_bsn_get_l2_table_request_xid_set(
    of_bsn_get_l2_table_request_t *obj,
    uint32_t xid);
extern void of_bsn_get_l2_table_request_xid_get(
    of_bsn_get_l2_table_request_t *obj,
    uint32_t *xid);

extern void of_bsn_get_l2_table_request_experimenter_set(
    of_bsn_get_l2_table_request_t *obj,
    uint32_t experimenter);
extern void of_bsn_get_l2_table_request_experimenter_get(
    of_bsn_get_l2_table_request_t *obj,
    uint32_t *experimenter);

extern void of_bsn_get_l2_table_request_subtype_set(
    of_bsn_get_l2_table_request_t *obj,
    uint32_t subtype);
extern void of_bsn_get_l2_table_request_subtype_get(
    of_bsn_get_l2_table_request_t *obj,
    uint32_t *subtype);

/* Unified accessor functions for of_bsn_get_mirroring_reply */

extern void of_bsn_get_mirroring_reply_xid_set(
    of_bsn_get_mirroring_reply_t *obj,
    uint32_t xid);
extern void of_bsn_get_mirroring_reply_xid_get(
    of_bsn_get_mirroring_reply_t *obj,
    uint32_t *xid);

extern void of_bsn_get_mirroring_reply_experimenter_set(
    of_bsn_get_mirroring_reply_t *obj,
    uint32_t experimenter);
extern void of_bsn_get_mirroring_reply_experimenter_get(
    of_bsn_get_mirroring_reply_t *obj,
    uint32_t *experimenter);

extern void of_bsn_get_mirroring_reply_subtype_set(
    of_bsn_get_mirroring_reply_t *obj,
    uint32_t subtype);
extern void of_bsn_get_mirroring_reply_subtype_get(
    of_bsn_get_mirroring_reply_t *obj,
    uint32_t *subtype);

extern void of_bsn_get_mirroring_reply_report_mirror_ports_set(
    of_bsn_get_mirroring_reply_t *obj,
    uint8_t report_mirror_ports);
extern void of_bsn_get_mirroring_reply_report_mirror_ports_get(
    of_bsn_get_mirroring_reply_t *obj,
    uint8_t *report_mirror_ports);

/* Unified accessor functions for of_bsn_get_mirroring_request */

extern void of_bsn_get_mirroring_request_xid_set(
    of_bsn_get_mirroring_request_t *obj,
    uint32_t xid);
extern void of_bsn_get_mirroring_request_xid_get(
    of_bsn_get_mirroring_request_t *obj,
    uint32_t *xid);

extern void of_bsn_get_mirroring_request_experimenter_set(
    of_bsn_get_mirroring_request_t *obj,
    uint32_t experimenter);
extern void of_bsn_get_mirroring_request_experimenter_get(
    of_bsn_get_mirroring_request_t *obj,
    uint32_t *experimenter);

extern void of_bsn_get_mirroring_request_subtype_set(
    of_bsn_get_mirroring_request_t *obj,
    uint32_t subtype);
extern void of_bsn_get_mirroring_request_subtype_get(
    of_bsn_get_mirroring_request_t *obj,
    uint32_t *subtype);

extern void of_bsn_get_mirroring_request_report_mirror_ports_set(
    of_bsn_get_mirroring_request_t *obj,
    uint8_t report_mirror_ports);
extern void of_bsn_get_mirroring_request_report_mirror_ports_get(
    of_bsn_get_mirroring_request_t *obj,
    uint8_t *report_mirror_ports);

/* Unified accessor functions for of_bsn_get_switch_pipeline_reply */

extern void of_bsn_get_switch_pipeline_reply_xid_set(
    of_bsn_get_switch_pipeline_reply_t *obj,
    uint32_t xid);
extern void of_bsn_get_switch_pipeline_reply_xid_get(
    of_bsn_get_switch_pipeline_reply_t *obj,
    uint32_t *xid);

extern void of_bsn_get_switch_pipeline_reply_experimenter_set(
    of_bsn_get_switch_pipeline_reply_t *obj,
    uint32_t experimenter);
extern void of_bsn_get_switch_pipeline_reply_experimenter_get(
    of_bsn_get_switch_pipeline_reply_t *obj,
    uint32_t *experimenter);

extern void of_bsn_get_switch_pipeline_reply_subtype_set(
    of_bsn_get_switch_pipeline_reply_t *obj,
    uint32_t subtype);
extern void of_bsn_get_switch_pipeline_reply_subtype_get(
    of_bsn_get_switch_pipeline_reply_t *obj,
    uint32_t *subtype);

extern void of_bsn_get_switch_pipeline_reply_pipeline_set(
    of_bsn_get_switch_pipeline_reply_t *obj,
    of_desc_str_t pipeline);
extern void of_bsn_get_switch_pipeline_reply_pipeline_get(
    of_bsn_get_switch_pipeline_reply_t *obj,
    of_desc_str_t *pipeline);

/* Unified accessor functions for of_bsn_get_switch_pipeline_request */

extern void of_bsn_get_switch_pipeline_request_xid_set(
    of_bsn_get_switch_pipeline_request_t *obj,
    uint32_t xid);
extern void of_bsn_get_switch_pipeline_request_xid_get(
    of_bsn_get_switch_pipeline_request_t *obj,
    uint32_t *xid);

extern void of_bsn_get_switch_pipeline_request_experimenter_set(
    of_bsn_get_switch_pipeline_request_t *obj,
    uint32_t experimenter);
extern void of_bsn_get_switch_pipeline_request_experimenter_get(
    of_bsn_get_switch_pipeline_request_t *obj,
    uint32_t *experimenter);

extern void of_bsn_get_switch_pipeline_request_subtype_set(
    of_bsn_get_switch_pipeline_request_t *obj,
    uint32_t subtype);
extern void of_bsn_get_switch_pipeline_request_subtype_get(
    of_bsn_get_switch_pipeline_request_t *obj,
    uint32_t *subtype);

/* Unified accessor functions for of_bsn_header */

extern void of_bsn_header_xid_set(
    of_bsn_header_t *obj,
    uint32_t xid);
extern void of_bsn_header_xid_get(
    of_bsn_header_t *obj,
    uint32_t *xid);

extern void of_bsn_header_experimenter_set(
    of_bsn_header_t *obj,
    uint32_t experimenter);
extern void of_bsn_header_experimenter_get(
    of_bsn_header_t *obj,
    uint32_t *experimenter);

extern void of_bsn_header_subtype_set(
    of_bsn_header_t *obj,
    uint32_t subtype);
extern void of_bsn_header_subtype_get(
    of_bsn_header_t *obj,
    uint32_t *subtype);

/* Unified accessor functions for of_bsn_hybrid_get_reply */

extern void of_bsn_hybrid_get_reply_xid_set(
    of_bsn_hybrid_get_reply_t *obj,
    uint32_t xid);
extern void of_bsn_hybrid_get_reply_xid_get(
    of_bsn_hybrid_get_reply_t *obj,
    uint32_t *xid);

extern void of_bsn_hybrid_get_reply_experimenter_set(
    of_bsn_hybrid_get_reply_t *obj,
    uint32_t experimenter);
extern void of_bsn_hybrid_get_reply_experimenter_get(
    of_bsn_hybrid_get_reply_t *obj,
    uint32_t *experimenter);

extern void of_bsn_hybrid_get_reply_subtype_set(
    of_bsn_hybrid_get_reply_t *obj,
    uint32_t subtype);
extern void of_bsn_hybrid_get_reply_subtype_get(
    of_bsn_hybrid_get_reply_t *obj,
    uint32_t *subtype);

extern void of_bsn_hybrid_get_reply_hybrid_enable_set(
    of_bsn_hybrid_get_reply_t *obj,
    uint8_t hybrid_enable);
extern void of_bsn_hybrid_get_reply_hybrid_enable_get(
    of_bsn_hybrid_get_reply_t *obj,
    uint8_t *hybrid_enable);

extern void of_bsn_hybrid_get_reply_hybrid_version_set(
    of_bsn_hybrid_get_reply_t *obj,
    uint16_t hybrid_version);
extern void of_bsn_hybrid_get_reply_hybrid_version_get(
    of_bsn_hybrid_get_reply_t *obj,
    uint16_t *hybrid_version);

/* Unified accessor functions for of_bsn_hybrid_get_request */

extern void of_bsn_hybrid_get_request_xid_set(
    of_bsn_hybrid_get_request_t *obj,
    uint32_t xid);
extern void of_bsn_hybrid_get_request_xid_get(
    of_bsn_hybrid_get_request_t *obj,
    uint32_t *xid);

extern void of_bsn_hybrid_get_request_experimenter_set(
    of_bsn_hybrid_get_request_t *obj,
    uint32_t experimenter);
extern void of_bsn_hybrid_get_request_experimenter_get(
    of_bsn_hybrid_get_request_t *obj,
    uint32_t *experimenter);

extern void of_bsn_hybrid_get_request_subtype_set(
    of_bsn_hybrid_get_request_t *obj,
    uint32_t subtype);
extern void of_bsn_hybrid_get_request_subtype_get(
    of_bsn_hybrid_get_request_t *obj,
    uint32_t *subtype);

/* Unified accessor functions for of_bsn_lacp_convergence_notif */

extern void of_bsn_lacp_convergence_notif_xid_set(
    of_bsn_lacp_convergence_notif_t *obj,
    uint32_t xid);
extern void of_bsn_lacp_convergence_notif_xid_get(
    of_bsn_lacp_convergence_notif_t *obj,
    uint32_t *xid);

extern void of_bsn_lacp_convergence_notif_experimenter_set(
    of_bsn_lacp_convergence_notif_t *obj,
    uint32_t experimenter);
extern void of_bsn_lacp_convergence_notif_experimenter_get(
    of_bsn_lacp_convergence_notif_t *obj,
    uint32_t *experimenter);

extern void of_bsn_lacp_convergence_notif_subtype_set(
    of_bsn_lacp_convergence_notif_t *obj,
    uint32_t subtype);
extern void of_bsn_lacp_convergence_notif_subtype_get(
    of_bsn_lacp_convergence_notif_t *obj,
    uint32_t *subtype);

extern void of_bsn_lacp_convergence_notif_convergence_status_set(
    of_bsn_lacp_convergence_notif_t *obj,
    uint8_t convergence_status);
extern void of_bsn_lacp_convergence_notif_convergence_status_get(
    of_bsn_lacp_convergence_notif_t *obj,
    uint8_t *convergence_status);

extern void of_bsn_lacp_convergence_notif_port_no_set(
    of_bsn_lacp_convergence_notif_t *obj,
    of_port_no_t port_no);
extern void of_bsn_lacp_convergence_notif_port_no_get(
    of_bsn_lacp_convergence_notif_t *obj,
    of_port_no_t *port_no);

extern void of_bsn_lacp_convergence_notif_actor_sys_priority_set(
    of_bsn_lacp_convergence_notif_t *obj,
    uint16_t actor_sys_priority);
extern void of_bsn_lacp_convergence_notif_actor_sys_priority_get(
    of_bsn_lacp_convergence_notif_t *obj,
    uint16_t *actor_sys_priority);

extern void of_bsn_lacp_convergence_notif_actor_sys_mac_set(
    of_bsn_lacp_convergence_notif_t *obj,
    of_mac_addr_t actor_sys_mac);
extern void of_bsn_lacp_convergence_notif_actor_sys_mac_get(
    of_bsn_lacp_convergence_notif_t *obj,
    of_mac_addr_t *actor_sys_mac);

extern void of_bsn_lacp_convergence_notif_actor_port_priority_set(
    of_bsn_lacp_convergence_notif_t *obj,
    uint16_t actor_port_priority);
extern void of_bsn_lacp_convergence_notif_actor_port_priority_get(
    of_bsn_lacp_convergence_notif_t *obj,
    uint16_t *actor_port_priority);

extern void of_bsn_lacp_convergence_notif_actor_port_num_set(
    of_bsn_lacp_convergence_notif_t *obj,
    uint16_t actor_port_num);
extern void of_bsn_lacp_convergence_notif_actor_port_num_get(
    of_bsn_lacp_convergence_notif_t *obj,
    uint16_t *actor_port_num);

extern void of_bsn_lacp_convergence_notif_actor_key_set(
    of_bsn_lacp_convergence_notif_t *obj,
    uint16_t actor_key);
extern void of_bsn_lacp_convergence_notif_actor_key_get(
    of_bsn_lacp_convergence_notif_t *obj,
    uint16_t *actor_key);

extern void of_bsn_lacp_convergence_notif_partner_sys_priority_set(
    of_bsn_lacp_convergence_notif_t *obj,
    uint16_t partner_sys_priority);
extern void of_bsn_lacp_convergence_notif_partner_sys_priority_get(
    of_bsn_lacp_convergence_notif_t *obj,
    uint16_t *partner_sys_priority);

extern void of_bsn_lacp_convergence_notif_partner_sys_mac_set(
    of_bsn_lacp_convergence_notif_t *obj,
    of_mac_addr_t partner_sys_mac);
extern void of_bsn_lacp_convergence_notif_partner_sys_mac_get(
    of_bsn_lacp_convergence_notif_t *obj,
    of_mac_addr_t *partner_sys_mac);

extern void of_bsn_lacp_convergence_notif_partner_port_priority_set(
    of_bsn_lacp_convergence_notif_t *obj,
    uint16_t partner_port_priority);
extern void of_bsn_lacp_convergence_notif_partner_port_priority_get(
    of_bsn_lacp_convergence_notif_t *obj,
    uint16_t *partner_port_priority);

extern void of_bsn_lacp_convergence_notif_partner_port_num_set(
    of_bsn_lacp_convergence_notif_t *obj,
    uint16_t partner_port_num);
extern void of_bsn_lacp_convergence_notif_partner_port_num_get(
    of_bsn_lacp_convergence_notif_t *obj,
    uint16_t *partner_port_num);

extern void of_bsn_lacp_convergence_notif_partner_key_set(
    of_bsn_lacp_convergence_notif_t *obj,
    uint16_t partner_key);
extern void of_bsn_lacp_convergence_notif_partner_key_get(
    of_bsn_lacp_convergence_notif_t *obj,
    uint16_t *partner_key);

/* Unified accessor functions for of_bsn_lacp_stats_reply */

extern void of_bsn_lacp_stats_reply_xid_set(
    of_bsn_lacp_stats_reply_t *obj,
    uint32_t xid);
extern void of_bsn_lacp_stats_reply_xid_get(
    of_bsn_lacp_stats_reply_t *obj,
    uint32_t *xid);

extern void of_bsn_lacp_stats_reply_flags_set(
    of_bsn_lacp_stats_reply_t *obj,
    uint16_t flags);
extern void of_bsn_lacp_stats_reply_flags_get(
    of_bsn_lacp_stats_reply_t *obj,
    uint16_t *flags);

extern void of_bsn_lacp_stats_reply_experimenter_set(
    of_bsn_lacp_stats_reply_t *obj,
    uint32_t experimenter);
extern void of_bsn_lacp_stats_reply_experimenter_get(
    of_bsn_lacp_stats_reply_t *obj,
    uint32_t *experimenter);

extern void of_bsn_lacp_stats_reply_subtype_set(
    of_bsn_lacp_stats_reply_t *obj,
    uint32_t subtype);
extern void of_bsn_lacp_stats_reply_subtype_get(
    of_bsn_lacp_stats_reply_t *obj,
    uint32_t *subtype);

extern int WARN_UNUSED_RESULT of_bsn_lacp_stats_reply_entries_set(
    of_bsn_lacp_stats_reply_t *obj,
    of_list_bsn_lacp_stats_entry_t *entries);
extern void of_bsn_lacp_stats_reply_entries_bind(
    of_bsn_lacp_stats_reply_t *obj,
    of_list_bsn_lacp_stats_entry_t *entries);
extern of_list_bsn_lacp_stats_entry_t *of_bsn_lacp_stats_reply_entries_get(
    of_bsn_lacp_stats_reply_t *obj);

/* Unified accessor functions for of_bsn_lacp_stats_request */

extern void of_bsn_lacp_stats_request_xid_set(
    of_bsn_lacp_stats_request_t *obj,
    uint32_t xid);
extern void of_bsn_lacp_stats_request_xid_get(
    of_bsn_lacp_stats_request_t *obj,
    uint32_t *xid);

extern void of_bsn_lacp_stats_request_flags_set(
    of_bsn_lacp_stats_request_t *obj,
    uint16_t flags);
extern void of_bsn_lacp_stats_request_flags_get(
    of_bsn_lacp_stats_request_t *obj,
    uint16_t *flags);

extern void of_bsn_lacp_stats_request_experimenter_set(
    of_bsn_lacp_stats_request_t *obj,
    uint32_t experimenter);
extern void of_bsn_lacp_stats_request_experimenter_get(
    of_bsn_lacp_stats_request_t *obj,
    uint32_t *experimenter);

extern void of_bsn_lacp_stats_request_subtype_set(
    of_bsn_lacp_stats_request_t *obj,
    uint32_t subtype);
extern void of_bsn_lacp_stats_request_subtype_get(
    of_bsn_lacp_stats_request_t *obj,
    uint32_t *subtype);

/* Unified accessor functions for of_bsn_pdu_rx_reply */

extern void of_bsn_pdu_rx_reply_xid_set(
    of_bsn_pdu_rx_reply_t *obj,
    uint32_t xid);
extern void of_bsn_pdu_rx_reply_xid_get(
    of_bsn_pdu_rx_reply_t *obj,
    uint32_t *xid);

extern void of_bsn_pdu_rx_reply_experimenter_set(
    of_bsn_pdu_rx_reply_t *obj,
    uint32_t experimenter);
extern void of_bsn_pdu_rx_reply_experimenter_get(
    of_bsn_pdu_rx_reply_t *obj,
    uint32_t *experimenter);

extern void of_bsn_pdu_rx_reply_subtype_set(
    of_bsn_pdu_rx_reply_t *obj,
    uint32_t subtype);
extern void of_bsn_pdu_rx_reply_subtype_get(
    of_bsn_pdu_rx_reply_t *obj,
    uint32_t *subtype);

extern void of_bsn_pdu_rx_reply_status_set(
    of_bsn_pdu_rx_reply_t *obj,
    uint32_t status);
extern void of_bsn_pdu_rx_reply_status_get(
    of_bsn_pdu_rx_reply_t *obj,
    uint32_t *status);

extern void of_bsn_pdu_rx_reply_port_no_set(
    of_bsn_pdu_rx_reply_t *obj,
    of_port_no_t port_no);
extern void of_bsn_pdu_rx_reply_port_no_get(
    of_bsn_pdu_rx_reply_t *obj,
    of_port_no_t *port_no);

extern void of_bsn_pdu_rx_reply_slot_num_set(
    of_bsn_pdu_rx_reply_t *obj,
    uint8_t slot_num);
extern void of_bsn_pdu_rx_reply_slot_num_get(
    of_bsn_pdu_rx_reply_t *obj,
    uint8_t *slot_num);

/* Unified accessor functions for of_bsn_pdu_rx_request */

extern void of_bsn_pdu_rx_request_xid_set(
    of_bsn_pdu_rx_request_t *obj,
    uint32_t xid);
extern void of_bsn_pdu_rx_request_xid_get(
    of_bsn_pdu_rx_request_t *obj,
    uint32_t *xid);

extern void of_bsn_pdu_rx_request_experimenter_set(
    of_bsn_pdu_rx_request_t *obj,
    uint32_t experimenter);
extern void of_bsn_pdu_rx_request_experimenter_get(
    of_bsn_pdu_rx_request_t *obj,
    uint32_t *experimenter);

extern void of_bsn_pdu_rx_request_subtype_set(
    of_bsn_pdu_rx_request_t *obj,
    uint32_t subtype);
extern void of_bsn_pdu_rx_request_subtype_get(
    of_bsn_pdu_rx_request_t *obj,
    uint32_t *subtype);

extern void of_bsn_pdu_rx_request_timeout_ms_set(
    of_bsn_pdu_rx_request_t *obj,
    uint32_t timeout_ms);
extern void of_bsn_pdu_rx_request_timeout_ms_get(
    of_bsn_pdu_rx_request_t *obj,
    uint32_t *timeout_ms);

extern void of_bsn_pdu_rx_request_port_no_set(
    of_bsn_pdu_rx_request_t *obj,
    of_port_no_t port_no);
extern void of_bsn_pdu_rx_request_port_no_get(
    of_bsn_pdu_rx_request_t *obj,
    of_port_no_t *port_no);

extern void of_bsn_pdu_rx_request_slot_num_set(
    of_bsn_pdu_rx_request_t *obj,
    uint8_t slot_num);
extern void of_bsn_pdu_rx_request_slot_num_get(
    of_bsn_pdu_rx_request_t *obj,
    uint8_t *slot_num);

extern int WARN_UNUSED_RESULT of_bsn_pdu_rx_request_data_set(
    of_bsn_pdu_rx_request_t *obj,
    of_octets_t *data);
extern void of_bsn_pdu_rx_request_data_get(
    of_bsn_pdu_rx_request_t *obj,
    of_octets_t *data);

/* Unified accessor functions for of_bsn_pdu_rx_timeout */

extern void of_bsn_pdu_rx_timeout_xid_set(
    of_bsn_pdu_rx_timeout_t *obj,
    uint32_t xid);
extern void of_bsn_pdu_rx_timeout_xid_get(
    of_bsn_pdu_rx_timeout_t *obj,
    uint32_t *xid);

extern void of_bsn_pdu_rx_timeout_experimenter_set(
    of_bsn_pdu_rx_timeout_t *obj,
    uint32_t experimenter);
extern void of_bsn_pdu_rx_timeout_experimenter_get(
    of_bsn_pdu_rx_timeout_t *obj,
    uint32_t *experimenter);

extern void of_bsn_pdu_rx_timeout_subtype_set(
    of_bsn_pdu_rx_timeout_t *obj,
    uint32_t subtype);
extern void of_bsn_pdu_rx_timeout_subtype_get(
    of_bsn_pdu_rx_timeout_t *obj,
    uint32_t *subtype);

extern void of_bsn_pdu_rx_timeout_port_no_set(
    of_bsn_pdu_rx_timeout_t *obj,
    of_port_no_t port_no);
extern void of_bsn_pdu_rx_timeout_port_no_get(
    of_bsn_pdu_rx_timeout_t *obj,
    of_port_no_t *port_no);

extern void of_bsn_pdu_rx_timeout_slot_num_set(
    of_bsn_pdu_rx_timeout_t *obj,
    uint8_t slot_num);
extern void of_bsn_pdu_rx_timeout_slot_num_get(
    of_bsn_pdu_rx_timeout_t *obj,
    uint8_t *slot_num);

/* Unified accessor functions for of_bsn_pdu_tx_reply */

extern void of_bsn_pdu_tx_reply_xid_set(
    of_bsn_pdu_tx_reply_t *obj,
    uint32_t xid);
extern void of_bsn_pdu_tx_reply_xid_get(
    of_bsn_pdu_tx_reply_t *obj,
    uint32_t *xid);

extern void of_bsn_pdu_tx_reply_experimenter_set(
    of_bsn_pdu_tx_reply_t *obj,
    uint32_t experimenter);
extern void of_bsn_pdu_tx_reply_experimenter_get(
    of_bsn_pdu_tx_reply_t *obj,
    uint32_t *experimenter);

extern void of_bsn_pdu_tx_reply_subtype_set(
    of_bsn_pdu_tx_reply_t *obj,
    uint32_t subtype);
extern void of_bsn_pdu_tx_reply_subtype_get(
    of_bsn_pdu_tx_reply_t *obj,
    uint32_t *subtype);

extern void of_bsn_pdu_tx_reply_status_set(
    of_bsn_pdu_tx_reply_t *obj,
    uint32_t status);
extern void of_bsn_pdu_tx_reply_status_get(
    of_bsn_pdu_tx_reply_t *obj,
    uint32_t *status);

extern void of_bsn_pdu_tx_reply_port_no_set(
    of_bsn_pdu_tx_reply_t *obj,
    of_port_no_t port_no);
extern void of_bsn_pdu_tx_reply_port_no_get(
    of_bsn_pdu_tx_reply_t *obj,
    of_port_no_t *port_no);

extern void of_bsn_pdu_tx_reply_slot_num_set(
    of_bsn_pdu_tx_reply_t *obj,
    uint8_t slot_num);
extern void of_bsn_pdu_tx_reply_slot_num_get(
    of_bsn_pdu_tx_reply_t *obj,
    uint8_t *slot_num);

/* Unified accessor functions for of_bsn_pdu_tx_request */

extern void of_bsn_pdu_tx_request_xid_set(
    of_bsn_pdu_tx_request_t *obj,
    uint32_t xid);
extern void of_bsn_pdu_tx_request_xid_get(
    of_bsn_pdu_tx_request_t *obj,
    uint32_t *xid);

extern void of_bsn_pdu_tx_request_experimenter_set(
    of_bsn_pdu_tx_request_t *obj,
    uint32_t experimenter);
extern void of_bsn_pdu_tx_request_experimenter_get(
    of_bsn_pdu_tx_request_t *obj,
    uint32_t *experimenter);

extern void of_bsn_pdu_tx_request_subtype_set(
    of_bsn_pdu_tx_request_t *obj,
    uint32_t subtype);
extern void of_bsn_pdu_tx_request_subtype_get(
    of_bsn_pdu_tx_request_t *obj,
    uint32_t *subtype);

extern void of_bsn_pdu_tx_request_tx_interval_ms_set(
    of_bsn_pdu_tx_request_t *obj,
    uint32_t tx_interval_ms);
extern void of_bsn_pdu_tx_request_tx_interval_ms_get(
    of_bsn_pdu_tx_request_t *obj,
    uint32_t *tx_interval_ms);

extern void of_bsn_pdu_tx_request_port_no_set(
    of_bsn_pdu_tx_request_t *obj,
    of_port_no_t port_no);
extern void of_bsn_pdu_tx_request_port_no_get(
    of_bsn_pdu_tx_request_t *obj,
    of_port_no_t *port_no);

extern void of_bsn_pdu_tx_request_slot_num_set(
    of_bsn_pdu_tx_request_t *obj,
    uint8_t slot_num);
extern void of_bsn_pdu_tx_request_slot_num_get(
    of_bsn_pdu_tx_request_t *obj,
    uint8_t *slot_num);

extern int WARN_UNUSED_RESULT of_bsn_pdu_tx_request_data_set(
    of_bsn_pdu_tx_request_t *obj,
    of_octets_t *data);
extern void of_bsn_pdu_tx_request_data_get(
    of_bsn_pdu_tx_request_t *obj,
    of_octets_t *data);

/* Unified accessor functions for of_bsn_port_counter_stats_reply */

extern void of_bsn_port_counter_stats_reply_xid_set(
    of_bsn_port_counter_stats_reply_t *obj,
    uint32_t xid);
extern void of_bsn_port_counter_stats_reply_xid_get(
    of_bsn_port_counter_stats_reply_t *obj,
    uint32_t *xid);

extern void of_bsn_port_counter_stats_reply_flags_set(
    of_bsn_port_counter_stats_reply_t *obj,
    uint16_t flags);
extern void of_bsn_port_counter_stats_reply_flags_get(
    of_bsn_port_counter_stats_reply_t *obj,
    uint16_t *flags);

extern void of_bsn_port_counter_stats_reply_experimenter_set(
    of_bsn_port_counter_stats_reply_t *obj,
    uint32_t experimenter);
extern void of_bsn_port_counter_stats_reply_experimenter_get(
    of_bsn_port_counter_stats_reply_t *obj,
    uint32_t *experimenter);

extern void of_bsn_port_counter_stats_reply_subtype_set(
    of_bsn_port_counter_stats_reply_t *obj,
    uint32_t subtype);
extern void of_bsn_port_counter_stats_reply_subtype_get(
    of_bsn_port_counter_stats_reply_t *obj,
    uint32_t *subtype);

extern int WARN_UNUSED_RESULT of_bsn_port_counter_stats_reply_entries_set(
    of_bsn_port_counter_stats_reply_t *obj,
    of_list_bsn_port_counter_stats_entry_t *entries);
extern void of_bsn_port_counter_stats_reply_entries_bind(
    of_bsn_port_counter_stats_reply_t *obj,
    of_list_bsn_port_counter_stats_entry_t *entries);
extern of_list_bsn_port_counter_stats_entry_t *of_bsn_port_counter_stats_reply_entries_get(
    of_bsn_port_counter_stats_reply_t *obj);

/* Unified accessor functions for of_bsn_port_counter_stats_request */

extern void of_bsn_port_counter_stats_request_xid_set(
    of_bsn_port_counter_stats_request_t *obj,
    uint32_t xid);
extern void of_bsn_port_counter_stats_request_xid_get(
    of_bsn_port_counter_stats_request_t *obj,
    uint32_t *xid);

extern void of_bsn_port_counter_stats_request_flags_set(
    of_bsn_port_counter_stats_request_t *obj,
    uint16_t flags);
extern void of_bsn_port_counter_stats_request_flags_get(
    of_bsn_port_counter_stats_request_t *obj,
    uint16_t *flags);

extern void of_bsn_port_counter_stats_request_experimenter_set(
    of_bsn_port_counter_stats_request_t *obj,
    uint32_t experimenter);
extern void of_bsn_port_counter_stats_request_experimenter_get(
    of_bsn_port_counter_stats_request_t *obj,
    uint32_t *experimenter);

extern void of_bsn_port_counter_stats_request_subtype_set(
    of_bsn_port_counter_stats_request_t *obj,
    uint32_t subtype);
extern void of_bsn_port_counter_stats_request_subtype_get(
    of_bsn_port_counter_stats_request_t *obj,
    uint32_t *subtype);

extern void of_bsn_port_counter_stats_request_port_no_set(
    of_bsn_port_counter_stats_request_t *obj,
    of_port_no_t port_no);
extern void of_bsn_port_counter_stats_request_port_no_get(
    of_bsn_port_counter_stats_request_t *obj,
    of_port_no_t *port_no);

/* Unified accessor functions for of_bsn_set_ip_mask */

extern void of_bsn_set_ip_mask_xid_set(
    of_bsn_set_ip_mask_t *obj,
    uint32_t xid);
extern void of_bsn_set_ip_mask_xid_get(
    of_bsn_set_ip_mask_t *obj,
    uint32_t *xid);

extern void of_bsn_set_ip_mask_experimenter_set(
    of_bsn_set_ip_mask_t *obj,
    uint32_t experimenter);
extern void of_bsn_set_ip_mask_experimenter_get(
    of_bsn_set_ip_mask_t *obj,
    uint32_t *experimenter);

extern void of_bsn_set_ip_mask_subtype_set(
    of_bsn_set_ip_mask_t *obj,
    uint32_t subtype);
extern void of_bsn_set_ip_mask_subtype_get(
    of_bsn_set_ip_mask_t *obj,
    uint32_t *subtype);

extern void of_bsn_set_ip_mask_index_set(
    of_bsn_set_ip_mask_t *obj,
    uint8_t index);
extern void of_bsn_set_ip_mask_index_get(
    of_bsn_set_ip_mask_t *obj,
    uint8_t *index);

extern void of_bsn_set_ip_mask_mask_set(
    of_bsn_set_ip_mask_t *obj,
    uint32_t mask);
extern void of_bsn_set_ip_mask_mask_get(
    of_bsn_set_ip_mask_t *obj,
    uint32_t *mask);

/* Unified accessor functions for of_bsn_set_l2_table_reply */

extern void of_bsn_set_l2_table_reply_xid_set(
    of_bsn_set_l2_table_reply_t *obj,
    uint32_t xid);
extern void of_bsn_set_l2_table_reply_xid_get(
    of_bsn_set_l2_table_reply_t *obj,
    uint32_t *xid);

extern void of_bsn_set_l2_table_reply_experimenter_set(
    of_bsn_set_l2_table_reply_t *obj,
    uint32_t experimenter);
extern void of_bsn_set_l2_table_reply_experimenter_get(
    of_bsn_set_l2_table_reply_t *obj,
    uint32_t *experimenter);

extern void of_bsn_set_l2_table_reply_subtype_set(
    of_bsn_set_l2_table_reply_t *obj,
    uint32_t subtype);
extern void of_bsn_set_l2_table_reply_subtype_get(
    of_bsn_set_l2_table_reply_t *obj,
    uint32_t *subtype);

extern void of_bsn_set_l2_table_reply_l2_table_enable_set(
    of_bsn_set_l2_table_reply_t *obj,
    uint8_t l2_table_enable);
extern void of_bsn_set_l2_table_reply_l2_table_enable_get(
    of_bsn_set_l2_table_reply_t *obj,
    uint8_t *l2_table_enable);

extern void of_bsn_set_l2_table_reply_l2_table_priority_set(
    of_bsn_set_l2_table_reply_t *obj,
    uint16_t l2_table_priority);
extern void of_bsn_set_l2_table_reply_l2_table_priority_get(
    of_bsn_set_l2_table_reply_t *obj,
    uint16_t *l2_table_priority);

extern void of_bsn_set_l2_table_reply_status_set(
    of_bsn_set_l2_table_reply_t *obj,
    uint32_t status);
extern void of_bsn_set_l2_table_reply_status_get(
    of_bsn_set_l2_table_reply_t *obj,
    uint32_t *status);

/* Unified accessor functions for of_bsn_set_l2_table_request */

extern void of_bsn_set_l2_table_request_xid_set(
    of_bsn_set_l2_table_request_t *obj,
    uint32_t xid);
extern void of_bsn_set_l2_table_request_xid_get(
    of_bsn_set_l2_table_request_t *obj,
    uint32_t *xid);

extern void of_bsn_set_l2_table_request_experimenter_set(
    of_bsn_set_l2_table_request_t *obj,
    uint32_t experimenter);
extern void of_bsn_set_l2_table_request_experimenter_get(
    of_bsn_set_l2_table_request_t *obj,
    uint32_t *experimenter);

extern void of_bsn_set_l2_table_request_subtype_set(
    of_bsn_set_l2_table_request_t *obj,
    uint32_t subtype);
extern void of_bsn_set_l2_table_request_subtype_get(
    of_bsn_set_l2_table_request_t *obj,
    uint32_t *subtype);

extern void of_bsn_set_l2_table_request_l2_table_enable_set(
    of_bsn_set_l2_table_request_t *obj,
    uint8_t l2_table_enable);
extern void of_bsn_set_l2_table_request_l2_table_enable_get(
    of_bsn_set_l2_table_request_t *obj,
    uint8_t *l2_table_enable);

extern void of_bsn_set_l2_table_request_l2_table_priority_set(
    of_bsn_set_l2_table_request_t *obj,
    uint16_t l2_table_priority);
extern void of_bsn_set_l2_table_request_l2_table_priority_get(
    of_bsn_set_l2_table_request_t *obj,
    uint16_t *l2_table_priority);

/* Unified accessor functions for of_bsn_set_lacp_reply */

extern void of_bsn_set_lacp_reply_xid_set(
    of_bsn_set_lacp_reply_t *obj,
    uint32_t xid);
extern void of_bsn_set_lacp_reply_xid_get(
    of_bsn_set_lacp_reply_t *obj,
    uint32_t *xid);

extern void of_bsn_set_lacp_reply_experimenter_set(
    of_bsn_set_lacp_reply_t *obj,
    uint32_t experimenter);
extern void of_bsn_set_lacp_reply_experimenter_get(
    of_bsn_set_lacp_reply_t *obj,
    uint32_t *experimenter);

extern void of_bsn_set_lacp_reply_subtype_set(
    of_bsn_set_lacp_reply_t *obj,
    uint32_t subtype);
extern void of_bsn_set_lacp_reply_subtype_get(
    of_bsn_set_lacp_reply_t *obj,
    uint32_t *subtype);

extern void of_bsn_set_lacp_reply_status_set(
    of_bsn_set_lacp_reply_t *obj,
    uint32_t status);
extern void of_bsn_set_lacp_reply_status_get(
    of_bsn_set_lacp_reply_t *obj,
    uint32_t *status);

extern void of_bsn_set_lacp_reply_port_no_set(
    of_bsn_set_lacp_reply_t *obj,
    of_port_no_t port_no);
extern void of_bsn_set_lacp_reply_port_no_get(
    of_bsn_set_lacp_reply_t *obj,
    of_port_no_t *port_no);

/* Unified accessor functions for of_bsn_set_lacp_request */

extern void of_bsn_set_lacp_request_xid_set(
    of_bsn_set_lacp_request_t *obj,
    uint32_t xid);
extern void of_bsn_set_lacp_request_xid_get(
    of_bsn_set_lacp_request_t *obj,
    uint32_t *xid);

extern void of_bsn_set_lacp_request_experimenter_set(
    of_bsn_set_lacp_request_t *obj,
    uint32_t experimenter);
extern void of_bsn_set_lacp_request_experimenter_get(
    of_bsn_set_lacp_request_t *obj,
    uint32_t *experimenter);

extern void of_bsn_set_lacp_request_subtype_set(
    of_bsn_set_lacp_request_t *obj,
    uint32_t subtype);
extern void of_bsn_set_lacp_request_subtype_get(
    of_bsn_set_lacp_request_t *obj,
    uint32_t *subtype);

extern void of_bsn_set_lacp_request_enabled_set(
    of_bsn_set_lacp_request_t *obj,
    uint8_t enabled);
extern void of_bsn_set_lacp_request_enabled_get(
    of_bsn_set_lacp_request_t *obj,
    uint8_t *enabled);

extern void of_bsn_set_lacp_request_port_no_set(
    of_bsn_set_lacp_request_t *obj,
    of_port_no_t port_no);
extern void of_bsn_set_lacp_request_port_no_get(
    of_bsn_set_lacp_request_t *obj,
    of_port_no_t *port_no);

extern void of_bsn_set_lacp_request_actor_sys_priority_set(
    of_bsn_set_lacp_request_t *obj,
    uint16_t actor_sys_priority);
extern void of_bsn_set_lacp_request_actor_sys_priority_get(
    of_bsn_set_lacp_request_t *obj,
    uint16_t *actor_sys_priority);

extern void of_bsn_set_lacp_request_actor_sys_mac_set(
    of_bsn_set_lacp_request_t *obj,
    of_mac_addr_t actor_sys_mac);
extern void of_bsn_set_lacp_request_actor_sys_mac_get(
    of_bsn_set_lacp_request_t *obj,
    of_mac_addr_t *actor_sys_mac);

extern void of_bsn_set_lacp_request_actor_port_priority_set(
    of_bsn_set_lacp_request_t *obj,
    uint16_t actor_port_priority);
extern void of_bsn_set_lacp_request_actor_port_priority_get(
    of_bsn_set_lacp_request_t *obj,
    uint16_t *actor_port_priority);

extern void of_bsn_set_lacp_request_actor_port_num_set(
    of_bsn_set_lacp_request_t *obj,
    uint16_t actor_port_num);
extern void of_bsn_set_lacp_request_actor_port_num_get(
    of_bsn_set_lacp_request_t *obj,
    uint16_t *actor_port_num);

extern void of_bsn_set_lacp_request_actor_key_set(
    of_bsn_set_lacp_request_t *obj,
    uint16_t actor_key);
extern void of_bsn_set_lacp_request_actor_key_get(
    of_bsn_set_lacp_request_t *obj,
    uint16_t *actor_key);

/* Unified accessor functions for of_bsn_set_mirroring */

extern void of_bsn_set_mirroring_xid_set(
    of_bsn_set_mirroring_t *obj,
    uint32_t xid);
extern void of_bsn_set_mirroring_xid_get(
    of_bsn_set_mirroring_t *obj,
    uint32_t *xid);

extern void of_bsn_set_mirroring_experimenter_set(
    of_bsn_set_mirroring_t *obj,
    uint32_t experimenter);
extern void of_bsn_set_mirroring_experimenter_get(
    of_bsn_set_mirroring_t *obj,
    uint32_t *experimenter);

extern void of_bsn_set_mirroring_subtype_set(
    of_bsn_set_mirroring_t *obj,
    uint32_t subtype);
extern void of_bsn_set_mirroring_subtype_get(
    of_bsn_set_mirroring_t *obj,
    uint32_t *subtype);

extern void of_bsn_set_mirroring_report_mirror_ports_set(
    of_bsn_set_mirroring_t *obj,
    uint8_t report_mirror_ports);
extern void of_bsn_set_mirroring_report_mirror_ports_get(
    of_bsn_set_mirroring_t *obj,
    uint8_t *report_mirror_ports);

/* Unified accessor functions for of_bsn_set_pktin_suppression_reply */

extern void of_bsn_set_pktin_suppression_reply_xid_set(
    of_bsn_set_pktin_suppression_reply_t *obj,
    uint32_t xid);
extern void of_bsn_set_pktin_suppression_reply_xid_get(
    of_bsn_set_pktin_suppression_reply_t *obj,
    uint32_t *xid);

extern void of_bsn_set_pktin_suppression_reply_experimenter_set(
    of_bsn_set_pktin_suppression_reply_t *obj,
    uint32_t experimenter);
extern void of_bsn_set_pktin_suppression_reply_experimenter_get(
    of_bsn_set_pktin_suppression_reply_t *obj,
    uint32_t *experimenter);

extern void of_bsn_set_pktin_suppression_reply_subtype_set(
    of_bsn_set_pktin_suppression_reply_t *obj,
    uint32_t subtype);
extern void of_bsn_set_pktin_suppression_reply_subtype_get(
    of_bsn_set_pktin_suppression_reply_t *obj,
    uint32_t *subtype);

extern void of_bsn_set_pktin_suppression_reply_status_set(
    of_bsn_set_pktin_suppression_reply_t *obj,
    uint32_t status);
extern void of_bsn_set_pktin_suppression_reply_status_get(
    of_bsn_set_pktin_suppression_reply_t *obj,
    uint32_t *status);

/* Unified accessor functions for of_bsn_set_pktin_suppression_request */

extern void of_bsn_set_pktin_suppression_request_xid_set(
    of_bsn_set_pktin_suppression_request_t *obj,
    uint32_t xid);
extern void of_bsn_set_pktin_suppression_request_xid_get(
    of_bsn_set_pktin_suppression_request_t *obj,
    uint32_t *xid);

extern void of_bsn_set_pktin_suppression_request_experimenter_set(
    of_bsn_set_pktin_suppression_request_t *obj,
    uint32_t experimenter);
extern void of_bsn_set_pktin_suppression_request_experimenter_get(
    of_bsn_set_pktin_suppression_request_t *obj,
    uint32_t *experimenter);

extern void of_bsn_set_pktin_suppression_request_subtype_set(
    of_bsn_set_pktin_suppression_request_t *obj,
    uint32_t subtype);
extern void of_bsn_set_pktin_suppression_request_subtype_get(
    of_bsn_set_pktin_suppression_request_t *obj,
    uint32_t *subtype);

extern void of_bsn_set_pktin_suppression_request_enabled_set(
    of_bsn_set_pktin_suppression_request_t *obj,
    uint8_t enabled);
extern void of_bsn_set_pktin_suppression_request_enabled_get(
    of_bsn_set_pktin_suppression_request_t *obj,
    uint8_t *enabled);

extern void of_bsn_set_pktin_suppression_request_idle_timeout_set(
    of_bsn_set_pktin_suppression_request_t *obj,
    uint16_t idle_timeout);
extern void of_bsn_set_pktin_suppression_request_idle_timeout_get(
    of_bsn_set_pktin_suppression_request_t *obj,
    uint16_t *idle_timeout);

extern void of_bsn_set_pktin_suppression_request_hard_timeout_set(
    of_bsn_set_pktin_suppression_request_t *obj,
    uint16_t hard_timeout);
extern void of_bsn_set_pktin_suppression_request_hard_timeout_get(
    of_bsn_set_pktin_suppression_request_t *obj,
    uint16_t *hard_timeout);

extern void of_bsn_set_pktin_suppression_request_priority_set(
    of_bsn_set_pktin_suppression_request_t *obj,
    uint16_t priority);
extern void of_bsn_set_pktin_suppression_request_priority_get(
    of_bsn_set_pktin_suppression_request_t *obj,
    uint16_t *priority);

extern void of_bsn_set_pktin_suppression_request_cookie_set(
    of_bsn_set_pktin_suppression_request_t *obj,
    uint64_t cookie);
extern void of_bsn_set_pktin_suppression_request_cookie_get(
    of_bsn_set_pktin_suppression_request_t *obj,
    uint64_t *cookie);

/* Unified accessor functions for of_bsn_set_switch_pipeline_reply */

extern void of_bsn_set_switch_pipeline_reply_xid_set(
    of_bsn_set_switch_pipeline_reply_t *obj,
    uint32_t xid);
extern void of_bsn_set_switch_pipeline_reply_xid_get(
    of_bsn_set_switch_pipeline_reply_t *obj,
    uint32_t *xid);

extern void of_bsn_set_switch_pipeline_reply_experimenter_set(
    of_bsn_set_switch_pipeline_reply_t *obj,
    uint32_t experimenter);
extern void of_bsn_set_switch_pipeline_reply_experimenter_get(
    of_bsn_set_switch_pipeline_reply_t *obj,
    uint32_t *experimenter);

extern void of_bsn_set_switch_pipeline_reply_subtype_set(
    of_bsn_set_switch_pipeline_reply_t *obj,
    uint32_t subtype);
extern void of_bsn_set_switch_pipeline_reply_subtype_get(
    of_bsn_set_switch_pipeline_reply_t *obj,
    uint32_t *subtype);

extern void of_bsn_set_switch_pipeline_reply_status_set(
    of_bsn_set_switch_pipeline_reply_t *obj,
    uint32_t status);
extern void of_bsn_set_switch_pipeline_reply_status_get(
    of_bsn_set_switch_pipeline_reply_t *obj,
    uint32_t *status);

/* Unified accessor functions for of_bsn_set_switch_pipeline_request */

extern void of_bsn_set_switch_pipeline_request_xid_set(
    of_bsn_set_switch_pipeline_request_t *obj,
    uint32_t xid);
extern void of_bsn_set_switch_pipeline_request_xid_get(
    of_bsn_set_switch_pipeline_request_t *obj,
    uint32_t *xid);

extern void of_bsn_set_switch_pipeline_request_experimenter_set(
    of_bsn_set_switch_pipeline_request_t *obj,
    uint32_t experimenter);
extern void of_bsn_set_switch_pipeline_request_experimenter_get(
    of_bsn_set_switch_pipeline_request_t *obj,
    uint32_t *experimenter);

extern void of_bsn_set_switch_pipeline_request_subtype_set(
    of_bsn_set_switch_pipeline_request_t *obj,
    uint32_t subtype);
extern void of_bsn_set_switch_pipeline_request_subtype_get(
    of_bsn_set_switch_pipeline_request_t *obj,
    uint32_t *subtype);

extern void of_bsn_set_switch_pipeline_request_pipeline_set(
    of_bsn_set_switch_pipeline_request_t *obj,
    of_desc_str_t pipeline);
extern void of_bsn_set_switch_pipeline_request_pipeline_get(
    of_bsn_set_switch_pipeline_request_t *obj,
    of_desc_str_t *pipeline);

/* Unified accessor functions for of_bsn_shell_command */

extern void of_bsn_shell_command_xid_set(
    of_bsn_shell_command_t *obj,
    uint32_t xid);
extern void of_bsn_shell_command_xid_get(
    of_bsn_shell_command_t *obj,
    uint32_t *xid);

extern void of_bsn_shell_command_experimenter_set(
    of_bsn_shell_command_t *obj,
    uint32_t experimenter);
extern void of_bsn_shell_command_experimenter_get(
    of_bsn_shell_command_t *obj,
    uint32_t *experimenter);

extern void of_bsn_shell_command_subtype_set(
    of_bsn_shell_command_t *obj,
    uint32_t subtype);
extern void of_bsn_shell_command_subtype_get(
    of_bsn_shell_command_t *obj,
    uint32_t *subtype);

extern void of_bsn_shell_command_service_set(
    of_bsn_shell_command_t *obj,
    uint32_t service);
extern void of_bsn_shell_command_service_get(
    of_bsn_shell_command_t *obj,
    uint32_t *service);

extern int WARN_UNUSED_RESULT of_bsn_shell_command_data_set(
    of_bsn_shell_command_t *obj,
    of_octets_t *data);
extern void of_bsn_shell_command_data_get(
    of_bsn_shell_command_t *obj,
    of_octets_t *data);

/* Unified accessor functions for of_bsn_shell_output */

extern void of_bsn_shell_output_xid_set(
    of_bsn_shell_output_t *obj,
    uint32_t xid);
extern void of_bsn_shell_output_xid_get(
    of_bsn_shell_output_t *obj,
    uint32_t *xid);

extern void of_bsn_shell_output_experimenter_set(
    of_bsn_shell_output_t *obj,
    uint32_t experimenter);
extern void of_bsn_shell_output_experimenter_get(
    of_bsn_shell_output_t *obj,
    uint32_t *experimenter);

extern void of_bsn_shell_output_subtype_set(
    of_bsn_shell_output_t *obj,
    uint32_t subtype);
extern void of_bsn_shell_output_subtype_get(
    of_bsn_shell_output_t *obj,
    uint32_t *subtype);

extern int WARN_UNUSED_RESULT of_bsn_shell_output_data_set(
    of_bsn_shell_output_t *obj,
    of_octets_t *data);
extern void of_bsn_shell_output_data_get(
    of_bsn_shell_output_t *obj,
    of_octets_t *data);

/* Unified accessor functions for of_bsn_shell_status */

extern void of_bsn_shell_status_xid_set(
    of_bsn_shell_status_t *obj,
    uint32_t xid);
extern void of_bsn_shell_status_xid_get(
    of_bsn_shell_status_t *obj,
    uint32_t *xid);

extern void of_bsn_shell_status_experimenter_set(
    of_bsn_shell_status_t *obj,
    uint32_t experimenter);
extern void of_bsn_shell_status_experimenter_get(
    of_bsn_shell_status_t *obj,
    uint32_t *experimenter);

extern void of_bsn_shell_status_subtype_set(
    of_bsn_shell_status_t *obj,
    uint32_t subtype);
extern void of_bsn_shell_status_subtype_get(
    of_bsn_shell_status_t *obj,
    uint32_t *subtype);

extern void of_bsn_shell_status_status_set(
    of_bsn_shell_status_t *obj,
    uint32_t status);
extern void of_bsn_shell_status_status_get(
    of_bsn_shell_status_t *obj,
    uint32_t *status);

/* Unified accessor functions for of_bsn_stats_reply */

extern void of_bsn_stats_reply_xid_set(
    of_bsn_stats_reply_t *obj,
    uint32_t xid);
extern void of_bsn_stats_reply_xid_get(
    of_bsn_stats_reply_t *obj,
    uint32_t *xid);

extern void of_bsn_stats_reply_flags_set(
    of_bsn_stats_reply_t *obj,
    uint16_t flags);
extern void of_bsn_stats_reply_flags_get(
    of_bsn_stats_reply_t *obj,
    uint16_t *flags);

extern void of_bsn_stats_reply_experimenter_set(
    of_bsn_stats_reply_t *obj,
    uint32_t experimenter);
extern void of_bsn_stats_reply_experimenter_get(
    of_bsn_stats_reply_t *obj,
    uint32_t *experimenter);

extern void of_bsn_stats_reply_subtype_set(
    of_bsn_stats_reply_t *obj,
    uint32_t subtype);
extern void of_bsn_stats_reply_subtype_get(
    of_bsn_stats_reply_t *obj,
    uint32_t *subtype);

/* Unified accessor functions for of_bsn_stats_request */

extern void of_bsn_stats_request_xid_set(
    of_bsn_stats_request_t *obj,
    uint32_t xid);
extern void of_bsn_stats_request_xid_get(
    of_bsn_stats_request_t *obj,
    uint32_t *xid);

extern void of_bsn_stats_request_flags_set(
    of_bsn_stats_request_t *obj,
    uint16_t flags);
extern void of_bsn_stats_request_flags_get(
    of_bsn_stats_request_t *obj,
    uint16_t *flags);

extern void of_bsn_stats_request_experimenter_set(
    of_bsn_stats_request_t *obj,
    uint32_t experimenter);
extern void of_bsn_stats_request_experimenter_get(
    of_bsn_stats_request_t *obj,
    uint32_t *experimenter);

extern void of_bsn_stats_request_subtype_set(
    of_bsn_stats_request_t *obj,
    uint32_t subtype);
extern void of_bsn_stats_request_subtype_get(
    of_bsn_stats_request_t *obj,
    uint32_t *subtype);

/* Unified accessor functions for of_bsn_switch_pipeline_stats_reply */

extern void of_bsn_switch_pipeline_stats_reply_xid_set(
    of_bsn_switch_pipeline_stats_reply_t *obj,
    uint32_t xid);
extern void of_bsn_switch_pipeline_stats_reply_xid_get(
    of_bsn_switch_pipeline_stats_reply_t *obj,
    uint32_t *xid);

extern void of_bsn_switch_pipeline_stats_reply_flags_set(
    of_bsn_switch_pipeline_stats_reply_t *obj,
    uint16_t flags);
extern void of_bsn_switch_pipeline_stats_reply_flags_get(
    of_bsn_switch_pipeline_stats_reply_t *obj,
    uint16_t *flags);

extern void of_bsn_switch_pipeline_stats_reply_experimenter_set(
    of_bsn_switch_pipeline_stats_reply_t *obj,
    uint32_t experimenter);
extern void of_bsn_switch_pipeline_stats_reply_experimenter_get(
    of_bsn_switch_pipeline_stats_reply_t *obj,
    uint32_t *experimenter);

extern void of_bsn_switch_pipeline_stats_reply_subtype_set(
    of_bsn_switch_pipeline_stats_reply_t *obj,
    uint32_t subtype);
extern void of_bsn_switch_pipeline_stats_reply_subtype_get(
    of_bsn_switch_pipeline_stats_reply_t *obj,
    uint32_t *subtype);

extern int WARN_UNUSED_RESULT of_bsn_switch_pipeline_stats_reply_entries_set(
    of_bsn_switch_pipeline_stats_reply_t *obj,
    of_list_bsn_switch_pipeline_stats_entry_t *entries);
extern void of_bsn_switch_pipeline_stats_reply_entries_bind(
    of_bsn_switch_pipeline_stats_reply_t *obj,
    of_list_bsn_switch_pipeline_stats_entry_t *entries);
extern of_list_bsn_switch_pipeline_stats_entry_t *of_bsn_switch_pipeline_stats_reply_entries_get(
    of_bsn_switch_pipeline_stats_reply_t *obj);

/* Unified accessor functions for of_bsn_switch_pipeline_stats_request */

extern void of_bsn_switch_pipeline_stats_request_xid_set(
    of_bsn_switch_pipeline_stats_request_t *obj,
    uint32_t xid);
extern void of_bsn_switch_pipeline_stats_request_xid_get(
    of_bsn_switch_pipeline_stats_request_t *obj,
    uint32_t *xid);

extern void of_bsn_switch_pipeline_stats_request_flags_set(
    of_bsn_switch_pipeline_stats_request_t *obj,
    uint16_t flags);
extern void of_bsn_switch_pipeline_stats_request_flags_get(
    of_bsn_switch_pipeline_stats_request_t *obj,
    uint16_t *flags);

extern void of_bsn_switch_pipeline_stats_request_experimenter_set(
    of_bsn_switch_pipeline_stats_request_t *obj,
    uint32_t experimenter);
extern void of_bsn_switch_pipeline_stats_request_experimenter_get(
    of_bsn_switch_pipeline_stats_request_t *obj,
    uint32_t *experimenter);

extern void of_bsn_switch_pipeline_stats_request_subtype_set(
    of_bsn_switch_pipeline_stats_request_t *obj,
    uint32_t subtype);
extern void of_bsn_switch_pipeline_stats_request_subtype_get(
    of_bsn_switch_pipeline_stats_request_t *obj,
    uint32_t *subtype);

/* Unified accessor functions for of_bsn_time_reply */

extern void of_bsn_time_reply_xid_set(
    of_bsn_time_reply_t *obj,
    uint32_t xid);
extern void of_bsn_time_reply_xid_get(
    of_bsn_time_reply_t *obj,
    uint32_t *xid);

extern void of_bsn_time_reply_experimenter_set(
    of_bsn_time_reply_t *obj,
    uint32_t experimenter);
extern void of_bsn_time_reply_experimenter_get(
    of_bsn_time_reply_t *obj,
    uint32_t *experimenter);

extern void of_bsn_time_reply_subtype_set(
    of_bsn_time_reply_t *obj,
    uint32_t subtype);
extern void of_bsn_time_reply_subtype_get(
    of_bsn_time_reply_t *obj,
    uint32_t *subtype);

extern void of_bsn_time_reply_time_ms_set(
    of_bsn_time_reply_t *obj,
    uint64_t time_ms);
extern void of_bsn_time_reply_time_ms_get(
    of_bsn_time_reply_t *obj,
    uint64_t *time_ms);

/* Unified accessor functions for of_bsn_time_request */

extern void of_bsn_time_request_xid_set(
    of_bsn_time_request_t *obj,
    uint32_t xid);
extern void of_bsn_time_request_xid_get(
    of_bsn_time_request_t *obj,
    uint32_t *xid);

extern void of_bsn_time_request_experimenter_set(
    of_bsn_time_request_t *obj,
    uint32_t experimenter);
extern void of_bsn_time_request_experimenter_get(
    of_bsn_time_request_t *obj,
    uint32_t *experimenter);

extern void of_bsn_time_request_subtype_set(
    of_bsn_time_request_t *obj,
    uint32_t subtype);
extern void of_bsn_time_request_subtype_get(
    of_bsn_time_request_t *obj,
    uint32_t *subtype);

/* Unified accessor functions for of_bsn_virtual_port_create_reply */

extern void of_bsn_virtual_port_create_reply_xid_set(
    of_bsn_virtual_port_create_reply_t *obj,
    uint32_t xid);
extern void of_bsn_virtual_port_create_reply_xid_get(
    of_bsn_virtual_port_create_reply_t *obj,
    uint32_t *xid);

extern void of_bsn_virtual_port_create_reply_experimenter_set(
    of_bsn_virtual_port_create_reply_t *obj,
    uint32_t experimenter);
extern void of_bsn_virtual_port_create_reply_experimenter_get(
    of_bsn_virtual_port_create_reply_t *obj,
    uint32_t *experimenter);

extern void of_bsn_virtual_port_create_reply_subtype_set(
    of_bsn_virtual_port_create_reply_t *obj,
    uint32_t subtype);
extern void of_bsn_virtual_port_create_reply_subtype_get(
    of_bsn_virtual_port_create_reply_t *obj,
    uint32_t *subtype);

extern void of_bsn_virtual_port_create_reply_status_set(
    of_bsn_virtual_port_create_reply_t *obj,
    uint32_t status);
extern void of_bsn_virtual_port_create_reply_status_get(
    of_bsn_virtual_port_create_reply_t *obj,
    uint32_t *status);

extern void of_bsn_virtual_port_create_reply_vport_no_set(
    of_bsn_virtual_port_create_reply_t *obj,
    uint32_t vport_no);
extern void of_bsn_virtual_port_create_reply_vport_no_get(
    of_bsn_virtual_port_create_reply_t *obj,
    uint32_t *vport_no);

/* Unified accessor functions for of_bsn_virtual_port_create_request */

extern void of_bsn_virtual_port_create_request_xid_set(
    of_bsn_virtual_port_create_request_t *obj,
    uint32_t xid);
extern void of_bsn_virtual_port_create_request_xid_get(
    of_bsn_virtual_port_create_request_t *obj,
    uint32_t *xid);

extern void of_bsn_virtual_port_create_request_experimenter_set(
    of_bsn_virtual_port_create_request_t *obj,
    uint32_t experimenter);
extern void of_bsn_virtual_port_create_request_experimenter_get(
    of_bsn_virtual_port_create_request_t *obj,
    uint32_t *experimenter);

extern void of_bsn_virtual_port_create_request_subtype_set(
    of_bsn_virtual_port_create_request_t *obj,
    uint32_t subtype);
extern void of_bsn_virtual_port_create_request_subtype_get(
    of_bsn_virtual_port_create_request_t *obj,
    uint32_t *subtype);

extern void of_bsn_virtual_port_create_request_vport_set(
    of_bsn_virtual_port_create_request_t *obj,
    of_bsn_vport_q_in_q_t *vport);
extern void of_bsn_virtual_port_create_request_vport_bind(
    of_bsn_virtual_port_create_request_t *obj,
    of_bsn_vport_q_in_q_t *vport);
extern of_bsn_vport_q_in_q_t *of_bsn_virtual_port_create_request_vport_get(
    of_bsn_virtual_port_create_request_t *obj);

/* Unified accessor functions for of_bsn_virtual_port_remove_reply */

extern void of_bsn_virtual_port_remove_reply_xid_set(
    of_bsn_virtual_port_remove_reply_t *obj,
    uint32_t xid);
extern void of_bsn_virtual_port_remove_reply_xid_get(
    of_bsn_virtual_port_remove_reply_t *obj,
    uint32_t *xid);

extern void of_bsn_virtual_port_remove_reply_experimenter_set(
    of_bsn_virtual_port_remove_reply_t *obj,
    uint32_t experimenter);
extern void of_bsn_virtual_port_remove_reply_experimenter_get(
    of_bsn_virtual_port_remove_reply_t *obj,
    uint32_t *experimenter);

extern void of_bsn_virtual_port_remove_reply_subtype_set(
    of_bsn_virtual_port_remove_reply_t *obj,
    uint32_t subtype);
extern void of_bsn_virtual_port_remove_reply_subtype_get(
    of_bsn_virtual_port_remove_reply_t *obj,
    uint32_t *subtype);

extern void of_bsn_virtual_port_remove_reply_status_set(
    of_bsn_virtual_port_remove_reply_t *obj,
    uint32_t status);
extern void of_bsn_virtual_port_remove_reply_status_get(
    of_bsn_virtual_port_remove_reply_t *obj,
    uint32_t *status);

/* Unified accessor functions for of_bsn_virtual_port_remove_request */

extern void of_bsn_virtual_port_remove_request_xid_set(
    of_bsn_virtual_port_remove_request_t *obj,
    uint32_t xid);
extern void of_bsn_virtual_port_remove_request_xid_get(
    of_bsn_virtual_port_remove_request_t *obj,
    uint32_t *xid);

extern void of_bsn_virtual_port_remove_request_experimenter_set(
    of_bsn_virtual_port_remove_request_t *obj,
    uint32_t experimenter);
extern void of_bsn_virtual_port_remove_request_experimenter_get(
    of_bsn_virtual_port_remove_request_t *obj,
    uint32_t *experimenter);

extern void of_bsn_virtual_port_remove_request_subtype_set(
    of_bsn_virtual_port_remove_request_t *obj,
    uint32_t subtype);
extern void of_bsn_virtual_port_remove_request_subtype_get(
    of_bsn_virtual_port_remove_request_t *obj,
    uint32_t *subtype);

extern void of_bsn_virtual_port_remove_request_vport_no_set(
    of_bsn_virtual_port_remove_request_t *obj,
    uint32_t vport_no);
extern void of_bsn_virtual_port_remove_request_vport_no_get(
    of_bsn_virtual_port_remove_request_t *obj,
    uint32_t *vport_no);

/* Unified accessor functions for of_bsn_vlan_counter_stats_reply */

extern void of_bsn_vlan_counter_stats_reply_xid_set(
    of_bsn_vlan_counter_stats_reply_t *obj,
    uint32_t xid);
extern void of_bsn_vlan_counter_stats_reply_xid_get(
    of_bsn_vlan_counter_stats_reply_t *obj,
    uint32_t *xid);

extern void of_bsn_vlan_counter_stats_reply_flags_set(
    of_bsn_vlan_counter_stats_reply_t *obj,
    uint16_t flags);
extern void of_bsn_vlan_counter_stats_reply_flags_get(
    of_bsn_vlan_counter_stats_reply_t *obj,
    uint16_t *flags);

extern void of_bsn_vlan_counter_stats_reply_experimenter_set(
    of_bsn_vlan_counter_stats_reply_t *obj,
    uint32_t experimenter);
extern void of_bsn_vlan_counter_stats_reply_experimenter_get(
    of_bsn_vlan_counter_stats_reply_t *obj,
    uint32_t *experimenter);

extern void of_bsn_vlan_counter_stats_reply_subtype_set(
    of_bsn_vlan_counter_stats_reply_t *obj,
    uint32_t subtype);
extern void of_bsn_vlan_counter_stats_reply_subtype_get(
    of_bsn_vlan_counter_stats_reply_t *obj,
    uint32_t *subtype);

extern int WARN_UNUSED_RESULT of_bsn_vlan_counter_stats_reply_entries_set(
    of_bsn_vlan_counter_stats_reply_t *obj,
    of_list_bsn_vlan_counter_stats_entry_t *entries);
extern void of_bsn_vlan_counter_stats_reply_entries_bind(
    of_bsn_vlan_counter_stats_reply_t *obj,
    of_list_bsn_vlan_counter_stats_entry_t *entries);
extern of_list_bsn_vlan_counter_stats_entry_t *of_bsn_vlan_counter_stats_reply_entries_get(
    of_bsn_vlan_counter_stats_reply_t *obj);

/* Unified accessor functions for of_bsn_vlan_counter_stats_request */

extern void of_bsn_vlan_counter_stats_request_xid_set(
    of_bsn_vlan_counter_stats_request_t *obj,
    uint32_t xid);
extern void of_bsn_vlan_counter_stats_request_xid_get(
    of_bsn_vlan_counter_stats_request_t *obj,
    uint32_t *xid);

extern void of_bsn_vlan_counter_stats_request_flags_set(
    of_bsn_vlan_counter_stats_request_t *obj,
    uint16_t flags);
extern void of_bsn_vlan_counter_stats_request_flags_get(
    of_bsn_vlan_counter_stats_request_t *obj,
    uint16_t *flags);

extern void of_bsn_vlan_counter_stats_request_experimenter_set(
    of_bsn_vlan_counter_stats_request_t *obj,
    uint32_t experimenter);
extern void of_bsn_vlan_counter_stats_request_experimenter_get(
    of_bsn_vlan_counter_stats_request_t *obj,
    uint32_t *experimenter);

extern void of_bsn_vlan_counter_stats_request_subtype_set(
    of_bsn_vlan_counter_stats_request_t *obj,
    uint32_t subtype);
extern void of_bsn_vlan_counter_stats_request_subtype_get(
    of_bsn_vlan_counter_stats_request_t *obj,
    uint32_t *subtype);

extern void of_bsn_vlan_counter_stats_request_vlan_vid_set(
    of_bsn_vlan_counter_stats_request_t *obj,
    uint16_t vlan_vid);
extern void of_bsn_vlan_counter_stats_request_vlan_vid_get(
    of_bsn_vlan_counter_stats_request_t *obj,
    uint16_t *vlan_vid);

/* Unified accessor functions for of_desc_stats_reply */

extern void of_desc_stats_reply_xid_set(
    of_desc_stats_reply_t *obj,
    uint32_t xid);
extern void of_desc_stats_reply_xid_get(
    of_desc_stats_reply_t *obj,
    uint32_t *xid);

extern void of_desc_stats_reply_flags_set(
    of_desc_stats_reply_t *obj,
    uint16_t flags);
extern void of_desc_stats_reply_flags_get(
    of_desc_stats_reply_t *obj,
    uint16_t *flags);

extern void of_desc_stats_reply_mfr_desc_set(
    of_desc_stats_reply_t *obj,
    of_desc_str_t mfr_desc);
extern void of_desc_stats_reply_mfr_desc_get(
    of_desc_stats_reply_t *obj,
    of_desc_str_t *mfr_desc);

extern void of_desc_stats_reply_hw_desc_set(
    of_desc_stats_reply_t *obj,
    of_desc_str_t hw_desc);
extern void of_desc_stats_reply_hw_desc_get(
    of_desc_stats_reply_t *obj,
    of_desc_str_t *hw_desc);

extern void of_desc_stats_reply_sw_desc_set(
    of_desc_stats_reply_t *obj,
    of_desc_str_t sw_desc);
extern void of_desc_stats_reply_sw_desc_get(
    of_desc_stats_reply_t *obj,
    of_desc_str_t *sw_desc);

extern void of_desc_stats_reply_serial_num_set(
    of_desc_stats_reply_t *obj,
    of_serial_num_t serial_num);
extern void of_desc_stats_reply_serial_num_get(
    of_desc_stats_reply_t *obj,
    of_serial_num_t *serial_num);

extern void of_desc_stats_reply_dp_desc_set(
    of_desc_stats_reply_t *obj,
    of_desc_str_t dp_desc);
extern void of_desc_stats_reply_dp_desc_get(
    of_desc_stats_reply_t *obj,
    of_desc_str_t *dp_desc);

/* Unified accessor functions for of_desc_stats_request */

extern void of_desc_stats_request_xid_set(
    of_desc_stats_request_t *obj,
    uint32_t xid);
extern void of_desc_stats_request_xid_get(
    of_desc_stats_request_t *obj,
    uint32_t *xid);

extern void of_desc_stats_request_flags_set(
    of_desc_stats_request_t *obj,
    uint16_t flags);
extern void of_desc_stats_request_flags_get(
    of_desc_stats_request_t *obj,
    uint16_t *flags);

/* Unified accessor functions for of_echo_reply */

extern void of_echo_reply_xid_set(
    of_echo_reply_t *obj,
    uint32_t xid);
extern void of_echo_reply_xid_get(
    of_echo_reply_t *obj,
    uint32_t *xid);

extern int WARN_UNUSED_RESULT of_echo_reply_data_set(
    of_echo_reply_t *obj,
    of_octets_t *data);
extern void of_echo_reply_data_get(
    of_echo_reply_t *obj,
    of_octets_t *data);

/* Unified accessor functions for of_echo_request */

extern void of_echo_request_xid_set(
    of_echo_request_t *obj,
    uint32_t xid);
extern void of_echo_request_xid_get(
    of_echo_request_t *obj,
    uint32_t *xid);

extern int WARN_UNUSED_RESULT of_echo_request_data_set(
    of_echo_request_t *obj,
    of_octets_t *data);
extern void of_echo_request_data_get(
    of_echo_request_t *obj,
    of_octets_t *data);

/* Unified accessor functions for of_error_msg */

extern void of_error_msg_xid_set(
    of_error_msg_t *obj,
    uint32_t xid);
extern void of_error_msg_xid_get(
    of_error_msg_t *obj,
    uint32_t *xid);

/* Unified accessor functions for of_experimenter */

extern void of_experimenter_xid_set(
    of_experimenter_t *obj,
    uint32_t xid);
extern void of_experimenter_xid_get(
    of_experimenter_t *obj,
    uint32_t *xid);

extern void of_experimenter_experimenter_set(
    of_experimenter_t *obj,
    uint32_t experimenter);
extern void of_experimenter_experimenter_get(
    of_experimenter_t *obj,
    uint32_t *experimenter);

extern void of_experimenter_subtype_set(
    of_experimenter_t *obj,
    uint32_t subtype);
extern void of_experimenter_subtype_get(
    of_experimenter_t *obj,
    uint32_t *subtype);

extern int WARN_UNUSED_RESULT of_experimenter_data_set(
    of_experimenter_t *obj,
    of_octets_t *data);
extern void of_experimenter_data_get(
    of_experimenter_t *obj,
    of_octets_t *data);

/* Unified accessor functions for of_experimenter_error_msg */

extern void of_experimenter_error_msg_xid_set(
    of_experimenter_error_msg_t *obj,
    uint32_t xid);
extern void of_experimenter_error_msg_xid_get(
    of_experimenter_error_msg_t *obj,
    uint32_t *xid);

extern void of_experimenter_error_msg_subtype_set(
    of_experimenter_error_msg_t *obj,
    uint16_t subtype);
extern void of_experimenter_error_msg_subtype_get(
    of_experimenter_error_msg_t *obj,
    uint16_t *subtype);

extern void of_experimenter_error_msg_experimenter_set(
    of_experimenter_error_msg_t *obj,
    uint32_t experimenter);
extern void of_experimenter_error_msg_experimenter_get(
    of_experimenter_error_msg_t *obj,
    uint32_t *experimenter);

extern int WARN_UNUSED_RESULT of_experimenter_error_msg_data_set(
    of_experimenter_error_msg_t *obj,
    of_octets_t *data);
extern void of_experimenter_error_msg_data_get(
    of_experimenter_error_msg_t *obj,
    of_octets_t *data);

/* Unified accessor functions for of_experimenter_stats_reply */

extern void of_experimenter_stats_reply_xid_set(
    of_experimenter_stats_reply_t *obj,
    uint32_t xid);
extern void of_experimenter_stats_reply_xid_get(
    of_experimenter_stats_reply_t *obj,
    uint32_t *xid);

extern void of_experimenter_stats_reply_flags_set(
    of_experimenter_stats_reply_t *obj,
    uint16_t flags);
extern void of_experimenter_stats_reply_flags_get(
    of_experimenter_stats_reply_t *obj,
    uint16_t *flags);

extern void of_experimenter_stats_reply_experimenter_set(
    of_experimenter_stats_reply_t *obj,
    uint32_t experimenter);
extern void of_experimenter_stats_reply_experimenter_get(
    of_experimenter_stats_reply_t *obj,
    uint32_t *experimenter);

extern void of_experimenter_stats_reply_subtype_set(
    of_experimenter_stats_reply_t *obj,
    uint32_t subtype);
extern void of_experimenter_stats_reply_subtype_get(
    of_experimenter_stats_reply_t *obj,
    uint32_t *subtype);

extern int WARN_UNUSED_RESULT of_experimenter_stats_reply_data_set(
    of_experimenter_stats_reply_t *obj,
    of_octets_t *data);
extern void of_experimenter_stats_reply_data_get(
    of_experimenter_stats_reply_t *obj,
    of_octets_t *data);

/* Unified accessor functions for of_experimenter_stats_request */

extern void of_experimenter_stats_request_xid_set(
    of_experimenter_stats_request_t *obj,
    uint32_t xid);
extern void of_experimenter_stats_request_xid_get(
    of_experimenter_stats_request_t *obj,
    uint32_t *xid);

extern void of_experimenter_stats_request_flags_set(
    of_experimenter_stats_request_t *obj,
    uint16_t flags);
extern void of_experimenter_stats_request_flags_get(
    of_experimenter_stats_request_t *obj,
    uint16_t *flags);

extern void of_experimenter_stats_request_experimenter_set(
    of_experimenter_stats_request_t *obj,
    uint32_t experimenter);
extern void of_experimenter_stats_request_experimenter_get(
    of_experimenter_stats_request_t *obj,
    uint32_t *experimenter);

extern void of_experimenter_stats_request_subtype_set(
    of_experimenter_stats_request_t *obj,
    uint32_t subtype);
extern void of_experimenter_stats_request_subtype_get(
    of_experimenter_stats_request_t *obj,
    uint32_t *subtype);

extern int WARN_UNUSED_RESULT of_experimenter_stats_request_data_set(
    of_experimenter_stats_request_t *obj,
    of_octets_t *data);
extern void of_experimenter_stats_request_data_get(
    of_experimenter_stats_request_t *obj,
    of_octets_t *data);

/* Unified accessor functions for of_features_reply */

extern void of_features_reply_xid_set(
    of_features_reply_t *obj,
    uint32_t xid);
extern void of_features_reply_xid_get(
    of_features_reply_t *obj,
    uint32_t *xid);

extern void of_features_reply_datapath_id_set(
    of_features_reply_t *obj,
    uint64_t datapath_id);
extern void of_features_reply_datapath_id_get(
    of_features_reply_t *obj,
    uint64_t *datapath_id);

extern void of_features_reply_n_buffers_set(
    of_features_reply_t *obj,
    uint32_t n_buffers);
extern void of_features_reply_n_buffers_get(
    of_features_reply_t *obj,
    uint32_t *n_buffers);

extern void of_features_reply_n_tables_set(
    of_features_reply_t *obj,
    uint8_t n_tables);
extern void of_features_reply_n_tables_get(
    of_features_reply_t *obj,
    uint8_t *n_tables);

extern void of_features_reply_auxiliary_id_set(
    of_features_reply_t *obj,
    uint8_t auxiliary_id);
extern void of_features_reply_auxiliary_id_get(
    of_features_reply_t *obj,
    uint8_t *auxiliary_id);

extern void of_features_reply_capabilities_set(
    of_features_reply_t *obj,
    uint32_t capabilities);
extern void of_features_reply_capabilities_get(
    of_features_reply_t *obj,
    uint32_t *capabilities);

extern void of_features_reply_reserved_set(
    of_features_reply_t *obj,
    uint32_t reserved);
extern void of_features_reply_reserved_get(
    of_features_reply_t *obj,
    uint32_t *reserved);

extern int WARN_UNUSED_RESULT of_features_reply_ports_set(
    of_features_reply_t *obj,
    of_list_port_desc_t *ports);
extern void of_features_reply_ports_bind(
    of_features_reply_t *obj,
    of_list_port_desc_t *ports);
extern of_list_port_desc_t *of_features_reply_ports_get(
    of_features_reply_t *obj);

extern void of_features_reply_actions_set(
    of_features_reply_t *obj,
    uint32_t actions);
extern void of_features_reply_actions_get(
    of_features_reply_t *obj,
    uint32_t *actions);

/* Unified accessor functions for of_features_request */

extern void of_features_request_xid_set(
    of_features_request_t *obj,
    uint32_t xid);
extern void of_features_request_xid_get(
    of_features_request_t *obj,
    uint32_t *xid);

/* Unified accessor functions for of_flow_add */

extern void of_flow_add_xid_set(
    of_flow_add_t *obj,
    uint32_t xid);
extern void of_flow_add_xid_get(
    of_flow_add_t *obj,
    uint32_t *xid);

extern void of_flow_add_cookie_set(
    of_flow_add_t *obj,
    uint64_t cookie);
extern void of_flow_add_cookie_get(
    of_flow_add_t *obj,
    uint64_t *cookie);

extern void of_flow_add_cookie_mask_set(
    of_flow_add_t *obj,
    uint64_t cookie_mask);
extern void of_flow_add_cookie_mask_get(
    of_flow_add_t *obj,
    uint64_t *cookie_mask);

extern void of_flow_add_table_id_set(
    of_flow_add_t *obj,
    uint8_t table_id);
extern void of_flow_add_table_id_get(
    of_flow_add_t *obj,
    uint8_t *table_id);

extern void of_flow_add_idle_timeout_set(
    of_flow_add_t *obj,
    uint16_t idle_timeout);
extern void of_flow_add_idle_timeout_get(
    of_flow_add_t *obj,
    uint16_t *idle_timeout);

extern void of_flow_add_hard_timeout_set(
    of_flow_add_t *obj,
    uint16_t hard_timeout);
extern void of_flow_add_hard_timeout_get(
    of_flow_add_t *obj,
    uint16_t *hard_timeout);

extern void of_flow_add_priority_set(
    of_flow_add_t *obj,
    uint16_t priority);
extern void of_flow_add_priority_get(
    of_flow_add_t *obj,
    uint16_t *priority);

extern void of_flow_add_buffer_id_set(
    of_flow_add_t *obj,
    uint32_t buffer_id);
extern void of_flow_add_buffer_id_get(
    of_flow_add_t *obj,
    uint32_t *buffer_id);

extern void of_flow_add_out_port_set(
    of_flow_add_t *obj,
    of_port_no_t out_port);
extern void of_flow_add_out_port_get(
    of_flow_add_t *obj,
    of_port_no_t *out_port);

extern void of_flow_add_out_group_set(
    of_flow_add_t *obj,
    uint32_t out_group);
extern void of_flow_add_out_group_get(
    of_flow_add_t *obj,
    uint32_t *out_group);

extern void of_flow_add_flags_set(
    of_flow_add_t *obj,
    uint16_t flags);
extern void of_flow_add_flags_get(
    of_flow_add_t *obj,
    uint16_t *flags);

extern int WARN_UNUSED_RESULT of_flow_add_match_set(
    of_flow_add_t *obj,
    of_match_t *match);
extern int WARN_UNUSED_RESULT of_flow_add_match_get(
    of_flow_add_t *obj,
    of_match_t *match);

extern int WARN_UNUSED_RESULT of_flow_add_instructions_set(
    of_flow_add_t *obj,
    of_list_instruction_t *instructions);
extern void of_flow_add_instructions_bind(
    of_flow_add_t *obj,
    of_list_instruction_t *instructions);
extern of_list_instruction_t *of_flow_add_instructions_get(
    of_flow_add_t *obj);

extern int WARN_UNUSED_RESULT of_flow_add_actions_set(
    of_flow_add_t *obj,
    of_list_action_t *actions);
extern void of_flow_add_actions_bind(
    of_flow_add_t *obj,
    of_list_action_t *actions);
extern of_list_action_t *of_flow_add_actions_get(
    of_flow_add_t *obj);

/* Unified accessor functions for of_flow_delete */

extern void of_flow_delete_xid_set(
    of_flow_delete_t *obj,
    uint32_t xid);
extern void of_flow_delete_xid_get(
    of_flow_delete_t *obj,
    uint32_t *xid);

extern void of_flow_delete_cookie_set(
    of_flow_delete_t *obj,
    uint64_t cookie);
extern void of_flow_delete_cookie_get(
    of_flow_delete_t *obj,
    uint64_t *cookie);

extern void of_flow_delete_cookie_mask_set(
    of_flow_delete_t *obj,
    uint64_t cookie_mask);
extern void of_flow_delete_cookie_mask_get(
    of_flow_delete_t *obj,
    uint64_t *cookie_mask);

extern void of_flow_delete_table_id_set(
    of_flow_delete_t *obj,
    uint8_t table_id);
extern void of_flow_delete_table_id_get(
    of_flow_delete_t *obj,
    uint8_t *table_id);

extern void of_flow_delete_idle_timeout_set(
    of_flow_delete_t *obj,
    uint16_t idle_timeout);
extern void of_flow_delete_idle_timeout_get(
    of_flow_delete_t *obj,
    uint16_t *idle_timeout);

extern void of_flow_delete_hard_timeout_set(
    of_flow_delete_t *obj,
    uint16_t hard_timeout);
extern void of_flow_delete_hard_timeout_get(
    of_flow_delete_t *obj,
    uint16_t *hard_timeout);

extern void of_flow_delete_priority_set(
    of_flow_delete_t *obj,
    uint16_t priority);
extern void of_flow_delete_priority_get(
    of_flow_delete_t *obj,
    uint16_t *priority);

extern void of_flow_delete_buffer_id_set(
    of_flow_delete_t *obj,
    uint32_t buffer_id);
extern void of_flow_delete_buffer_id_get(
    of_flow_delete_t *obj,
    uint32_t *buffer_id);

extern void of_flow_delete_out_port_set(
    of_flow_delete_t *obj,
    of_port_no_t out_port);
extern void of_flow_delete_out_port_get(
    of_flow_delete_t *obj,
    of_port_no_t *out_port);

extern void of_flow_delete_out_group_set(
    of_flow_delete_t *obj,
    uint32_t out_group);
extern void of_flow_delete_out_group_get(
    of_flow_delete_t *obj,
    uint32_t *out_group);

extern void of_flow_delete_flags_set(
    of_flow_delete_t *obj,
    uint16_t flags);
extern void of_flow_delete_flags_get(
    of_flow_delete_t *obj,
    uint16_t *flags);

extern int WARN_UNUSED_RESULT of_flow_delete_match_set(
    of_flow_delete_t *obj,
    of_match_t *match);
extern int WARN_UNUSED_RESULT of_flow_delete_match_get(
    of_flow_delete_t *obj,
    of_match_t *match);

extern int WARN_UNUSED_RESULT of_flow_delete_instructions_set(
    of_flow_delete_t *obj,
    of_list_instruction_t *instructions);
extern void of_flow_delete_instructions_bind(
    of_flow_delete_t *obj,
    of_list_instruction_t *instructions);
extern of_list_instruction_t *of_flow_delete_instructions_get(
    of_flow_delete_t *obj);

extern int WARN_UNUSED_RESULT of_flow_delete_actions_set(
    of_flow_delete_t *obj,
    of_list_action_t *actions);
extern void of_flow_delete_actions_bind(
    of_flow_delete_t *obj,
    of_list_action_t *actions);
extern of_list_action_t *of_flow_delete_actions_get(
    of_flow_delete_t *obj);

/* Unified accessor functions for of_flow_delete_strict */

extern void of_flow_delete_strict_xid_set(
    of_flow_delete_strict_t *obj,
    uint32_t xid);
extern void of_flow_delete_strict_xid_get(
    of_flow_delete_strict_t *obj,
    uint32_t *xid);

extern void of_flow_delete_strict_cookie_set(
    of_flow_delete_strict_t *obj,
    uint64_t cookie);
extern void of_flow_delete_strict_cookie_get(
    of_flow_delete_strict_t *obj,
    uint64_t *cookie);

extern void of_flow_delete_strict_cookie_mask_set(
    of_flow_delete_strict_t *obj,
    uint64_t cookie_mask);
extern void of_flow_delete_strict_cookie_mask_get(
    of_flow_delete_strict_t *obj,
    uint64_t *cookie_mask);

extern void of_flow_delete_strict_table_id_set(
    of_flow_delete_strict_t *obj,
    uint8_t table_id);
extern void of_flow_delete_strict_table_id_get(
    of_flow_delete_strict_t *obj,
    uint8_t *table_id);

extern void of_flow_delete_strict_idle_timeout_set(
    of_flow_delete_strict_t *obj,
    uint16_t idle_timeout);
extern void of_flow_delete_strict_idle_timeout_get(
    of_flow_delete_strict_t *obj,
    uint16_t *idle_timeout);

extern void of_flow_delete_strict_hard_timeout_set(
    of_flow_delete_strict_t *obj,
    uint16_t hard_timeout);
extern void of_flow_delete_strict_hard_timeout_get(
    of_flow_delete_strict_t *obj,
    uint16_t *hard_timeout);

extern void of_flow_delete_strict_priority_set(
    of_flow_delete_strict_t *obj,
    uint16_t priority);
extern void of_flow_delete_strict_priority_get(
    of_flow_delete_strict_t *obj,
    uint16_t *priority);

extern void of_flow_delete_strict_buffer_id_set(
    of_flow_delete_strict_t *obj,
    uint32_t buffer_id);
extern void of_flow_delete_strict_buffer_id_get(
    of_flow_delete_strict_t *obj,
    uint32_t *buffer_id);

extern void of_flow_delete_strict_out_port_set(
    of_flow_delete_strict_t *obj,
    of_port_no_t out_port);
extern void of_flow_delete_strict_out_port_get(
    of_flow_delete_strict_t *obj,
    of_port_no_t *out_port);

extern void of_flow_delete_strict_out_group_set(
    of_flow_delete_strict_t *obj,
    uint32_t out_group);
extern void of_flow_delete_strict_out_group_get(
    of_flow_delete_strict_t *obj,
    uint32_t *out_group);

extern void of_flow_delete_strict_flags_set(
    of_flow_delete_strict_t *obj,
    uint16_t flags);
extern void of_flow_delete_strict_flags_get(
    of_flow_delete_strict_t *obj,
    uint16_t *flags);

extern int WARN_UNUSED_RESULT of_flow_delete_strict_match_set(
    of_flow_delete_strict_t *obj,
    of_match_t *match);
extern int WARN_UNUSED_RESULT of_flow_delete_strict_match_get(
    of_flow_delete_strict_t *obj,
    of_match_t *match);

extern int WARN_UNUSED_RESULT of_flow_delete_strict_instructions_set(
    of_flow_delete_strict_t *obj,
    of_list_instruction_t *instructions);
extern void of_flow_delete_strict_instructions_bind(
    of_flow_delete_strict_t *obj,
    of_list_instruction_t *instructions);
extern of_list_instruction_t *of_flow_delete_strict_instructions_get(
    of_flow_delete_strict_t *obj);

extern int WARN_UNUSED_RESULT of_flow_delete_strict_actions_set(
    of_flow_delete_strict_t *obj,
    of_list_action_t *actions);
extern void of_flow_delete_strict_actions_bind(
    of_flow_delete_strict_t *obj,
    of_list_action_t *actions);
extern of_list_action_t *of_flow_delete_strict_actions_get(
    of_flow_delete_strict_t *obj);

/* Unified accessor functions for of_flow_mod */

extern void of_flow_mod_xid_set(
    of_flow_mod_t *obj,
    uint32_t xid);
extern void of_flow_mod_xid_get(
    of_flow_mod_t *obj,
    uint32_t *xid);

extern void of_flow_mod_cookie_set(
    of_flow_mod_t *obj,
    uint64_t cookie);
extern void of_flow_mod_cookie_get(
    of_flow_mod_t *obj,
    uint64_t *cookie);

extern void of_flow_mod_cookie_mask_set(
    of_flow_mod_t *obj,
    uint64_t cookie_mask);
extern void of_flow_mod_cookie_mask_get(
    of_flow_mod_t *obj,
    uint64_t *cookie_mask);

extern void of_flow_mod_table_id_set(
    of_flow_mod_t *obj,
    uint8_t table_id);
extern void of_flow_mod_table_id_get(
    of_flow_mod_t *obj,
    uint8_t *table_id);

extern void of_flow_mod_idle_timeout_set(
    of_flow_mod_t *obj,
    uint16_t idle_timeout);
extern void of_flow_mod_idle_timeout_get(
    of_flow_mod_t *obj,
    uint16_t *idle_timeout);

extern void of_flow_mod_hard_timeout_set(
    of_flow_mod_t *obj,
    uint16_t hard_timeout);
extern void of_flow_mod_hard_timeout_get(
    of_flow_mod_t *obj,
    uint16_t *hard_timeout);

extern void of_flow_mod_priority_set(
    of_flow_mod_t *obj,
    uint16_t priority);
extern void of_flow_mod_priority_get(
    of_flow_mod_t *obj,
    uint16_t *priority);

extern void of_flow_mod_buffer_id_set(
    of_flow_mod_t *obj,
    uint32_t buffer_id);
extern void of_flow_mod_buffer_id_get(
    of_flow_mod_t *obj,
    uint32_t *buffer_id);

extern void of_flow_mod_out_port_set(
    of_flow_mod_t *obj,
    of_port_no_t out_port);
extern void of_flow_mod_out_port_get(
    of_flow_mod_t *obj,
    of_port_no_t *out_port);

extern void of_flow_mod_out_group_set(
    of_flow_mod_t *obj,
    uint32_t out_group);
extern void of_flow_mod_out_group_get(
    of_flow_mod_t *obj,
    uint32_t *out_group);

extern void of_flow_mod_flags_set(
    of_flow_mod_t *obj,
    uint16_t flags);
extern void of_flow_mod_flags_get(
    of_flow_mod_t *obj,
    uint16_t *flags);

extern int WARN_UNUSED_RESULT of_flow_mod_match_set(
    of_flow_mod_t *obj,
    of_match_t *match);
extern int WARN_UNUSED_RESULT of_flow_mod_match_get(
    of_flow_mod_t *obj,
    of_match_t *match);

extern int WARN_UNUSED_RESULT of_flow_mod_instructions_set(
    of_flow_mod_t *obj,
    of_list_instruction_t *instructions);
extern void of_flow_mod_instructions_bind(
    of_flow_mod_t *obj,
    of_list_instruction_t *instructions);
extern of_list_instruction_t *of_flow_mod_instructions_get(
    of_flow_mod_t *obj);

extern int WARN_UNUSED_RESULT of_flow_mod_actions_set(
    of_flow_mod_t *obj,
    of_list_action_t *actions);
extern void of_flow_mod_actions_bind(
    of_flow_mod_t *obj,
    of_list_action_t *actions);
extern of_list_action_t *of_flow_mod_actions_get(
    of_flow_mod_t *obj);

/* Unified accessor functions for of_flow_mod_failed_error_msg */

extern void of_flow_mod_failed_error_msg_xid_set(
    of_flow_mod_failed_error_msg_t *obj,
    uint32_t xid);
extern void of_flow_mod_failed_error_msg_xid_get(
    of_flow_mod_failed_error_msg_t *obj,
    uint32_t *xid);

extern void of_flow_mod_failed_error_msg_code_set(
    of_flow_mod_failed_error_msg_t *obj,
    uint16_t code);
extern void of_flow_mod_failed_error_msg_code_get(
    of_flow_mod_failed_error_msg_t *obj,
    uint16_t *code);

extern int WARN_UNUSED_RESULT of_flow_mod_failed_error_msg_data_set(
    of_flow_mod_failed_error_msg_t *obj,
    of_octets_t *data);
extern void of_flow_mod_failed_error_msg_data_get(
    of_flow_mod_failed_error_msg_t *obj,
    of_octets_t *data);

/* Unified accessor functions for of_flow_modify */

extern void of_flow_modify_xid_set(
    of_flow_modify_t *obj,
    uint32_t xid);
extern void of_flow_modify_xid_get(
    of_flow_modify_t *obj,
    uint32_t *xid);

extern void of_flow_modify_cookie_set(
    of_flow_modify_t *obj,
    uint64_t cookie);
extern void of_flow_modify_cookie_get(
    of_flow_modify_t *obj,
    uint64_t *cookie);

extern void of_flow_modify_cookie_mask_set(
    of_flow_modify_t *obj,
    uint64_t cookie_mask);
extern void of_flow_modify_cookie_mask_get(
    of_flow_modify_t *obj,
    uint64_t *cookie_mask);

extern void of_flow_modify_table_id_set(
    of_flow_modify_t *obj,
    uint8_t table_id);
extern void of_flow_modify_table_id_get(
    of_flow_modify_t *obj,
    uint8_t *table_id);

extern void of_flow_modify_idle_timeout_set(
    of_flow_modify_t *obj,
    uint16_t idle_timeout);
extern void of_flow_modify_idle_timeout_get(
    of_flow_modify_t *obj,
    uint16_t *idle_timeout);

extern void of_flow_modify_hard_timeout_set(
    of_flow_modify_t *obj,
    uint16_t hard_timeout);
extern void of_flow_modify_hard_timeout_get(
    of_flow_modify_t *obj,
    uint16_t *hard_timeout);

extern void of_flow_modify_priority_set(
    of_flow_modify_t *obj,
    uint16_t priority);
extern void of_flow_modify_priority_get(
    of_flow_modify_t *obj,
    uint16_t *priority);

extern void of_flow_modify_buffer_id_set(
    of_flow_modify_t *obj,
    uint32_t buffer_id);
extern void of_flow_modify_buffer_id_get(
    of_flow_modify_t *obj,
    uint32_t *buffer_id);

extern void of_flow_modify_out_port_set(
    of_flow_modify_t *obj,
    of_port_no_t out_port);
extern void of_flow_modify_out_port_get(
    of_flow_modify_t *obj,
    of_port_no_t *out_port);

extern void of_flow_modify_out_group_set(
    of_flow_modify_t *obj,
    uint32_t out_group);
extern void of_flow_modify_out_group_get(
    of_flow_modify_t *obj,
    uint32_t *out_group);

extern void of_flow_modify_flags_set(
    of_flow_modify_t *obj,
    uint16_t flags);
extern void of_flow_modify_flags_get(
    of_flow_modify_t *obj,
    uint16_t *flags);

extern int WARN_UNUSED_RESULT of_flow_modify_match_set(
    of_flow_modify_t *obj,
    of_match_t *match);
extern int WARN_UNUSED_RESULT of_flow_modify_match_get(
    of_flow_modify_t *obj,
    of_match_t *match);

extern int WARN_UNUSED_RESULT of_flow_modify_instructions_set(
    of_flow_modify_t *obj,
    of_list_instruction_t *instructions);
extern void of_flow_modify_instructions_bind(
    of_flow_modify_t *obj,
    of_list_instruction_t *instructions);
extern of_list_instruction_t *of_flow_modify_instructions_get(
    of_flow_modify_t *obj);

extern int WARN_UNUSED_RESULT of_flow_modify_actions_set(
    of_flow_modify_t *obj,
    of_list_action_t *actions);
extern void of_flow_modify_actions_bind(
    of_flow_modify_t *obj,
    of_list_action_t *actions);
extern of_list_action_t *of_flow_modify_actions_get(
    of_flow_modify_t *obj);

/* Unified accessor functions for of_flow_modify_strict */

extern void of_flow_modify_strict_xid_set(
    of_flow_modify_strict_t *obj,
    uint32_t xid);
extern void of_flow_modify_strict_xid_get(
    of_flow_modify_strict_t *obj,
    uint32_t *xid);

extern void of_flow_modify_strict_cookie_set(
    of_flow_modify_strict_t *obj,
    uint64_t cookie);
extern void of_flow_modify_strict_cookie_get(
    of_flow_modify_strict_t *obj,
    uint64_t *cookie);

extern void of_flow_modify_strict_cookie_mask_set(
    of_flow_modify_strict_t *obj,
    uint64_t cookie_mask);
extern void of_flow_modify_strict_cookie_mask_get(
    of_flow_modify_strict_t *obj,
    uint64_t *cookie_mask);

extern void of_flow_modify_strict_table_id_set(
    of_flow_modify_strict_t *obj,
    uint8_t table_id);
extern void of_flow_modify_strict_table_id_get(
    of_flow_modify_strict_t *obj,
    uint8_t *table_id);

extern void of_flow_modify_strict_idle_timeout_set(
    of_flow_modify_strict_t *obj,
    uint16_t idle_timeout);
extern void of_flow_modify_strict_idle_timeout_get(
    of_flow_modify_strict_t *obj,
    uint16_t *idle_timeout);

extern void of_flow_modify_strict_hard_timeout_set(
    of_flow_modify_strict_t *obj,
    uint16_t hard_timeout);
extern void of_flow_modify_strict_hard_timeout_get(
    of_flow_modify_strict_t *obj,
    uint16_t *hard_timeout);

extern void of_flow_modify_strict_priority_set(
    of_flow_modify_strict_t *obj,
    uint16_t priority);
extern void of_flow_modify_strict_priority_get(
    of_flow_modify_strict_t *obj,
    uint16_t *priority);

extern void of_flow_modify_strict_buffer_id_set(
    of_flow_modify_strict_t *obj,
    uint32_t buffer_id);
extern void of_flow_modify_strict_buffer_id_get(
    of_flow_modify_strict_t *obj,
    uint32_t *buffer_id);

extern void of_flow_modify_strict_out_port_set(
    of_flow_modify_strict_t *obj,
    of_port_no_t out_port);
extern void of_flow_modify_strict_out_port_get(
    of_flow_modify_strict_t *obj,
    of_port_no_t *out_port);

extern void of_flow_modify_strict_out_group_set(
    of_flow_modify_strict_t *obj,
    uint32_t out_group);
extern void of_flow_modify_strict_out_group_get(
    of_flow_modify_strict_t *obj,
    uint32_t *out_group);

extern void of_flow_modify_strict_flags_set(
    of_flow_modify_strict_t *obj,
    uint16_t flags);
extern void of_flow_modify_strict_flags_get(
    of_flow_modify_strict_t *obj,
    uint16_t *flags);

extern int WARN_UNUSED_RESULT of_flow_modify_strict_match_set(
    of_flow_modify_strict_t *obj,
    of_match_t *match);
extern int WARN_UNUSED_RESULT of_flow_modify_strict_match_get(
    of_flow_modify_strict_t *obj,
    of_match_t *match);

extern int WARN_UNUSED_RESULT of_flow_modify_strict_instructions_set(
    of_flow_modify_strict_t *obj,
    of_list_instruction_t *instructions);
extern void of_flow_modify_strict_instructions_bind(
    of_flow_modify_strict_t *obj,
    of_list_instruction_t *instructions);
extern of_list_instruction_t *of_flow_modify_strict_instructions_get(
    of_flow_modify_strict_t *obj);

extern int WARN_UNUSED_RESULT of_flow_modify_strict_actions_set(
    of_flow_modify_strict_t *obj,
    of_list_action_t *actions);
extern void of_flow_modify_strict_actions_bind(
    of_flow_modify_strict_t *obj,
    of_list_action_t *actions);
extern of_list_action_t *of_flow_modify_strict_actions_get(
    of_flow_modify_strict_t *obj);

/* Unified accessor functions for of_flow_removed */

extern void of_flow_removed_xid_set(
    of_flow_removed_t *obj,
    uint32_t xid);
extern void of_flow_removed_xid_get(
    of_flow_removed_t *obj,
    uint32_t *xid);

extern void of_flow_removed_cookie_set(
    of_flow_removed_t *obj,
    uint64_t cookie);
extern void of_flow_removed_cookie_get(
    of_flow_removed_t *obj,
    uint64_t *cookie);

extern void of_flow_removed_priority_set(
    of_flow_removed_t *obj,
    uint16_t priority);
extern void of_flow_removed_priority_get(
    of_flow_removed_t *obj,
    uint16_t *priority);

extern void of_flow_removed_reason_set(
    of_flow_removed_t *obj,
    uint8_t reason);
extern void of_flow_removed_reason_get(
    of_flow_removed_t *obj,
    uint8_t *reason);

extern void of_flow_removed_table_id_set(
    of_flow_removed_t *obj,
    uint8_t table_id);
extern void of_flow_removed_table_id_get(
    of_flow_removed_t *obj,
    uint8_t *table_id);

extern void of_flow_removed_duration_sec_set(
    of_flow_removed_t *obj,
    uint32_t duration_sec);
extern void of_flow_removed_duration_sec_get(
    of_flow_removed_t *obj,
    uint32_t *duration_sec);

extern void of_flow_removed_duration_nsec_set(
    of_flow_removed_t *obj,
    uint32_t duration_nsec);
extern void of_flow_removed_duration_nsec_get(
    of_flow_removed_t *obj,
    uint32_t *duration_nsec);

extern void of_flow_removed_idle_timeout_set(
    of_flow_removed_t *obj,
    uint16_t idle_timeout);
extern void of_flow_removed_idle_timeout_get(
    of_flow_removed_t *obj,
    uint16_t *idle_timeout);

extern void of_flow_removed_hard_timeout_set(
    of_flow_removed_t *obj,
    uint16_t hard_timeout);
extern void of_flow_removed_hard_timeout_get(
    of_flow_removed_t *obj,
    uint16_t *hard_timeout);

extern void of_flow_removed_packet_count_set(
    of_flow_removed_t *obj,
    uint64_t packet_count);
extern void of_flow_removed_packet_count_get(
    of_flow_removed_t *obj,
    uint64_t *packet_count);

extern void of_flow_removed_byte_count_set(
    of_flow_removed_t *obj,
    uint64_t byte_count);
extern void of_flow_removed_byte_count_get(
    of_flow_removed_t *obj,
    uint64_t *byte_count);

extern int WARN_UNUSED_RESULT of_flow_removed_match_set(
    of_flow_removed_t *obj,
    of_match_t *match);
extern int WARN_UNUSED_RESULT of_flow_removed_match_get(
    of_flow_removed_t *obj,
    of_match_t *match);

/* Unified accessor functions for of_flow_stats_reply */

extern void of_flow_stats_reply_xid_set(
    of_flow_stats_reply_t *obj,
    uint32_t xid);
extern void of_flow_stats_reply_xid_get(
    of_flow_stats_reply_t *obj,
    uint32_t *xid);

extern void of_flow_stats_reply_flags_set(
    of_flow_stats_reply_t *obj,
    uint16_t flags);
extern void of_flow_stats_reply_flags_get(
    of_flow_stats_reply_t *obj,
    uint16_t *flags);

extern int WARN_UNUSED_RESULT of_flow_stats_reply_entries_set(
    of_flow_stats_reply_t *obj,
    of_list_flow_stats_entry_t *entries);
extern void of_flow_stats_reply_entries_bind(
    of_flow_stats_reply_t *obj,
    of_list_flow_stats_entry_t *entries);
extern of_list_flow_stats_entry_t *of_flow_stats_reply_entries_get(
    of_flow_stats_reply_t *obj);

/* Unified accessor functions for of_flow_stats_request */

extern void of_flow_stats_request_xid_set(
    of_flow_stats_request_t *obj,
    uint32_t xid);
extern void of_flow_stats_request_xid_get(
    of_flow_stats_request_t *obj,
    uint32_t *xid);

extern void of_flow_stats_request_flags_set(
    of_flow_stats_request_t *obj,
    uint16_t flags);
extern void of_flow_stats_request_flags_get(
    of_flow_stats_request_t *obj,
    uint16_t *flags);

extern void of_flow_stats_request_table_id_set(
    of_flow_stats_request_t *obj,
    uint8_t table_id);
extern void of_flow_stats_request_table_id_get(
    of_flow_stats_request_t *obj,
    uint8_t *table_id);

extern void of_flow_stats_request_out_port_set(
    of_flow_stats_request_t *obj,
    of_port_no_t out_port);
extern void of_flow_stats_request_out_port_get(
    of_flow_stats_request_t *obj,
    of_port_no_t *out_port);

extern void of_flow_stats_request_out_group_set(
    of_flow_stats_request_t *obj,
    uint32_t out_group);
extern void of_flow_stats_request_out_group_get(
    of_flow_stats_request_t *obj,
    uint32_t *out_group);

extern void of_flow_stats_request_cookie_set(
    of_flow_stats_request_t *obj,
    uint64_t cookie);
extern void of_flow_stats_request_cookie_get(
    of_flow_stats_request_t *obj,
    uint64_t *cookie);

extern void of_flow_stats_request_cookie_mask_set(
    of_flow_stats_request_t *obj,
    uint64_t cookie_mask);
extern void of_flow_stats_request_cookie_mask_get(
    of_flow_stats_request_t *obj,
    uint64_t *cookie_mask);

extern int WARN_UNUSED_RESULT of_flow_stats_request_match_set(
    of_flow_stats_request_t *obj,
    of_match_t *match);
extern int WARN_UNUSED_RESULT of_flow_stats_request_match_get(
    of_flow_stats_request_t *obj,
    of_match_t *match);

/* Unified accessor functions for of_get_config_reply */

extern void of_get_config_reply_xid_set(
    of_get_config_reply_t *obj,
    uint32_t xid);
extern void of_get_config_reply_xid_get(
    of_get_config_reply_t *obj,
    uint32_t *xid);

extern void of_get_config_reply_flags_set(
    of_get_config_reply_t *obj,
    uint16_t flags);
extern void of_get_config_reply_flags_get(
    of_get_config_reply_t *obj,
    uint16_t *flags);

extern void of_get_config_reply_miss_send_len_set(
    of_get_config_reply_t *obj,
    uint16_t miss_send_len);
extern void of_get_config_reply_miss_send_len_get(
    of_get_config_reply_t *obj,
    uint16_t *miss_send_len);

/* Unified accessor functions for of_get_config_request */

extern void of_get_config_request_xid_set(
    of_get_config_request_t *obj,
    uint32_t xid);
extern void of_get_config_request_xid_get(
    of_get_config_request_t *obj,
    uint32_t *xid);

/* Unified accessor functions for of_group_add */

extern void of_group_add_xid_set(
    of_group_add_t *obj,
    uint32_t xid);
extern void of_group_add_xid_get(
    of_group_add_t *obj,
    uint32_t *xid);

extern void of_group_add_group_type_set(
    of_group_add_t *obj,
    uint8_t group_type);
extern void of_group_add_group_type_get(
    of_group_add_t *obj,
    uint8_t *group_type);

extern void of_group_add_group_id_set(
    of_group_add_t *obj,
    uint32_t group_id);
extern void of_group_add_group_id_get(
    of_group_add_t *obj,
    uint32_t *group_id);

extern int WARN_UNUSED_RESULT of_group_add_buckets_set(
    of_group_add_t *obj,
    of_list_bucket_t *buckets);
extern void of_group_add_buckets_bind(
    of_group_add_t *obj,
    of_list_bucket_t *buckets);
extern of_list_bucket_t *of_group_add_buckets_get(
    of_group_add_t *obj);

/* Unified accessor functions for of_group_delete */

extern void of_group_delete_xid_set(
    of_group_delete_t *obj,
    uint32_t xid);
extern void of_group_delete_xid_get(
    of_group_delete_t *obj,
    uint32_t *xid);

extern void of_group_delete_group_type_set(
    of_group_delete_t *obj,
    uint8_t group_type);
extern void of_group_delete_group_type_get(
    of_group_delete_t *obj,
    uint8_t *group_type);

extern void of_group_delete_group_id_set(
    of_group_delete_t *obj,
    uint32_t group_id);
extern void of_group_delete_group_id_get(
    of_group_delete_t *obj,
    uint32_t *group_id);

extern int WARN_UNUSED_RESULT of_group_delete_buckets_set(
    of_group_delete_t *obj,
    of_list_bucket_t *buckets);
extern void of_group_delete_buckets_bind(
    of_group_delete_t *obj,
    of_list_bucket_t *buckets);
extern of_list_bucket_t *of_group_delete_buckets_get(
    of_group_delete_t *obj);

/* Unified accessor functions for of_group_desc_stats_reply */

extern void of_group_desc_stats_reply_xid_set(
    of_group_desc_stats_reply_t *obj,
    uint32_t xid);
extern void of_group_desc_stats_reply_xid_get(
    of_group_desc_stats_reply_t *obj,
    uint32_t *xid);

extern void of_group_desc_stats_reply_flags_set(
    of_group_desc_stats_reply_t *obj,
    uint16_t flags);
extern void of_group_desc_stats_reply_flags_get(
    of_group_desc_stats_reply_t *obj,
    uint16_t *flags);

extern int WARN_UNUSED_RESULT of_group_desc_stats_reply_entries_set(
    of_group_desc_stats_reply_t *obj,
    of_list_group_desc_stats_entry_t *entries);
extern void of_group_desc_stats_reply_entries_bind(
    of_group_desc_stats_reply_t *obj,
    of_list_group_desc_stats_entry_t *entries);
extern of_list_group_desc_stats_entry_t *of_group_desc_stats_reply_entries_get(
    of_group_desc_stats_reply_t *obj);

/* Unified accessor functions for of_group_desc_stats_request */

extern void of_group_desc_stats_request_xid_set(
    of_group_desc_stats_request_t *obj,
    uint32_t xid);
extern void of_group_desc_stats_request_xid_get(
    of_group_desc_stats_request_t *obj,
    uint32_t *xid);

extern void of_group_desc_stats_request_flags_set(
    of_group_desc_stats_request_t *obj,
    uint16_t flags);
extern void of_group_desc_stats_request_flags_get(
    of_group_desc_stats_request_t *obj,
    uint16_t *flags);

/* Unified accessor functions for of_group_features_stats_reply */

extern void of_group_features_stats_reply_xid_set(
    of_group_features_stats_reply_t *obj,
    uint32_t xid);
extern void of_group_features_stats_reply_xid_get(
    of_group_features_stats_reply_t *obj,
    uint32_t *xid);

extern void of_group_features_stats_reply_flags_set(
    of_group_features_stats_reply_t *obj,
    uint16_t flags);
extern void of_group_features_stats_reply_flags_get(
    of_group_features_stats_reply_t *obj,
    uint16_t *flags);

extern void of_group_features_stats_reply_types_set(
    of_group_features_stats_reply_t *obj,
    uint32_t types);
extern void of_group_features_stats_reply_types_get(
    of_group_features_stats_reply_t *obj,
    uint32_t *types);

extern void of_group_features_stats_reply_capabilities_set(
    of_group_features_stats_reply_t *obj,
    uint32_t capabilities);
extern void of_group_features_stats_reply_capabilities_get(
    of_group_features_stats_reply_t *obj,
    uint32_t *capabilities);

extern void of_group_features_stats_reply_max_groups_all_set(
    of_group_features_stats_reply_t *obj,
    uint32_t max_groups_all);
extern void of_group_features_stats_reply_max_groups_all_get(
    of_group_features_stats_reply_t *obj,
    uint32_t *max_groups_all);

extern void of_group_features_stats_reply_max_groups_select_set(
    of_group_features_stats_reply_t *obj,
    uint32_t max_groups_select);
extern void of_group_features_stats_reply_max_groups_select_get(
    of_group_features_stats_reply_t *obj,
    uint32_t *max_groups_select);

extern void of_group_features_stats_reply_max_groups_indirect_set(
    of_group_features_stats_reply_t *obj,
    uint32_t max_groups_indirect);
extern void of_group_features_stats_reply_max_groups_indirect_get(
    of_group_features_stats_reply_t *obj,
    uint32_t *max_groups_indirect);

extern void of_group_features_stats_reply_max_groups_ff_set(
    of_group_features_stats_reply_t *obj,
    uint32_t max_groups_ff);
extern void of_group_features_stats_reply_max_groups_ff_get(
    of_group_features_stats_reply_t *obj,
    uint32_t *max_groups_ff);

extern void of_group_features_stats_reply_actions_all_set(
    of_group_features_stats_reply_t *obj,
    uint32_t actions_all);
extern void of_group_features_stats_reply_actions_all_get(
    of_group_features_stats_reply_t *obj,
    uint32_t *actions_all);

extern void of_group_features_stats_reply_actions_select_set(
    of_group_features_stats_reply_t *obj,
    uint32_t actions_select);
extern void of_group_features_stats_reply_actions_select_get(
    of_group_features_stats_reply_t *obj,
    uint32_t *actions_select);

extern void of_group_features_stats_reply_actions_indirect_set(
    of_group_features_stats_reply_t *obj,
    uint32_t actions_indirect);
extern void of_group_features_stats_reply_actions_indirect_get(
    of_group_features_stats_reply_t *obj,
    uint32_t *actions_indirect);

extern void of_group_features_stats_reply_actions_ff_set(
    of_group_features_stats_reply_t *obj,
    uint32_t actions_ff);
extern void of_group_features_stats_reply_actions_ff_get(
    of_group_features_stats_reply_t *obj,
    uint32_t *actions_ff);

/* Unified accessor functions for of_group_features_stats_request */

extern void of_group_features_stats_request_xid_set(
    of_group_features_stats_request_t *obj,
    uint32_t xid);
extern void of_group_features_stats_request_xid_get(
    of_group_features_stats_request_t *obj,
    uint32_t *xid);

extern void of_group_features_stats_request_flags_set(
    of_group_features_stats_request_t *obj,
    uint16_t flags);
extern void of_group_features_stats_request_flags_get(
    of_group_features_stats_request_t *obj,
    uint16_t *flags);

/* Unified accessor functions for of_group_mod */

extern void of_group_mod_xid_set(
    of_group_mod_t *obj,
    uint32_t xid);
extern void of_group_mod_xid_get(
    of_group_mod_t *obj,
    uint32_t *xid);

extern void of_group_mod_group_type_set(
    of_group_mod_t *obj,
    uint8_t group_type);
extern void of_group_mod_group_type_get(
    of_group_mod_t *obj,
    uint8_t *group_type);

extern void of_group_mod_group_id_set(
    of_group_mod_t *obj,
    uint32_t group_id);
extern void of_group_mod_group_id_get(
    of_group_mod_t *obj,
    uint32_t *group_id);

extern int WARN_UNUSED_RESULT of_group_mod_buckets_set(
    of_group_mod_t *obj,
    of_list_bucket_t *buckets);
extern void of_group_mod_buckets_bind(
    of_group_mod_t *obj,
    of_list_bucket_t *buckets);
extern of_list_bucket_t *of_group_mod_buckets_get(
    of_group_mod_t *obj);

/* Unified accessor functions for of_group_mod_failed_error_msg */

extern void of_group_mod_failed_error_msg_xid_set(
    of_group_mod_failed_error_msg_t *obj,
    uint32_t xid);
extern void of_group_mod_failed_error_msg_xid_get(
    of_group_mod_failed_error_msg_t *obj,
    uint32_t *xid);

extern void of_group_mod_failed_error_msg_code_set(
    of_group_mod_failed_error_msg_t *obj,
    uint16_t code);
extern void of_group_mod_failed_error_msg_code_get(
    of_group_mod_failed_error_msg_t *obj,
    uint16_t *code);

extern int WARN_UNUSED_RESULT of_group_mod_failed_error_msg_data_set(
    of_group_mod_failed_error_msg_t *obj,
    of_octets_t *data);
extern void of_group_mod_failed_error_msg_data_get(
    of_group_mod_failed_error_msg_t *obj,
    of_octets_t *data);

/* Unified accessor functions for of_group_modify */

extern void of_group_modify_xid_set(
    of_group_modify_t *obj,
    uint32_t xid);
extern void of_group_modify_xid_get(
    of_group_modify_t *obj,
    uint32_t *xid);

extern void of_group_modify_group_type_set(
    of_group_modify_t *obj,
    uint8_t group_type);
extern void of_group_modify_group_type_get(
    of_group_modify_t *obj,
    uint8_t *group_type);

extern void of_group_modify_group_id_set(
    of_group_modify_t *obj,
    uint32_t group_id);
extern void of_group_modify_group_id_get(
    of_group_modify_t *obj,
    uint32_t *group_id);

extern int WARN_UNUSED_RESULT of_group_modify_buckets_set(
    of_group_modify_t *obj,
    of_list_bucket_t *buckets);
extern void of_group_modify_buckets_bind(
    of_group_modify_t *obj,
    of_list_bucket_t *buckets);
extern of_list_bucket_t *of_group_modify_buckets_get(
    of_group_modify_t *obj);

/* Unified accessor functions for of_group_stats_reply */

extern void of_group_stats_reply_xid_set(
    of_group_stats_reply_t *obj,
    uint32_t xid);
extern void of_group_stats_reply_xid_get(
    of_group_stats_reply_t *obj,
    uint32_t *xid);

extern void of_group_stats_reply_flags_set(
    of_group_stats_reply_t *obj,
    uint16_t flags);
extern void of_group_stats_reply_flags_get(
    of_group_stats_reply_t *obj,
    uint16_t *flags);

extern int WARN_UNUSED_RESULT of_group_stats_reply_entries_set(
    of_group_stats_reply_t *obj,
    of_list_group_stats_entry_t *entries);
extern void of_group_stats_reply_entries_bind(
    of_group_stats_reply_t *obj,
    of_list_group_stats_entry_t *entries);
extern of_list_group_stats_entry_t *of_group_stats_reply_entries_get(
    of_group_stats_reply_t *obj);

/* Unified accessor functions for of_group_stats_request */

extern void of_group_stats_request_xid_set(
    of_group_stats_request_t *obj,
    uint32_t xid);
extern void of_group_stats_request_xid_get(
    of_group_stats_request_t *obj,
    uint32_t *xid);

extern void of_group_stats_request_flags_set(
    of_group_stats_request_t *obj,
    uint16_t flags);
extern void of_group_stats_request_flags_get(
    of_group_stats_request_t *obj,
    uint16_t *flags);

extern void of_group_stats_request_group_id_set(
    of_group_stats_request_t *obj,
    uint32_t group_id);
extern void of_group_stats_request_group_id_get(
    of_group_stats_request_t *obj,
    uint32_t *group_id);

/* Unified accessor functions for of_hello */

extern void of_hello_xid_set(
    of_hello_t *obj,
    uint32_t xid);
extern void of_hello_xid_get(
    of_hello_t *obj,
    uint32_t *xid);

extern int WARN_UNUSED_RESULT of_hello_elements_set(
    of_hello_t *obj,
    of_list_hello_elem_t *elements);
extern void of_hello_elements_bind(
    of_hello_t *obj,
    of_list_hello_elem_t *elements);
extern of_list_hello_elem_t *of_hello_elements_get(
    of_hello_t *obj);

/* Unified accessor functions for of_hello_failed_error_msg */

extern void of_hello_failed_error_msg_xid_set(
    of_hello_failed_error_msg_t *obj,
    uint32_t xid);
extern void of_hello_failed_error_msg_xid_get(
    of_hello_failed_error_msg_t *obj,
    uint32_t *xid);

extern void of_hello_failed_error_msg_code_set(
    of_hello_failed_error_msg_t *obj,
    uint16_t code);
extern void of_hello_failed_error_msg_code_get(
    of_hello_failed_error_msg_t *obj,
    uint16_t *code);

extern int WARN_UNUSED_RESULT of_hello_failed_error_msg_data_set(
    of_hello_failed_error_msg_t *obj,
    of_octets_t *data);
extern void of_hello_failed_error_msg_data_get(
    of_hello_failed_error_msg_t *obj,
    of_octets_t *data);

/* Unified accessor functions for of_meter_config_stats_reply */

extern void of_meter_config_stats_reply_xid_set(
    of_meter_config_stats_reply_t *obj,
    uint32_t xid);
extern void of_meter_config_stats_reply_xid_get(
    of_meter_config_stats_reply_t *obj,
    uint32_t *xid);

extern void of_meter_config_stats_reply_flags_set(
    of_meter_config_stats_reply_t *obj,
    uint16_t flags);
extern void of_meter_config_stats_reply_flags_get(
    of_meter_config_stats_reply_t *obj,
    uint16_t *flags);

extern int WARN_UNUSED_RESULT of_meter_config_stats_reply_entries_set(
    of_meter_config_stats_reply_t *obj,
    of_list_meter_band_t *entries);
extern void of_meter_config_stats_reply_entries_bind(
    of_meter_config_stats_reply_t *obj,
    of_list_meter_band_t *entries);
extern of_list_meter_band_t *of_meter_config_stats_reply_entries_get(
    of_meter_config_stats_reply_t *obj);

/* Unified accessor functions for of_meter_config_stats_request */

extern void of_meter_config_stats_request_xid_set(
    of_meter_config_stats_request_t *obj,
    uint32_t xid);
extern void of_meter_config_stats_request_xid_get(
    of_meter_config_stats_request_t *obj,
    uint32_t *xid);

extern void of_meter_config_stats_request_flags_set(
    of_meter_config_stats_request_t *obj,
    uint16_t flags);
extern void of_meter_config_stats_request_flags_get(
    of_meter_config_stats_request_t *obj,
    uint16_t *flags);

extern void of_meter_config_stats_request_meter_id_set(
    of_meter_config_stats_request_t *obj,
    uint32_t meter_id);
extern void of_meter_config_stats_request_meter_id_get(
    of_meter_config_stats_request_t *obj,
    uint32_t *meter_id);

/* Unified accessor functions for of_meter_features_stats_reply */

extern void of_meter_features_stats_reply_xid_set(
    of_meter_features_stats_reply_t *obj,
    uint32_t xid);
extern void of_meter_features_stats_reply_xid_get(
    of_meter_features_stats_reply_t *obj,
    uint32_t *xid);

extern void of_meter_features_stats_reply_flags_set(
    of_meter_features_stats_reply_t *obj,
    uint16_t flags);
extern void of_meter_features_stats_reply_flags_get(
    of_meter_features_stats_reply_t *obj,
    uint16_t *flags);

extern int WARN_UNUSED_RESULT of_meter_features_stats_reply_features_set(
    of_meter_features_stats_reply_t *obj,
    of_meter_features_t *features);
extern void of_meter_features_stats_reply_features_bind(
    of_meter_features_stats_reply_t *obj,
    of_meter_features_t *features);
extern of_meter_features_t *of_meter_features_stats_reply_features_get(
    of_meter_features_stats_reply_t *obj);

/* Unified accessor functions for of_meter_features_stats_request */

extern void of_meter_features_stats_request_xid_set(
    of_meter_features_stats_request_t *obj,
    uint32_t xid);
extern void of_meter_features_stats_request_xid_get(
    of_meter_features_stats_request_t *obj,
    uint32_t *xid);

extern void of_meter_features_stats_request_flags_set(
    of_meter_features_stats_request_t *obj,
    uint16_t flags);
extern void of_meter_features_stats_request_flags_get(
    of_meter_features_stats_request_t *obj,
    uint16_t *flags);

/* Unified accessor functions for of_meter_mod */

extern void of_meter_mod_xid_set(
    of_meter_mod_t *obj,
    uint32_t xid);
extern void of_meter_mod_xid_get(
    of_meter_mod_t *obj,
    uint32_t *xid);

extern void of_meter_mod_flags_set(
    of_meter_mod_t *obj,
    uint16_t flags);
extern void of_meter_mod_flags_get(
    of_meter_mod_t *obj,
    uint16_t *flags);

extern void of_meter_mod_meter_id_set(
    of_meter_mod_t *obj,
    uint32_t meter_id);
extern void of_meter_mod_meter_id_get(
    of_meter_mod_t *obj,
    uint32_t *meter_id);

extern int WARN_UNUSED_RESULT of_meter_mod_meters_set(
    of_meter_mod_t *obj,
    of_list_meter_band_t *meters);
extern void of_meter_mod_meters_bind(
    of_meter_mod_t *obj,
    of_list_meter_band_t *meters);
extern of_list_meter_band_t *of_meter_mod_meters_get(
    of_meter_mod_t *obj);

/* Unified accessor functions for of_meter_mod_failed_error_msg */

extern void of_meter_mod_failed_error_msg_xid_set(
    of_meter_mod_failed_error_msg_t *obj,
    uint32_t xid);
extern void of_meter_mod_failed_error_msg_xid_get(
    of_meter_mod_failed_error_msg_t *obj,
    uint32_t *xid);

extern void of_meter_mod_failed_error_msg_code_set(
    of_meter_mod_failed_error_msg_t *obj,
    uint16_t code);
extern void of_meter_mod_failed_error_msg_code_get(
    of_meter_mod_failed_error_msg_t *obj,
    uint16_t *code);

extern int WARN_UNUSED_RESULT of_meter_mod_failed_error_msg_data_set(
    of_meter_mod_failed_error_msg_t *obj,
    of_octets_t *data);
extern void of_meter_mod_failed_error_msg_data_get(
    of_meter_mod_failed_error_msg_t *obj,
    of_octets_t *data);

/* Unified accessor functions for of_meter_stats_reply */

extern void of_meter_stats_reply_xid_set(
    of_meter_stats_reply_t *obj,
    uint32_t xid);
extern void of_meter_stats_reply_xid_get(
    of_meter_stats_reply_t *obj,
    uint32_t *xid);

extern void of_meter_stats_reply_flags_set(
    of_meter_stats_reply_t *obj,
    uint16_t flags);
extern void of_meter_stats_reply_flags_get(
    of_meter_stats_reply_t *obj,
    uint16_t *flags);

extern int WARN_UNUSED_RESULT of_meter_stats_reply_entries_set(
    of_meter_stats_reply_t *obj,
    of_list_meter_stats_t *entries);
extern void of_meter_stats_reply_entries_bind(
    of_meter_stats_reply_t *obj,
    of_list_meter_stats_t *entries);
extern of_list_meter_stats_t *of_meter_stats_reply_entries_get(
    of_meter_stats_reply_t *obj);

/* Unified accessor functions for of_meter_stats_request */

extern void of_meter_stats_request_xid_set(
    of_meter_stats_request_t *obj,
    uint32_t xid);
extern void of_meter_stats_request_xid_get(
    of_meter_stats_request_t *obj,
    uint32_t *xid);

extern void of_meter_stats_request_flags_set(
    of_meter_stats_request_t *obj,
    uint16_t flags);
extern void of_meter_stats_request_flags_get(
    of_meter_stats_request_t *obj,
    uint16_t *flags);

extern void of_meter_stats_request_meter_id_set(
    of_meter_stats_request_t *obj,
    uint32_t meter_id);
extern void of_meter_stats_request_meter_id_get(
    of_meter_stats_request_t *obj,
    uint32_t *meter_id);

/* Unified accessor functions for of_nicira_controller_role_reply */

extern void of_nicira_controller_role_reply_xid_set(
    of_nicira_controller_role_reply_t *obj,
    uint32_t xid);
extern void of_nicira_controller_role_reply_xid_get(
    of_nicira_controller_role_reply_t *obj,
    uint32_t *xid);

extern void of_nicira_controller_role_reply_experimenter_set(
    of_nicira_controller_role_reply_t *obj,
    uint32_t experimenter);
extern void of_nicira_controller_role_reply_experimenter_get(
    of_nicira_controller_role_reply_t *obj,
    uint32_t *experimenter);

extern void of_nicira_controller_role_reply_subtype_set(
    of_nicira_controller_role_reply_t *obj,
    uint32_t subtype);
extern void of_nicira_controller_role_reply_subtype_get(
    of_nicira_controller_role_reply_t *obj,
    uint32_t *subtype);

extern void of_nicira_controller_role_reply_role_set(
    of_nicira_controller_role_reply_t *obj,
    uint32_t role);
extern void of_nicira_controller_role_reply_role_get(
    of_nicira_controller_role_reply_t *obj,
    uint32_t *role);

/* Unified accessor functions for of_nicira_controller_role_request */

extern void of_nicira_controller_role_request_xid_set(
    of_nicira_controller_role_request_t *obj,
    uint32_t xid);
extern void of_nicira_controller_role_request_xid_get(
    of_nicira_controller_role_request_t *obj,
    uint32_t *xid);

extern void of_nicira_controller_role_request_experimenter_set(
    of_nicira_controller_role_request_t *obj,
    uint32_t experimenter);
extern void of_nicira_controller_role_request_experimenter_get(
    of_nicira_controller_role_request_t *obj,
    uint32_t *experimenter);

extern void of_nicira_controller_role_request_subtype_set(
    of_nicira_controller_role_request_t *obj,
    uint32_t subtype);
extern void of_nicira_controller_role_request_subtype_get(
    of_nicira_controller_role_request_t *obj,
    uint32_t *subtype);

extern void of_nicira_controller_role_request_role_set(
    of_nicira_controller_role_request_t *obj,
    uint32_t role);
extern void of_nicira_controller_role_request_role_get(
    of_nicira_controller_role_request_t *obj,
    uint32_t *role);

/* Unified accessor functions for of_nicira_header */

extern void of_nicira_header_xid_set(
    of_nicira_header_t *obj,
    uint32_t xid);
extern void of_nicira_header_xid_get(
    of_nicira_header_t *obj,
    uint32_t *xid);

extern void of_nicira_header_experimenter_set(
    of_nicira_header_t *obj,
    uint32_t experimenter);
extern void of_nicira_header_experimenter_get(
    of_nicira_header_t *obj,
    uint32_t *experimenter);

extern void of_nicira_header_subtype_set(
    of_nicira_header_t *obj,
    uint32_t subtype);
extern void of_nicira_header_subtype_get(
    of_nicira_header_t *obj,
    uint32_t *subtype);

/* Unified accessor functions for of_packet_in */

extern void of_packet_in_xid_set(
    of_packet_in_t *obj,
    uint32_t xid);
extern void of_packet_in_xid_get(
    of_packet_in_t *obj,
    uint32_t *xid);

extern void of_packet_in_buffer_id_set(
    of_packet_in_t *obj,
    uint32_t buffer_id);
extern void of_packet_in_buffer_id_get(
    of_packet_in_t *obj,
    uint32_t *buffer_id);

extern void of_packet_in_total_len_set(
    of_packet_in_t *obj,
    uint16_t total_len);
extern void of_packet_in_total_len_get(
    of_packet_in_t *obj,
    uint16_t *total_len);

extern void of_packet_in_reason_set(
    of_packet_in_t *obj,
    uint8_t reason);
extern void of_packet_in_reason_get(
    of_packet_in_t *obj,
    uint8_t *reason);

extern void of_packet_in_table_id_set(
    of_packet_in_t *obj,
    uint8_t table_id);
extern void of_packet_in_table_id_get(
    of_packet_in_t *obj,
    uint8_t *table_id);

extern void of_packet_in_cookie_set(
    of_packet_in_t *obj,
    uint64_t cookie);
extern void of_packet_in_cookie_get(
    of_packet_in_t *obj,
    uint64_t *cookie);

extern int WARN_UNUSED_RESULT of_packet_in_match_set(
    of_packet_in_t *obj,
    of_match_t *match);
extern int WARN_UNUSED_RESULT of_packet_in_match_get(
    of_packet_in_t *obj,
    of_match_t *match);

extern int WARN_UNUSED_RESULT of_packet_in_data_set(
    of_packet_in_t *obj,
    of_octets_t *data);
extern void of_packet_in_data_get(
    of_packet_in_t *obj,
    of_octets_t *data);

extern void of_packet_in_in_port_set(
    of_packet_in_t *obj,
    of_port_no_t in_port);
extern void of_packet_in_in_port_get(
    of_packet_in_t *obj,
    of_port_no_t *in_port);

extern void of_packet_in_in_phy_port_set(
    of_packet_in_t *obj,
    of_port_no_t in_phy_port);
extern void of_packet_in_in_phy_port_get(
    of_packet_in_t *obj,
    of_port_no_t *in_phy_port);

/* Unified accessor functions for of_packet_out */

extern void of_packet_out_xid_set(
    of_packet_out_t *obj,
    uint32_t xid);
extern void of_packet_out_xid_get(
    of_packet_out_t *obj,
    uint32_t *xid);

extern void of_packet_out_buffer_id_set(
    of_packet_out_t *obj,
    uint32_t buffer_id);
extern void of_packet_out_buffer_id_get(
    of_packet_out_t *obj,
    uint32_t *buffer_id);

extern void of_packet_out_in_port_set(
    of_packet_out_t *obj,
    of_port_no_t in_port);
extern void of_packet_out_in_port_get(
    of_packet_out_t *obj,
    of_port_no_t *in_port);

extern int WARN_UNUSED_RESULT of_packet_out_actions_set(
    of_packet_out_t *obj,
    of_list_action_t *actions);
extern void of_packet_out_actions_bind(
    of_packet_out_t *obj,
    of_list_action_t *actions);
extern of_list_action_t *of_packet_out_actions_get(
    of_packet_out_t *obj);

extern int WARN_UNUSED_RESULT of_packet_out_data_set(
    of_packet_out_t *obj,
    of_octets_t *data);
extern void of_packet_out_data_get(
    of_packet_out_t *obj,
    of_octets_t *data);

/* Unified accessor functions for of_port_desc_stats_reply */

extern void of_port_desc_stats_reply_xid_set(
    of_port_desc_stats_reply_t *obj,
    uint32_t xid);
extern void of_port_desc_stats_reply_xid_get(
    of_port_desc_stats_reply_t *obj,
    uint32_t *xid);

extern void of_port_desc_stats_reply_flags_set(
    of_port_desc_stats_reply_t *obj,
    uint16_t flags);
extern void of_port_desc_stats_reply_flags_get(
    of_port_desc_stats_reply_t *obj,
    uint16_t *flags);

extern int WARN_UNUSED_RESULT of_port_desc_stats_reply_entries_set(
    of_port_desc_stats_reply_t *obj,
    of_list_port_desc_t *entries);
extern void of_port_desc_stats_reply_entries_bind(
    of_port_desc_stats_reply_t *obj,
    of_list_port_desc_t *entries);
extern of_list_port_desc_t *of_port_desc_stats_reply_entries_get(
    of_port_desc_stats_reply_t *obj);

/* Unified accessor functions for of_port_desc_stats_request */

extern void of_port_desc_stats_request_xid_set(
    of_port_desc_stats_request_t *obj,
    uint32_t xid);
extern void of_port_desc_stats_request_xid_get(
    of_port_desc_stats_request_t *obj,
    uint32_t *xid);

extern void of_port_desc_stats_request_flags_set(
    of_port_desc_stats_request_t *obj,
    uint16_t flags);
extern void of_port_desc_stats_request_flags_get(
    of_port_desc_stats_request_t *obj,
    uint16_t *flags);

/* Unified accessor functions for of_port_mod */

extern void of_port_mod_xid_set(
    of_port_mod_t *obj,
    uint32_t xid);
extern void of_port_mod_xid_get(
    of_port_mod_t *obj,
    uint32_t *xid);

extern void of_port_mod_port_no_set(
    of_port_mod_t *obj,
    of_port_no_t port_no);
extern void of_port_mod_port_no_get(
    of_port_mod_t *obj,
    of_port_no_t *port_no);

extern void of_port_mod_hw_addr_set(
    of_port_mod_t *obj,
    of_mac_addr_t hw_addr);
extern void of_port_mod_hw_addr_get(
    of_port_mod_t *obj,
    of_mac_addr_t *hw_addr);

extern void of_port_mod_config_set(
    of_port_mod_t *obj,
    uint32_t config);
extern void of_port_mod_config_get(
    of_port_mod_t *obj,
    uint32_t *config);

extern void of_port_mod_mask_set(
    of_port_mod_t *obj,
    uint32_t mask);
extern void of_port_mod_mask_get(
    of_port_mod_t *obj,
    uint32_t *mask);

extern void of_port_mod_advertise_set(
    of_port_mod_t *obj,
    uint32_t advertise);
extern void of_port_mod_advertise_get(
    of_port_mod_t *obj,
    uint32_t *advertise);

/* Unified accessor functions for of_port_mod_failed_error_msg */

extern void of_port_mod_failed_error_msg_xid_set(
    of_port_mod_failed_error_msg_t *obj,
    uint32_t xid);
extern void of_port_mod_failed_error_msg_xid_get(
    of_port_mod_failed_error_msg_t *obj,
    uint32_t *xid);

extern void of_port_mod_failed_error_msg_code_set(
    of_port_mod_failed_error_msg_t *obj,
    uint16_t code);
extern void of_port_mod_failed_error_msg_code_get(
    of_port_mod_failed_error_msg_t *obj,
    uint16_t *code);

extern int WARN_UNUSED_RESULT of_port_mod_failed_error_msg_data_set(
    of_port_mod_failed_error_msg_t *obj,
    of_octets_t *data);
extern void of_port_mod_failed_error_msg_data_get(
    of_port_mod_failed_error_msg_t *obj,
    of_octets_t *data);

/* Unified accessor functions for of_port_stats_reply */

extern void of_port_stats_reply_xid_set(
    of_port_stats_reply_t *obj,
    uint32_t xid);
extern void of_port_stats_reply_xid_get(
    of_port_stats_reply_t *obj,
    uint32_t *xid);

extern void of_port_stats_reply_flags_set(
    of_port_stats_reply_t *obj,
    uint16_t flags);
extern void of_port_stats_reply_flags_get(
    of_port_stats_reply_t *obj,
    uint16_t *flags);

extern int WARN_UNUSED_RESULT of_port_stats_reply_entries_set(
    of_port_stats_reply_t *obj,
    of_list_port_stats_entry_t *entries);
extern void of_port_stats_reply_entries_bind(
    of_port_stats_reply_t *obj,
    of_list_port_stats_entry_t *entries);
extern of_list_port_stats_entry_t *of_port_stats_reply_entries_get(
    of_port_stats_reply_t *obj);

/* Unified accessor functions for of_port_stats_request */

extern void of_port_stats_request_xid_set(
    of_port_stats_request_t *obj,
    uint32_t xid);
extern void of_port_stats_request_xid_get(
    of_port_stats_request_t *obj,
    uint32_t *xid);

extern void of_port_stats_request_flags_set(
    of_port_stats_request_t *obj,
    uint16_t flags);
extern void of_port_stats_request_flags_get(
    of_port_stats_request_t *obj,
    uint16_t *flags);

extern void of_port_stats_request_port_no_set(
    of_port_stats_request_t *obj,
    of_port_no_t port_no);
extern void of_port_stats_request_port_no_get(
    of_port_stats_request_t *obj,
    of_port_no_t *port_no);

/* Unified accessor functions for of_port_status */

extern void of_port_status_xid_set(
    of_port_status_t *obj,
    uint32_t xid);
extern void of_port_status_xid_get(
    of_port_status_t *obj,
    uint32_t *xid);

extern void of_port_status_reason_set(
    of_port_status_t *obj,
    uint8_t reason);
extern void of_port_status_reason_get(
    of_port_status_t *obj,
    uint8_t *reason);

extern void of_port_status_desc_set(
    of_port_status_t *obj,
    of_port_desc_t *desc);
extern void of_port_status_desc_bind(
    of_port_status_t *obj,
    of_port_desc_t *desc);
extern of_port_desc_t *of_port_status_desc_get(
    of_port_status_t *obj);

/* Unified accessor functions for of_queue_get_config_reply */

extern void of_queue_get_config_reply_xid_set(
    of_queue_get_config_reply_t *obj,
    uint32_t xid);
extern void of_queue_get_config_reply_xid_get(
    of_queue_get_config_reply_t *obj,
    uint32_t *xid);

extern void of_queue_get_config_reply_port_set(
    of_queue_get_config_reply_t *obj,
    of_port_no_t port);
extern void of_queue_get_config_reply_port_get(
    of_queue_get_config_reply_t *obj,
    of_port_no_t *port);

extern int WARN_UNUSED_RESULT of_queue_get_config_reply_queues_set(
    of_queue_get_config_reply_t *obj,
    of_list_packet_queue_t *queues);
extern void of_queue_get_config_reply_queues_bind(
    of_queue_get_config_reply_t *obj,
    of_list_packet_queue_t *queues);
extern of_list_packet_queue_t *of_queue_get_config_reply_queues_get(
    of_queue_get_config_reply_t *obj);

/* Unified accessor functions for of_queue_get_config_request */

extern void of_queue_get_config_request_xid_set(
    of_queue_get_config_request_t *obj,
    uint32_t xid);
extern void of_queue_get_config_request_xid_get(
    of_queue_get_config_request_t *obj,
    uint32_t *xid);

extern void of_queue_get_config_request_port_set(
    of_queue_get_config_request_t *obj,
    of_port_no_t port);
extern void of_queue_get_config_request_port_get(
    of_queue_get_config_request_t *obj,
    of_port_no_t *port);

/* Unified accessor functions for of_queue_op_failed_error_msg */

extern void of_queue_op_failed_error_msg_xid_set(
    of_queue_op_failed_error_msg_t *obj,
    uint32_t xid);
extern void of_queue_op_failed_error_msg_xid_get(
    of_queue_op_failed_error_msg_t *obj,
    uint32_t *xid);

extern void of_queue_op_failed_error_msg_code_set(
    of_queue_op_failed_error_msg_t *obj,
    uint16_t code);
extern void of_queue_op_failed_error_msg_code_get(
    of_queue_op_failed_error_msg_t *obj,
    uint16_t *code);

extern int WARN_UNUSED_RESULT of_queue_op_failed_error_msg_data_set(
    of_queue_op_failed_error_msg_t *obj,
    of_octets_t *data);
extern void of_queue_op_failed_error_msg_data_get(
    of_queue_op_failed_error_msg_t *obj,
    of_octets_t *data);

/* Unified accessor functions for of_queue_stats_reply */

extern void of_queue_stats_reply_xid_set(
    of_queue_stats_reply_t *obj,
    uint32_t xid);
extern void of_queue_stats_reply_xid_get(
    of_queue_stats_reply_t *obj,
    uint32_t *xid);

extern void of_queue_stats_reply_flags_set(
    of_queue_stats_reply_t *obj,
    uint16_t flags);
extern void of_queue_stats_reply_flags_get(
    of_queue_stats_reply_t *obj,
    uint16_t *flags);

extern int WARN_UNUSED_RESULT of_queue_stats_reply_entries_set(
    of_queue_stats_reply_t *obj,
    of_list_queue_stats_entry_t *entries);
extern void of_queue_stats_reply_entries_bind(
    of_queue_stats_reply_t *obj,
    of_list_queue_stats_entry_t *entries);
extern of_list_queue_stats_entry_t *of_queue_stats_reply_entries_get(
    of_queue_stats_reply_t *obj);

/* Unified accessor functions for of_queue_stats_request */

extern void of_queue_stats_request_xid_set(
    of_queue_stats_request_t *obj,
    uint32_t xid);
extern void of_queue_stats_request_xid_get(
    of_queue_stats_request_t *obj,
    uint32_t *xid);

extern void of_queue_stats_request_flags_set(
    of_queue_stats_request_t *obj,
    uint16_t flags);
extern void of_queue_stats_request_flags_get(
    of_queue_stats_request_t *obj,
    uint16_t *flags);

extern void of_queue_stats_request_port_no_set(
    of_queue_stats_request_t *obj,
    of_port_no_t port_no);
extern void of_queue_stats_request_port_no_get(
    of_queue_stats_request_t *obj,
    of_port_no_t *port_no);

extern void of_queue_stats_request_queue_id_set(
    of_queue_stats_request_t *obj,
    uint32_t queue_id);
extern void of_queue_stats_request_queue_id_get(
    of_queue_stats_request_t *obj,
    uint32_t *queue_id);

/* Unified accessor functions for of_role_reply */

extern void of_role_reply_xid_set(
    of_role_reply_t *obj,
    uint32_t xid);
extern void of_role_reply_xid_get(
    of_role_reply_t *obj,
    uint32_t *xid);

extern void of_role_reply_role_set(
    of_role_reply_t *obj,
    uint32_t role);
extern void of_role_reply_role_get(
    of_role_reply_t *obj,
    uint32_t *role);

extern void of_role_reply_generation_id_set(
    of_role_reply_t *obj,
    uint64_t generation_id);
extern void of_role_reply_generation_id_get(
    of_role_reply_t *obj,
    uint64_t *generation_id);

/* Unified accessor functions for of_role_request */

extern void of_role_request_xid_set(
    of_role_request_t *obj,
    uint32_t xid);
extern void of_role_request_xid_get(
    of_role_request_t *obj,
    uint32_t *xid);

extern void of_role_request_role_set(
    of_role_request_t *obj,
    uint32_t role);
extern void of_role_request_role_get(
    of_role_request_t *obj,
    uint32_t *role);

extern void of_role_request_generation_id_set(
    of_role_request_t *obj,
    uint64_t generation_id);
extern void of_role_request_generation_id_get(
    of_role_request_t *obj,
    uint64_t *generation_id);

/* Unified accessor functions for of_role_request_failed_error_msg */

extern void of_role_request_failed_error_msg_xid_set(
    of_role_request_failed_error_msg_t *obj,
    uint32_t xid);
extern void of_role_request_failed_error_msg_xid_get(
    of_role_request_failed_error_msg_t *obj,
    uint32_t *xid);

extern void of_role_request_failed_error_msg_code_set(
    of_role_request_failed_error_msg_t *obj,
    uint16_t code);
extern void of_role_request_failed_error_msg_code_get(
    of_role_request_failed_error_msg_t *obj,
    uint16_t *code);

extern int WARN_UNUSED_RESULT of_role_request_failed_error_msg_data_set(
    of_role_request_failed_error_msg_t *obj,
    of_octets_t *data);
extern void of_role_request_failed_error_msg_data_get(
    of_role_request_failed_error_msg_t *obj,
    of_octets_t *data);

/* Unified accessor functions for of_set_config */

extern void of_set_config_xid_set(
    of_set_config_t *obj,
    uint32_t xid);
extern void of_set_config_xid_get(
    of_set_config_t *obj,
    uint32_t *xid);

extern void of_set_config_flags_set(
    of_set_config_t *obj,
    uint16_t flags);
extern void of_set_config_flags_get(
    of_set_config_t *obj,
    uint16_t *flags);

extern void of_set_config_miss_send_len_set(
    of_set_config_t *obj,
    uint16_t miss_send_len);
extern void of_set_config_miss_send_len_get(
    of_set_config_t *obj,
    uint16_t *miss_send_len);

/* Unified accessor functions for of_stats_reply */

extern void of_stats_reply_xid_set(
    of_stats_reply_t *obj,
    uint32_t xid);
extern void of_stats_reply_xid_get(
    of_stats_reply_t *obj,
    uint32_t *xid);

extern void of_stats_reply_flags_set(
    of_stats_reply_t *obj,
    uint16_t flags);
extern void of_stats_reply_flags_get(
    of_stats_reply_t *obj,
    uint16_t *flags);

/* Unified accessor functions for of_stats_request */

extern void of_stats_request_xid_set(
    of_stats_request_t *obj,
    uint32_t xid);
extern void of_stats_request_xid_get(
    of_stats_request_t *obj,
    uint32_t *xid);

extern void of_stats_request_flags_set(
    of_stats_request_t *obj,
    uint16_t flags);
extern void of_stats_request_flags_get(
    of_stats_request_t *obj,
    uint16_t *flags);

/* Unified accessor functions for of_switch_config_failed_error_msg */

extern void of_switch_config_failed_error_msg_xid_set(
    of_switch_config_failed_error_msg_t *obj,
    uint32_t xid);
extern void of_switch_config_failed_error_msg_xid_get(
    of_switch_config_failed_error_msg_t *obj,
    uint32_t *xid);

extern void of_switch_config_failed_error_msg_code_set(
    of_switch_config_failed_error_msg_t *obj,
    uint16_t code);
extern void of_switch_config_failed_error_msg_code_get(
    of_switch_config_failed_error_msg_t *obj,
    uint16_t *code);

extern int WARN_UNUSED_RESULT of_switch_config_failed_error_msg_data_set(
    of_switch_config_failed_error_msg_t *obj,
    of_octets_t *data);
extern void of_switch_config_failed_error_msg_data_get(
    of_switch_config_failed_error_msg_t *obj,
    of_octets_t *data);

/* Unified accessor functions for of_table_features_failed_error_msg */

extern void of_table_features_failed_error_msg_xid_set(
    of_table_features_failed_error_msg_t *obj,
    uint32_t xid);
extern void of_table_features_failed_error_msg_xid_get(
    of_table_features_failed_error_msg_t *obj,
    uint32_t *xid);

extern void of_table_features_failed_error_msg_code_set(
    of_table_features_failed_error_msg_t *obj,
    uint16_t code);
extern void of_table_features_failed_error_msg_code_get(
    of_table_features_failed_error_msg_t *obj,
    uint16_t *code);

extern int WARN_UNUSED_RESULT of_table_features_failed_error_msg_data_set(
    of_table_features_failed_error_msg_t *obj,
    of_octets_t *data);
extern void of_table_features_failed_error_msg_data_get(
    of_table_features_failed_error_msg_t *obj,
    of_octets_t *data);

/* Unified accessor functions for of_table_features_stats_reply */

extern void of_table_features_stats_reply_xid_set(
    of_table_features_stats_reply_t *obj,
    uint32_t xid);
extern void of_table_features_stats_reply_xid_get(
    of_table_features_stats_reply_t *obj,
    uint32_t *xid);

extern void of_table_features_stats_reply_flags_set(
    of_table_features_stats_reply_t *obj,
    uint16_t flags);
extern void of_table_features_stats_reply_flags_get(
    of_table_features_stats_reply_t *obj,
    uint16_t *flags);

extern int WARN_UNUSED_RESULT of_table_features_stats_reply_entries_set(
    of_table_features_stats_reply_t *obj,
    of_list_table_features_t *entries);
extern void of_table_features_stats_reply_entries_bind(
    of_table_features_stats_reply_t *obj,
    of_list_table_features_t *entries);
extern of_list_table_features_t *of_table_features_stats_reply_entries_get(
    of_table_features_stats_reply_t *obj);

/* Unified accessor functions for of_table_features_stats_request */

extern void of_table_features_stats_request_xid_set(
    of_table_features_stats_request_t *obj,
    uint32_t xid);
extern void of_table_features_stats_request_xid_get(
    of_table_features_stats_request_t *obj,
    uint32_t *xid);

extern void of_table_features_stats_request_flags_set(
    of_table_features_stats_request_t *obj,
    uint16_t flags);
extern void of_table_features_stats_request_flags_get(
    of_table_features_stats_request_t *obj,
    uint16_t *flags);

extern int WARN_UNUSED_RESULT of_table_features_stats_request_entries_set(
    of_table_features_stats_request_t *obj,
    of_list_table_features_t *entries);
extern void of_table_features_stats_request_entries_bind(
    of_table_features_stats_request_t *obj,
    of_list_table_features_t *entries);
extern of_list_table_features_t *of_table_features_stats_request_entries_get(
    of_table_features_stats_request_t *obj);

/* Unified accessor functions for of_table_mod */

extern void of_table_mod_xid_set(
    of_table_mod_t *obj,
    uint32_t xid);
extern void of_table_mod_xid_get(
    of_table_mod_t *obj,
    uint32_t *xid);

extern void of_table_mod_table_id_set(
    of_table_mod_t *obj,
    uint8_t table_id);
extern void of_table_mod_table_id_get(
    of_table_mod_t *obj,
    uint8_t *table_id);

extern void of_table_mod_config_set(
    of_table_mod_t *obj,
    uint32_t config);
extern void of_table_mod_config_get(
    of_table_mod_t *obj,
    uint32_t *config);

/* Unified accessor functions for of_table_mod_failed_error_msg */

extern void of_table_mod_failed_error_msg_xid_set(
    of_table_mod_failed_error_msg_t *obj,
    uint32_t xid);
extern void of_table_mod_failed_error_msg_xid_get(
    of_table_mod_failed_error_msg_t *obj,
    uint32_t *xid);

extern void of_table_mod_failed_error_msg_code_set(
    of_table_mod_failed_error_msg_t *obj,
    uint16_t code);
extern void of_table_mod_failed_error_msg_code_get(
    of_table_mod_failed_error_msg_t *obj,
    uint16_t *code);

extern int WARN_UNUSED_RESULT of_table_mod_failed_error_msg_data_set(
    of_table_mod_failed_error_msg_t *obj,
    of_octets_t *data);
extern void of_table_mod_failed_error_msg_data_get(
    of_table_mod_failed_error_msg_t *obj,
    of_octets_t *data);

/* Unified accessor functions for of_table_stats_reply */

extern void of_table_stats_reply_xid_set(
    of_table_stats_reply_t *obj,
    uint32_t xid);
extern void of_table_stats_reply_xid_get(
    of_table_stats_reply_t *obj,
    uint32_t *xid);

extern void of_table_stats_reply_flags_set(
    of_table_stats_reply_t *obj,
    uint16_t flags);
extern void of_table_stats_reply_flags_get(
    of_table_stats_reply_t *obj,
    uint16_t *flags);

extern int WARN_UNUSED_RESULT of_table_stats_reply_entries_set(
    of_table_stats_reply_t *obj,
    of_list_table_stats_entry_t *entries);
extern void of_table_stats_reply_entries_bind(
    of_table_stats_reply_t *obj,
    of_list_table_stats_entry_t *entries);
extern of_list_table_stats_entry_t *of_table_stats_reply_entries_get(
    of_table_stats_reply_t *obj);

/* Unified accessor functions for of_table_stats_request */

extern void of_table_stats_request_xid_set(
    of_table_stats_request_t *obj,
    uint32_t xid);
extern void of_table_stats_request_xid_get(
    of_table_stats_request_t *obj,
    uint32_t *xid);

extern void of_table_stats_request_flags_set(
    of_table_stats_request_t *obj,
    uint16_t flags);
extern void of_table_stats_request_flags_get(
    of_table_stats_request_t *obj,
    uint16_t *flags);

/* Unified accessor functions for of_action_bsn */

extern void of_action_bsn_experimenter_set(
    of_action_bsn_t *obj,
    uint32_t experimenter);
extern void of_action_bsn_experimenter_get(
    of_action_bsn_t *obj,
    uint32_t *experimenter);

extern void of_action_bsn_subtype_set(
    of_action_bsn_t *obj,
    uint32_t subtype);
extern void of_action_bsn_subtype_get(
    of_action_bsn_t *obj,
    uint32_t *subtype);

/* Unified accessor functions for of_action_bsn_mirror */

extern void of_action_bsn_mirror_experimenter_set(
    of_action_bsn_mirror_t *obj,
    uint32_t experimenter);
extern void of_action_bsn_mirror_experimenter_get(
    of_action_bsn_mirror_t *obj,
    uint32_t *experimenter);

extern void of_action_bsn_mirror_subtype_set(
    of_action_bsn_mirror_t *obj,
    uint32_t subtype);
extern void of_action_bsn_mirror_subtype_get(
    of_action_bsn_mirror_t *obj,
    uint32_t *subtype);

extern void of_action_bsn_mirror_dest_port_set(
    of_action_bsn_mirror_t *obj,
    uint32_t dest_port);
extern void of_action_bsn_mirror_dest_port_get(
    of_action_bsn_mirror_t *obj,
    uint32_t *dest_port);

extern void of_action_bsn_mirror_vlan_tag_set(
    of_action_bsn_mirror_t *obj,
    uint32_t vlan_tag);
extern void of_action_bsn_mirror_vlan_tag_get(
    of_action_bsn_mirror_t *obj,
    uint32_t *vlan_tag);

extern void of_action_bsn_mirror_copy_stage_set(
    of_action_bsn_mirror_t *obj,
    uint8_t copy_stage);
extern void of_action_bsn_mirror_copy_stage_get(
    of_action_bsn_mirror_t *obj,
    uint8_t *copy_stage);

/* Unified accessor functions for of_action_bsn_set_tunnel_dst */

extern void of_action_bsn_set_tunnel_dst_experimenter_set(
    of_action_bsn_set_tunnel_dst_t *obj,
    uint32_t experimenter);
extern void of_action_bsn_set_tunnel_dst_experimenter_get(
    of_action_bsn_set_tunnel_dst_t *obj,
    uint32_t *experimenter);

extern void of_action_bsn_set_tunnel_dst_subtype_set(
    of_action_bsn_set_tunnel_dst_t *obj,
    uint32_t subtype);
extern void of_action_bsn_set_tunnel_dst_subtype_get(
    of_action_bsn_set_tunnel_dst_t *obj,
    uint32_t *subtype);

extern void of_action_bsn_set_tunnel_dst_dst_set(
    of_action_bsn_set_tunnel_dst_t *obj,
    uint32_t dst);
extern void of_action_bsn_set_tunnel_dst_dst_get(
    of_action_bsn_set_tunnel_dst_t *obj,
    uint32_t *dst);

/* Unified accessor functions for of_action_copy_ttl_in */

/* Unified accessor functions for of_action_copy_ttl_out */

/* Unified accessor functions for of_action_dec_mpls_ttl */

/* Unified accessor functions for of_action_dec_nw_ttl */

/* Unified accessor functions for of_action_enqueue */

extern void of_action_enqueue_port_set(
    of_action_enqueue_t *obj,
    of_port_no_t port);
extern void of_action_enqueue_port_get(
    of_action_enqueue_t *obj,
    of_port_no_t *port);

extern void of_action_enqueue_queue_id_set(
    of_action_enqueue_t *obj,
    uint32_t queue_id);
extern void of_action_enqueue_queue_id_get(
    of_action_enqueue_t *obj,
    uint32_t *queue_id);

/* Unified accessor functions for of_action_experimenter */

extern void of_action_experimenter_experimenter_set(
    of_action_experimenter_t *obj,
    uint32_t experimenter);
extern void of_action_experimenter_experimenter_get(
    of_action_experimenter_t *obj,
    uint32_t *experimenter);

extern int WARN_UNUSED_RESULT of_action_experimenter_data_set(
    of_action_experimenter_t *obj,
    of_octets_t *data);
extern void of_action_experimenter_data_get(
    of_action_experimenter_t *obj,
    of_octets_t *data);

/* Unified accessor functions for of_action_group */

extern void of_action_group_group_id_set(
    of_action_group_t *obj,
    uint32_t group_id);
extern void of_action_group_group_id_get(
    of_action_group_t *obj,
    uint32_t *group_id);

/* Unified accessor functions for of_action_header */

/* Unified accessor functions for of_action_id_bsn */

extern void of_action_id_bsn_experimenter_set(
    of_action_id_bsn_t *obj,
    uint32_t experimenter);
extern void of_action_id_bsn_experimenter_get(
    of_action_id_bsn_t *obj,
    uint32_t *experimenter);

extern void of_action_id_bsn_subtype_set(
    of_action_id_bsn_t *obj,
    uint32_t subtype);
extern void of_action_id_bsn_subtype_get(
    of_action_id_bsn_t *obj,
    uint32_t *subtype);

/* Unified accessor functions for of_action_id_bsn_mirror */

extern void of_action_id_bsn_mirror_experimenter_set(
    of_action_id_bsn_mirror_t *obj,
    uint32_t experimenter);
extern void of_action_id_bsn_mirror_experimenter_get(
    of_action_id_bsn_mirror_t *obj,
    uint32_t *experimenter);

extern void of_action_id_bsn_mirror_subtype_set(
    of_action_id_bsn_mirror_t *obj,
    uint32_t subtype);
extern void of_action_id_bsn_mirror_subtype_get(
    of_action_id_bsn_mirror_t *obj,
    uint32_t *subtype);

/* Unified accessor functions for of_action_id_bsn_set_tunnel_dst */

extern void of_action_id_bsn_set_tunnel_dst_experimenter_set(
    of_action_id_bsn_set_tunnel_dst_t *obj,
    uint32_t experimenter);
extern void of_action_id_bsn_set_tunnel_dst_experimenter_get(
    of_action_id_bsn_set_tunnel_dst_t *obj,
    uint32_t *experimenter);

extern void of_action_id_bsn_set_tunnel_dst_subtype_set(
    of_action_id_bsn_set_tunnel_dst_t *obj,
    uint32_t subtype);
extern void of_action_id_bsn_set_tunnel_dst_subtype_get(
    of_action_id_bsn_set_tunnel_dst_t *obj,
    uint32_t *subtype);

/* Unified accessor functions for of_action_id_copy_ttl_in */

/* Unified accessor functions for of_action_id_copy_ttl_out */

/* Unified accessor functions for of_action_id_dec_mpls_ttl */

/* Unified accessor functions for of_action_id_dec_nw_ttl */

/* Unified accessor functions for of_action_id_experimenter */

extern void of_action_id_experimenter_experimenter_set(
    of_action_id_experimenter_t *obj,
    uint32_t experimenter);
extern void of_action_id_experimenter_experimenter_get(
    of_action_id_experimenter_t *obj,
    uint32_t *experimenter);

/* Unified accessor functions for of_action_id_group */

/* Unified accessor functions for of_action_id_header */

/* Unified accessor functions for of_action_id_nicira */

extern void of_action_id_nicira_experimenter_set(
    of_action_id_nicira_t *obj,
    uint32_t experimenter);
extern void of_action_id_nicira_experimenter_get(
    of_action_id_nicira_t *obj,
    uint32_t *experimenter);

extern void of_action_id_nicira_subtype_set(
    of_action_id_nicira_t *obj,
    uint16_t subtype);
extern void of_action_id_nicira_subtype_get(
    of_action_id_nicira_t *obj,
    uint16_t *subtype);

/* Unified accessor functions for of_action_id_nicira_dec_ttl */

extern void of_action_id_nicira_dec_ttl_experimenter_set(
    of_action_id_nicira_dec_ttl_t *obj,
    uint32_t experimenter);
extern void of_action_id_nicira_dec_ttl_experimenter_get(
    of_action_id_nicira_dec_ttl_t *obj,
    uint32_t *experimenter);

extern void of_action_id_nicira_dec_ttl_subtype_set(
    of_action_id_nicira_dec_ttl_t *obj,
    uint16_t subtype);
extern void of_action_id_nicira_dec_ttl_subtype_get(
    of_action_id_nicira_dec_ttl_t *obj,
    uint16_t *subtype);

/* Unified accessor functions for of_action_id_output */

/* Unified accessor functions for of_action_id_pop_mpls */

/* Unified accessor functions for of_action_id_pop_pbb */

/* Unified accessor functions for of_action_id_pop_vlan */

/* Unified accessor functions for of_action_id_push_mpls */

/* Unified accessor functions for of_action_id_push_pbb */

/* Unified accessor functions for of_action_id_push_vlan */

/* Unified accessor functions for of_action_id_set_field */

/* Unified accessor functions for of_action_id_set_mpls_ttl */

/* Unified accessor functions for of_action_id_set_nw_ttl */

/* Unified accessor functions for of_action_id_set_queue */

/* Unified accessor functions for of_action_nicira */

extern void of_action_nicira_experimenter_set(
    of_action_nicira_t *obj,
    uint32_t experimenter);
extern void of_action_nicira_experimenter_get(
    of_action_nicira_t *obj,
    uint32_t *experimenter);

extern void of_action_nicira_subtype_set(
    of_action_nicira_t *obj,
    uint16_t subtype);
extern void of_action_nicira_subtype_get(
    of_action_nicira_t *obj,
    uint16_t *subtype);

/* Unified accessor functions for of_action_nicira_dec_ttl */

extern void of_action_nicira_dec_ttl_experimenter_set(
    of_action_nicira_dec_ttl_t *obj,
    uint32_t experimenter);
extern void of_action_nicira_dec_ttl_experimenter_get(
    of_action_nicira_dec_ttl_t *obj,
    uint32_t *experimenter);

extern void of_action_nicira_dec_ttl_subtype_set(
    of_action_nicira_dec_ttl_t *obj,
    uint16_t subtype);
extern void of_action_nicira_dec_ttl_subtype_get(
    of_action_nicira_dec_ttl_t *obj,
    uint16_t *subtype);

/* Unified accessor functions for of_action_output */

extern void of_action_output_port_set(
    of_action_output_t *obj,
    of_port_no_t port);
extern void of_action_output_port_get(
    of_action_output_t *obj,
    of_port_no_t *port);

extern void of_action_output_max_len_set(
    of_action_output_t *obj,
    uint16_t max_len);
extern void of_action_output_max_len_get(
    of_action_output_t *obj,
    uint16_t *max_len);

/* Unified accessor functions for of_action_pop_mpls */

extern void of_action_pop_mpls_ethertype_set(
    of_action_pop_mpls_t *obj,
    uint16_t ethertype);
extern void of_action_pop_mpls_ethertype_get(
    of_action_pop_mpls_t *obj,
    uint16_t *ethertype);

/* Unified accessor functions for of_action_pop_pbb */

/* Unified accessor functions for of_action_pop_vlan */

/* Unified accessor functions for of_action_push_mpls */

extern void of_action_push_mpls_ethertype_set(
    of_action_push_mpls_t *obj,
    uint16_t ethertype);
extern void of_action_push_mpls_ethertype_get(
    of_action_push_mpls_t *obj,
    uint16_t *ethertype);

/* Unified accessor functions for of_action_push_pbb */

extern void of_action_push_pbb_ethertype_set(
    of_action_push_pbb_t *obj,
    uint16_t ethertype);
extern void of_action_push_pbb_ethertype_get(
    of_action_push_pbb_t *obj,
    uint16_t *ethertype);

/* Unified accessor functions for of_action_push_vlan */

extern void of_action_push_vlan_ethertype_set(
    of_action_push_vlan_t *obj,
    uint16_t ethertype);
extern void of_action_push_vlan_ethertype_get(
    of_action_push_vlan_t *obj,
    uint16_t *ethertype);

/* Unified accessor functions for of_action_set_dl_dst */

extern void of_action_set_dl_dst_dl_addr_set(
    of_action_set_dl_dst_t *obj,
    of_mac_addr_t dl_addr);
extern void of_action_set_dl_dst_dl_addr_get(
    of_action_set_dl_dst_t *obj,
    of_mac_addr_t *dl_addr);

/* Unified accessor functions for of_action_set_dl_src */

extern void of_action_set_dl_src_dl_addr_set(
    of_action_set_dl_src_t *obj,
    of_mac_addr_t dl_addr);
extern void of_action_set_dl_src_dl_addr_get(
    of_action_set_dl_src_t *obj,
    of_mac_addr_t *dl_addr);

/* Unified accessor functions for of_action_set_field */

extern int WARN_UNUSED_RESULT of_action_set_field_field_set(
    of_action_set_field_t *obj,
    of_octets_t *field);
extern void of_action_set_field_field_get(
    of_action_set_field_t *obj,
    of_octets_t *field);

/* Unified accessor functions for of_action_set_mpls_label */

extern void of_action_set_mpls_label_mpls_label_set(
    of_action_set_mpls_label_t *obj,
    uint32_t mpls_label);
extern void of_action_set_mpls_label_mpls_label_get(
    of_action_set_mpls_label_t *obj,
    uint32_t *mpls_label);

/* Unified accessor functions for of_action_set_mpls_tc */

extern void of_action_set_mpls_tc_mpls_tc_set(
    of_action_set_mpls_tc_t *obj,
    uint8_t mpls_tc);
extern void of_action_set_mpls_tc_mpls_tc_get(
    of_action_set_mpls_tc_t *obj,
    uint8_t *mpls_tc);

/* Unified accessor functions for of_action_set_mpls_ttl */

extern void of_action_set_mpls_ttl_mpls_ttl_set(
    of_action_set_mpls_ttl_t *obj,
    uint8_t mpls_ttl);
extern void of_action_set_mpls_ttl_mpls_ttl_get(
    of_action_set_mpls_ttl_t *obj,
    uint8_t *mpls_ttl);

/* Unified accessor functions for of_action_set_nw_dst */

extern void of_action_set_nw_dst_nw_addr_set(
    of_action_set_nw_dst_t *obj,
    uint32_t nw_addr);
extern void of_action_set_nw_dst_nw_addr_get(
    of_action_set_nw_dst_t *obj,
    uint32_t *nw_addr);

/* Unified accessor functions for of_action_set_nw_ecn */

extern void of_action_set_nw_ecn_nw_ecn_set(
    of_action_set_nw_ecn_t *obj,
    uint8_t nw_ecn);
extern void of_action_set_nw_ecn_nw_ecn_get(
    of_action_set_nw_ecn_t *obj,
    uint8_t *nw_ecn);

/* Unified accessor functions for of_action_set_nw_src */

extern void of_action_set_nw_src_nw_addr_set(
    of_action_set_nw_src_t *obj,
    uint32_t nw_addr);
extern void of_action_set_nw_src_nw_addr_get(
    of_action_set_nw_src_t *obj,
    uint32_t *nw_addr);

/* Unified accessor functions for of_action_set_nw_tos */

extern void of_action_set_nw_tos_nw_tos_set(
    of_action_set_nw_tos_t *obj,
    uint8_t nw_tos);
extern void of_action_set_nw_tos_nw_tos_get(
    of_action_set_nw_tos_t *obj,
    uint8_t *nw_tos);

/* Unified accessor functions for of_action_set_nw_ttl */

extern void of_action_set_nw_ttl_nw_ttl_set(
    of_action_set_nw_ttl_t *obj,
    uint8_t nw_ttl);
extern void of_action_set_nw_ttl_nw_ttl_get(
    of_action_set_nw_ttl_t *obj,
    uint8_t *nw_ttl);

/* Unified accessor functions for of_action_set_queue */

extern void of_action_set_queue_queue_id_set(
    of_action_set_queue_t *obj,
    uint32_t queue_id);
extern void of_action_set_queue_queue_id_get(
    of_action_set_queue_t *obj,
    uint32_t *queue_id);

/* Unified accessor functions for of_action_set_tp_dst */

extern void of_action_set_tp_dst_tp_port_set(
    of_action_set_tp_dst_t *obj,
    uint16_t tp_port);
extern void of_action_set_tp_dst_tp_port_get(
    of_action_set_tp_dst_t *obj,
    uint16_t *tp_port);

/* Unified accessor functions for of_action_set_tp_src */

extern void of_action_set_tp_src_tp_port_set(
    of_action_set_tp_src_t *obj,
    uint16_t tp_port);
extern void of_action_set_tp_src_tp_port_get(
    of_action_set_tp_src_t *obj,
    uint16_t *tp_port);

/* Unified accessor functions for of_action_set_vlan_pcp */

extern void of_action_set_vlan_pcp_vlan_pcp_set(
    of_action_set_vlan_pcp_t *obj,
    uint8_t vlan_pcp);
extern void of_action_set_vlan_pcp_vlan_pcp_get(
    of_action_set_vlan_pcp_t *obj,
    uint8_t *vlan_pcp);

/* Unified accessor functions for of_action_set_vlan_vid */

extern void of_action_set_vlan_vid_vlan_vid_set(
    of_action_set_vlan_vid_t *obj,
    uint16_t vlan_vid);
extern void of_action_set_vlan_vid_vlan_vid_get(
    of_action_set_vlan_vid_t *obj,
    uint16_t *vlan_vid);

/* Unified accessor functions for of_action_strip_vlan */

/* Unified accessor functions for of_bsn_interface */

extern void of_bsn_interface_hw_addr_set(
    of_bsn_interface_t *obj,
    of_mac_addr_t hw_addr);
extern void of_bsn_interface_hw_addr_get(
    of_bsn_interface_t *obj,
    of_mac_addr_t *hw_addr);

extern void of_bsn_interface_name_set(
    of_bsn_interface_t *obj,
    of_port_name_t name);
extern void of_bsn_interface_name_get(
    of_bsn_interface_t *obj,
    of_port_name_t *name);

extern void of_bsn_interface_ipv4_addr_set(
    of_bsn_interface_t *obj,
    of_ipv4_t ipv4_addr);
extern void of_bsn_interface_ipv4_addr_get(
    of_bsn_interface_t *obj,
    of_ipv4_t *ipv4_addr);

extern void of_bsn_interface_ipv4_netmask_set(
    of_bsn_interface_t *obj,
    of_ipv4_t ipv4_netmask);
extern void of_bsn_interface_ipv4_netmask_get(
    of_bsn_interface_t *obj,
    of_ipv4_t *ipv4_netmask);

/* Unified accessor functions for of_bsn_lacp_stats_entry */

extern void of_bsn_lacp_stats_entry_port_no_set(
    of_bsn_lacp_stats_entry_t *obj,
    of_port_no_t port_no);
extern void of_bsn_lacp_stats_entry_port_no_get(
    of_bsn_lacp_stats_entry_t *obj,
    of_port_no_t *port_no);

extern void of_bsn_lacp_stats_entry_actor_sys_priority_set(
    of_bsn_lacp_stats_entry_t *obj,
    uint16_t actor_sys_priority);
extern void of_bsn_lacp_stats_entry_actor_sys_priority_get(
    of_bsn_lacp_stats_entry_t *obj,
    uint16_t *actor_sys_priority);

extern void of_bsn_lacp_stats_entry_actor_sys_mac_set(
    of_bsn_lacp_stats_entry_t *obj,
    of_mac_addr_t actor_sys_mac);
extern void of_bsn_lacp_stats_entry_actor_sys_mac_get(
    of_bsn_lacp_stats_entry_t *obj,
    of_mac_addr_t *actor_sys_mac);

extern void of_bsn_lacp_stats_entry_actor_port_priority_set(
    of_bsn_lacp_stats_entry_t *obj,
    uint16_t actor_port_priority);
extern void of_bsn_lacp_stats_entry_actor_port_priority_get(
    of_bsn_lacp_stats_entry_t *obj,
    uint16_t *actor_port_priority);

extern void of_bsn_lacp_stats_entry_actor_port_num_set(
    of_bsn_lacp_stats_entry_t *obj,
    uint16_t actor_port_num);
extern void of_bsn_lacp_stats_entry_actor_port_num_get(
    of_bsn_lacp_stats_entry_t *obj,
    uint16_t *actor_port_num);

extern void of_bsn_lacp_stats_entry_actor_key_set(
    of_bsn_lacp_stats_entry_t *obj,
    uint16_t actor_key);
extern void of_bsn_lacp_stats_entry_actor_key_get(
    of_bsn_lacp_stats_entry_t *obj,
    uint16_t *actor_key);

extern void of_bsn_lacp_stats_entry_convergence_status_set(
    of_bsn_lacp_stats_entry_t *obj,
    uint8_t convergence_status);
extern void of_bsn_lacp_stats_entry_convergence_status_get(
    of_bsn_lacp_stats_entry_t *obj,
    uint8_t *convergence_status);

extern void of_bsn_lacp_stats_entry_partner_sys_priority_set(
    of_bsn_lacp_stats_entry_t *obj,
    uint16_t partner_sys_priority);
extern void of_bsn_lacp_stats_entry_partner_sys_priority_get(
    of_bsn_lacp_stats_entry_t *obj,
    uint16_t *partner_sys_priority);

extern void of_bsn_lacp_stats_entry_partner_sys_mac_set(
    of_bsn_lacp_stats_entry_t *obj,
    of_mac_addr_t partner_sys_mac);
extern void of_bsn_lacp_stats_entry_partner_sys_mac_get(
    of_bsn_lacp_stats_entry_t *obj,
    of_mac_addr_t *partner_sys_mac);

extern void of_bsn_lacp_stats_entry_partner_port_priority_set(
    of_bsn_lacp_stats_entry_t *obj,
    uint16_t partner_port_priority);
extern void of_bsn_lacp_stats_entry_partner_port_priority_get(
    of_bsn_lacp_stats_entry_t *obj,
    uint16_t *partner_port_priority);

extern void of_bsn_lacp_stats_entry_partner_port_num_set(
    of_bsn_lacp_stats_entry_t *obj,
    uint16_t partner_port_num);
extern void of_bsn_lacp_stats_entry_partner_port_num_get(
    of_bsn_lacp_stats_entry_t *obj,
    uint16_t *partner_port_num);

extern void of_bsn_lacp_stats_entry_partner_key_set(
    of_bsn_lacp_stats_entry_t *obj,
    uint16_t partner_key);
extern void of_bsn_lacp_stats_entry_partner_key_get(
    of_bsn_lacp_stats_entry_t *obj,
    uint16_t *partner_key);

/* Unified accessor functions for of_bsn_port_counter_stats_entry */

extern void of_bsn_port_counter_stats_entry_port_no_set(
    of_bsn_port_counter_stats_entry_t *obj,
    of_port_no_t port_no);
extern void of_bsn_port_counter_stats_entry_port_no_get(
    of_bsn_port_counter_stats_entry_t *obj,
    of_port_no_t *port_no);

extern int WARN_UNUSED_RESULT of_bsn_port_counter_stats_entry_values_set(
    of_bsn_port_counter_stats_entry_t *obj,
    of_list_uint64_t *values);
extern void of_bsn_port_counter_stats_entry_values_bind(
    of_bsn_port_counter_stats_entry_t *obj,
    of_list_uint64_t *values);
extern of_list_uint64_t *of_bsn_port_counter_stats_entry_values_get(
    of_bsn_port_counter_stats_entry_t *obj);

/* Unified accessor functions for of_bsn_switch_pipeline_stats_entry */

extern void of_bsn_switch_pipeline_stats_entry_pipeline_set(
    of_bsn_switch_pipeline_stats_entry_t *obj,
    of_desc_str_t pipeline);
extern void of_bsn_switch_pipeline_stats_entry_pipeline_get(
    of_bsn_switch_pipeline_stats_entry_t *obj,
    of_desc_str_t *pipeline);

/* Unified accessor functions for of_bsn_vlan_counter_stats_entry */

extern void of_bsn_vlan_counter_stats_entry_vlan_vid_set(
    of_bsn_vlan_counter_stats_entry_t *obj,
    uint16_t vlan_vid);
extern void of_bsn_vlan_counter_stats_entry_vlan_vid_get(
    of_bsn_vlan_counter_stats_entry_t *obj,
    uint16_t *vlan_vid);

extern int WARN_UNUSED_RESULT of_bsn_vlan_counter_stats_entry_values_set(
    of_bsn_vlan_counter_stats_entry_t *obj,
    of_list_uint64_t *values);
extern void of_bsn_vlan_counter_stats_entry_values_bind(
    of_bsn_vlan_counter_stats_entry_t *obj,
    of_list_uint64_t *values);
extern of_list_uint64_t *of_bsn_vlan_counter_stats_entry_values_get(
    of_bsn_vlan_counter_stats_entry_t *obj);

/* Unified accessor functions for of_bsn_vport_header */

/* Unified accessor functions for of_bsn_vport_q_in_q */

extern void of_bsn_vport_q_in_q_port_no_set(
    of_bsn_vport_q_in_q_t *obj,
    uint32_t port_no);
extern void of_bsn_vport_q_in_q_port_no_get(
    of_bsn_vport_q_in_q_t *obj,
    uint32_t *port_no);

extern void of_bsn_vport_q_in_q_ingress_tpid_set(
    of_bsn_vport_q_in_q_t *obj,
    uint16_t ingress_tpid);
extern void of_bsn_vport_q_in_q_ingress_tpid_get(
    of_bsn_vport_q_in_q_t *obj,
    uint16_t *ingress_tpid);

extern void of_bsn_vport_q_in_q_ingress_vlan_id_set(
    of_bsn_vport_q_in_q_t *obj,
    uint16_t ingress_vlan_id);
extern void of_bsn_vport_q_in_q_ingress_vlan_id_get(
    of_bsn_vport_q_in_q_t *obj,
    uint16_t *ingress_vlan_id);

extern void of_bsn_vport_q_in_q_egress_tpid_set(
    of_bsn_vport_q_in_q_t *obj,
    uint16_t egress_tpid);
extern void of_bsn_vport_q_in_q_egress_tpid_get(
    of_bsn_vport_q_in_q_t *obj,
    uint16_t *egress_tpid);

extern void of_bsn_vport_q_in_q_egress_vlan_id_set(
    of_bsn_vport_q_in_q_t *obj,
    uint16_t egress_vlan_id);
extern void of_bsn_vport_q_in_q_egress_vlan_id_get(
    of_bsn_vport_q_in_q_t *obj,
    uint16_t *egress_vlan_id);

extern void of_bsn_vport_q_in_q_if_name_set(
    of_bsn_vport_q_in_q_t *obj,
    of_port_name_t if_name);
extern void of_bsn_vport_q_in_q_if_name_get(
    of_bsn_vport_q_in_q_t *obj,
    of_port_name_t *if_name);

/* Unified accessor functions for of_bucket */

extern void of_bucket_weight_set(
    of_bucket_t *obj,
    uint16_t weight);
extern void of_bucket_weight_get(
    of_bucket_t *obj,
    uint16_t *weight);

extern void of_bucket_watch_port_set(
    of_bucket_t *obj,
    of_port_no_t watch_port);
extern void of_bucket_watch_port_get(
    of_bucket_t *obj,
    of_port_no_t *watch_port);

extern void of_bucket_watch_group_set(
    of_bucket_t *obj,
    uint32_t watch_group);
extern void of_bucket_watch_group_get(
    of_bucket_t *obj,
    uint32_t *watch_group);

extern int WARN_UNUSED_RESULT of_bucket_actions_set(
    of_bucket_t *obj,
    of_list_action_t *actions);
extern void of_bucket_actions_bind(
    of_bucket_t *obj,
    of_list_action_t *actions);
extern of_list_action_t *of_bucket_actions_get(
    of_bucket_t *obj);

/* Unified accessor functions for of_bucket_counter */

extern void of_bucket_counter_packet_count_set(
    of_bucket_counter_t *obj,
    uint64_t packet_count);
extern void of_bucket_counter_packet_count_get(
    of_bucket_counter_t *obj,
    uint64_t *packet_count);

extern void of_bucket_counter_byte_count_set(
    of_bucket_counter_t *obj,
    uint64_t byte_count);
extern void of_bucket_counter_byte_count_get(
    of_bucket_counter_t *obj,
    uint64_t *byte_count);

/* Unified accessor functions for of_experimenter_stats_header */

extern void of_experimenter_stats_header_experimenter_set(
    of_experimenter_stats_header_t *obj,
    uint32_t experimenter);
extern void of_experimenter_stats_header_experimenter_get(
    of_experimenter_stats_header_t *obj,
    uint32_t *experimenter);

extern void of_experimenter_stats_header_subtype_set(
    of_experimenter_stats_header_t *obj,
    uint32_t subtype);
extern void of_experimenter_stats_header_subtype_get(
    of_experimenter_stats_header_t *obj,
    uint32_t *subtype);

/* Unified accessor functions for of_flow_stats_entry */

extern void of_flow_stats_entry_table_id_set(
    of_flow_stats_entry_t *obj,
    uint8_t table_id);
extern void of_flow_stats_entry_table_id_get(
    of_flow_stats_entry_t *obj,
    uint8_t *table_id);

extern void of_flow_stats_entry_duration_sec_set(
    of_flow_stats_entry_t *obj,
    uint32_t duration_sec);
extern void of_flow_stats_entry_duration_sec_get(
    of_flow_stats_entry_t *obj,
    uint32_t *duration_sec);

extern void of_flow_stats_entry_duration_nsec_set(
    of_flow_stats_entry_t *obj,
    uint32_t duration_nsec);
extern void of_flow_stats_entry_duration_nsec_get(
    of_flow_stats_entry_t *obj,
    uint32_t *duration_nsec);

extern void of_flow_stats_entry_priority_set(
    of_flow_stats_entry_t *obj,
    uint16_t priority);
extern void of_flow_stats_entry_priority_get(
    of_flow_stats_entry_t *obj,
    uint16_t *priority);

extern void of_flow_stats_entry_idle_timeout_set(
    of_flow_stats_entry_t *obj,
    uint16_t idle_timeout);
extern void of_flow_stats_entry_idle_timeout_get(
    of_flow_stats_entry_t *obj,
    uint16_t *idle_timeout);

extern void of_flow_stats_entry_hard_timeout_set(
    of_flow_stats_entry_t *obj,
    uint16_t hard_timeout);
extern void of_flow_stats_entry_hard_timeout_get(
    of_flow_stats_entry_t *obj,
    uint16_t *hard_timeout);

extern void of_flow_stats_entry_flags_set(
    of_flow_stats_entry_t *obj,
    uint16_t flags);
extern void of_flow_stats_entry_flags_get(
    of_flow_stats_entry_t *obj,
    uint16_t *flags);

extern void of_flow_stats_entry_cookie_set(
    of_flow_stats_entry_t *obj,
    uint64_t cookie);
extern void of_flow_stats_entry_cookie_get(
    of_flow_stats_entry_t *obj,
    uint64_t *cookie);

extern void of_flow_stats_entry_packet_count_set(
    of_flow_stats_entry_t *obj,
    uint64_t packet_count);
extern void of_flow_stats_entry_packet_count_get(
    of_flow_stats_entry_t *obj,
    uint64_t *packet_count);

extern void of_flow_stats_entry_byte_count_set(
    of_flow_stats_entry_t *obj,
    uint64_t byte_count);
extern void of_flow_stats_entry_byte_count_get(
    of_flow_stats_entry_t *obj,
    uint64_t *byte_count);

extern int WARN_UNUSED_RESULT of_flow_stats_entry_match_set(
    of_flow_stats_entry_t *obj,
    of_match_t *match);
extern int WARN_UNUSED_RESULT of_flow_stats_entry_match_get(
    of_flow_stats_entry_t *obj,
    of_match_t *match);

extern int WARN_UNUSED_RESULT of_flow_stats_entry_instructions_set(
    of_flow_stats_entry_t *obj,
    of_list_instruction_t *instructions);
extern void of_flow_stats_entry_instructions_bind(
    of_flow_stats_entry_t *obj,
    of_list_instruction_t *instructions);
extern of_list_instruction_t *of_flow_stats_entry_instructions_get(
    of_flow_stats_entry_t *obj);

extern int WARN_UNUSED_RESULT of_flow_stats_entry_actions_set(
    of_flow_stats_entry_t *obj,
    of_list_action_t *actions);
extern void of_flow_stats_entry_actions_bind(
    of_flow_stats_entry_t *obj,
    of_list_action_t *actions);
extern of_list_action_t *of_flow_stats_entry_actions_get(
    of_flow_stats_entry_t *obj);

/* Unified accessor functions for of_group_desc_stats_entry */

extern void of_group_desc_stats_entry_group_type_set(
    of_group_desc_stats_entry_t *obj,
    uint8_t group_type);
extern void of_group_desc_stats_entry_group_type_get(
    of_group_desc_stats_entry_t *obj,
    uint8_t *group_type);

extern void of_group_desc_stats_entry_group_id_set(
    of_group_desc_stats_entry_t *obj,
    uint32_t group_id);
extern void of_group_desc_stats_entry_group_id_get(
    of_group_desc_stats_entry_t *obj,
    uint32_t *group_id);

extern int WARN_UNUSED_RESULT of_group_desc_stats_entry_buckets_set(
    of_group_desc_stats_entry_t *obj,
    of_list_bucket_t *buckets);
extern void of_group_desc_stats_entry_buckets_bind(
    of_group_desc_stats_entry_t *obj,
    of_list_bucket_t *buckets);
extern of_list_bucket_t *of_group_desc_stats_entry_buckets_get(
    of_group_desc_stats_entry_t *obj);

/* Unified accessor functions for of_group_stats_entry */

extern void of_group_stats_entry_group_id_set(
    of_group_stats_entry_t *obj,
    uint32_t group_id);
extern void of_group_stats_entry_group_id_get(
    of_group_stats_entry_t *obj,
    uint32_t *group_id);

extern void of_group_stats_entry_ref_count_set(
    of_group_stats_entry_t *obj,
    uint32_t ref_count);
extern void of_group_stats_entry_ref_count_get(
    of_group_stats_entry_t *obj,
    uint32_t *ref_count);

extern void of_group_stats_entry_packet_count_set(
    of_group_stats_entry_t *obj,
    uint64_t packet_count);
extern void of_group_stats_entry_packet_count_get(
    of_group_stats_entry_t *obj,
    uint64_t *packet_count);

extern void of_group_stats_entry_byte_count_set(
    of_group_stats_entry_t *obj,
    uint64_t byte_count);
extern void of_group_stats_entry_byte_count_get(
    of_group_stats_entry_t *obj,
    uint64_t *byte_count);

extern void of_group_stats_entry_duration_sec_set(
    of_group_stats_entry_t *obj,
    uint32_t duration_sec);
extern void of_group_stats_entry_duration_sec_get(
    of_group_stats_entry_t *obj,
    uint32_t *duration_sec);

extern void of_group_stats_entry_duration_nsec_set(
    of_group_stats_entry_t *obj,
    uint32_t duration_nsec);
extern void of_group_stats_entry_duration_nsec_get(
    of_group_stats_entry_t *obj,
    uint32_t *duration_nsec);

extern int WARN_UNUSED_RESULT of_group_stats_entry_bucket_stats_set(
    of_group_stats_entry_t *obj,
    of_list_bucket_counter_t *bucket_stats);
extern void of_group_stats_entry_bucket_stats_bind(
    of_group_stats_entry_t *obj,
    of_list_bucket_counter_t *bucket_stats);
extern of_list_bucket_counter_t *of_group_stats_entry_bucket_stats_get(
    of_group_stats_entry_t *obj);

/* Unified accessor functions for of_header */

extern void of_header_xid_set(
    of_header_t *obj,
    uint32_t xid);
extern void of_header_xid_get(
    of_header_t *obj,
    uint32_t *xid);

/* Unified accessor functions for of_hello_elem_header */

/* Unified accessor functions for of_hello_elem_versionbitmap */

extern int WARN_UNUSED_RESULT of_hello_elem_versionbitmap_bitmaps_set(
    of_hello_elem_versionbitmap_t *obj,
    of_list_uint32_t *bitmaps);
extern void of_hello_elem_versionbitmap_bitmaps_bind(
    of_hello_elem_versionbitmap_t *obj,
    of_list_uint32_t *bitmaps);
extern of_list_uint32_t *of_hello_elem_versionbitmap_bitmaps_get(
    of_hello_elem_versionbitmap_t *obj);

/* Unified accessor functions for of_instruction_apply_actions */

extern int WARN_UNUSED_RESULT of_instruction_apply_actions_actions_set(
    of_instruction_apply_actions_t *obj,
    of_list_action_t *actions);
extern void of_instruction_apply_actions_actions_bind(
    of_instruction_apply_actions_t *obj,
    of_list_action_t *actions);
extern of_list_action_t *of_instruction_apply_actions_actions_get(
    of_instruction_apply_actions_t *obj);

/* Unified accessor functions for of_instruction_bsn */

extern void of_instruction_bsn_experimenter_set(
    of_instruction_bsn_t *obj,
    uint32_t experimenter);
extern void of_instruction_bsn_experimenter_get(
    of_instruction_bsn_t *obj,
    uint32_t *experimenter);

extern void of_instruction_bsn_subtype_set(
    of_instruction_bsn_t *obj,
    uint32_t subtype);
extern void of_instruction_bsn_subtype_get(
    of_instruction_bsn_t *obj,
    uint32_t *subtype);

/* Unified accessor functions for of_instruction_bsn_disable_src_mac_check */

extern void of_instruction_bsn_disable_src_mac_check_experimenter_set(
    of_instruction_bsn_disable_src_mac_check_t *obj,
    uint32_t experimenter);
extern void of_instruction_bsn_disable_src_mac_check_experimenter_get(
    of_instruction_bsn_disable_src_mac_check_t *obj,
    uint32_t *experimenter);

extern void of_instruction_bsn_disable_src_mac_check_subtype_set(
    of_instruction_bsn_disable_src_mac_check_t *obj,
    uint32_t subtype);
extern void of_instruction_bsn_disable_src_mac_check_subtype_get(
    of_instruction_bsn_disable_src_mac_check_t *obj,
    uint32_t *subtype);

/* Unified accessor functions for of_instruction_clear_actions */

/* Unified accessor functions for of_instruction_experimenter */

extern void of_instruction_experimenter_experimenter_set(
    of_instruction_experimenter_t *obj,
    uint32_t experimenter);
extern void of_instruction_experimenter_experimenter_get(
    of_instruction_experimenter_t *obj,
    uint32_t *experimenter);

extern int WARN_UNUSED_RESULT of_instruction_experimenter_data_set(
    of_instruction_experimenter_t *obj,
    of_octets_t *data);
extern void of_instruction_experimenter_data_get(
    of_instruction_experimenter_t *obj,
    of_octets_t *data);

/* Unified accessor functions for of_instruction_goto_table */

extern void of_instruction_goto_table_table_id_set(
    of_instruction_goto_table_t *obj,
    uint8_t table_id);
extern void of_instruction_goto_table_table_id_get(
    of_instruction_goto_table_t *obj,
    uint8_t *table_id);

/* Unified accessor functions for of_instruction_header */

/* Unified accessor functions for of_instruction_id_apply_actions */

/* Unified accessor functions for of_instruction_id_bsn */

extern void of_instruction_id_bsn_experimenter_set(
    of_instruction_id_bsn_t *obj,
    uint32_t experimenter);
extern void of_instruction_id_bsn_experimenter_get(
    of_instruction_id_bsn_t *obj,
    uint32_t *experimenter);

extern void of_instruction_id_bsn_subtype_set(
    of_instruction_id_bsn_t *obj,
    uint32_t subtype);
extern void of_instruction_id_bsn_subtype_get(
    of_instruction_id_bsn_t *obj,
    uint32_t *subtype);

/* Unified accessor functions for of_instruction_id_bsn_disable_src_mac_check */

extern void of_instruction_id_bsn_disable_src_mac_check_experimenter_set(
    of_instruction_id_bsn_disable_src_mac_check_t *obj,
    uint32_t experimenter);
extern void of_instruction_id_bsn_disable_src_mac_check_experimenter_get(
    of_instruction_id_bsn_disable_src_mac_check_t *obj,
    uint32_t *experimenter);

extern void of_instruction_id_bsn_disable_src_mac_check_subtype_set(
    of_instruction_id_bsn_disable_src_mac_check_t *obj,
    uint32_t subtype);
extern void of_instruction_id_bsn_disable_src_mac_check_subtype_get(
    of_instruction_id_bsn_disable_src_mac_check_t *obj,
    uint32_t *subtype);

/* Unified accessor functions for of_instruction_id_clear_actions */

/* Unified accessor functions for of_instruction_id_experimenter */

extern void of_instruction_id_experimenter_experimenter_set(
    of_instruction_id_experimenter_t *obj,
    uint32_t experimenter);
extern void of_instruction_id_experimenter_experimenter_get(
    of_instruction_id_experimenter_t *obj,
    uint32_t *experimenter);

/* Unified accessor functions for of_instruction_id_goto_table */

/* Unified accessor functions for of_instruction_id_header */

/* Unified accessor functions for of_instruction_id_meter */

/* Unified accessor functions for of_instruction_id_write_actions */

/* Unified accessor functions for of_instruction_id_write_metadata */

/* Unified accessor functions for of_instruction_meter */

extern void of_instruction_meter_meter_id_set(
    of_instruction_meter_t *obj,
    uint32_t meter_id);
extern void of_instruction_meter_meter_id_get(
    of_instruction_meter_t *obj,
    uint32_t *meter_id);

/* Unified accessor functions for of_instruction_write_actions */

extern int WARN_UNUSED_RESULT of_instruction_write_actions_actions_set(
    of_instruction_write_actions_t *obj,
    of_list_action_t *actions);
extern void of_instruction_write_actions_actions_bind(
    of_instruction_write_actions_t *obj,
    of_list_action_t *actions);
extern of_list_action_t *of_instruction_write_actions_actions_get(
    of_instruction_write_actions_t *obj);

/* Unified accessor functions for of_instruction_write_metadata */

extern void of_instruction_write_metadata_metadata_set(
    of_instruction_write_metadata_t *obj,
    uint64_t metadata);
extern void of_instruction_write_metadata_metadata_get(
    of_instruction_write_metadata_t *obj,
    uint64_t *metadata);

extern void of_instruction_write_metadata_metadata_mask_set(
    of_instruction_write_metadata_t *obj,
    uint64_t metadata_mask);
extern void of_instruction_write_metadata_metadata_mask_get(
    of_instruction_write_metadata_t *obj,
    uint64_t *metadata_mask);

/* Unified accessor functions for of_match_v1 */

extern void of_match_v1_wildcards_set(
    of_match_v1_t *obj,
    of_wc_bmap_t wildcards);
extern void of_match_v1_wildcards_get(
    of_match_v1_t *obj,
    of_wc_bmap_t *wildcards);

extern void of_match_v1_in_port_set(
    of_match_v1_t *obj,
    of_port_no_t in_port);
extern void of_match_v1_in_port_get(
    of_match_v1_t *obj,
    of_port_no_t *in_port);

extern void of_match_v1_eth_src_set(
    of_match_v1_t *obj,
    of_mac_addr_t eth_src);
extern void of_match_v1_eth_src_get(
    of_match_v1_t *obj,
    of_mac_addr_t *eth_src);

extern void of_match_v1_eth_dst_set(
    of_match_v1_t *obj,
    of_mac_addr_t eth_dst);
extern void of_match_v1_eth_dst_get(
    of_match_v1_t *obj,
    of_mac_addr_t *eth_dst);

extern void of_match_v1_vlan_vid_set(
    of_match_v1_t *obj,
    uint16_t vlan_vid);
extern void of_match_v1_vlan_vid_get(
    of_match_v1_t *obj,
    uint16_t *vlan_vid);

extern void of_match_v1_vlan_pcp_set(
    of_match_v1_t *obj,
    uint8_t vlan_pcp);
extern void of_match_v1_vlan_pcp_get(
    of_match_v1_t *obj,
    uint8_t *vlan_pcp);

extern void of_match_v1_eth_type_set(
    of_match_v1_t *obj,
    uint16_t eth_type);
extern void of_match_v1_eth_type_get(
    of_match_v1_t *obj,
    uint16_t *eth_type);

extern void of_match_v1_ip_dscp_set(
    of_match_v1_t *obj,
    uint8_t ip_dscp);
extern void of_match_v1_ip_dscp_get(
    of_match_v1_t *obj,
    uint8_t *ip_dscp);

extern void of_match_v1_ip_proto_set(
    of_match_v1_t *obj,
    uint8_t ip_proto);
extern void of_match_v1_ip_proto_get(
    of_match_v1_t *obj,
    uint8_t *ip_proto);

extern void of_match_v1_ipv4_src_set(
    of_match_v1_t *obj,
    of_ipv4_t ipv4_src);
extern void of_match_v1_ipv4_src_get(
    of_match_v1_t *obj,
    of_ipv4_t *ipv4_src);

extern void of_match_v1_ipv4_dst_set(
    of_match_v1_t *obj,
    of_ipv4_t ipv4_dst);
extern void of_match_v1_ipv4_dst_get(
    of_match_v1_t *obj,
    of_ipv4_t *ipv4_dst);

extern void of_match_v1_tcp_src_set(
    of_match_v1_t *obj,
    uint16_t tcp_src);
extern void of_match_v1_tcp_src_get(
    of_match_v1_t *obj,
    uint16_t *tcp_src);

extern void of_match_v1_tcp_dst_set(
    of_match_v1_t *obj,
    uint16_t tcp_dst);
extern void of_match_v1_tcp_dst_get(
    of_match_v1_t *obj,
    uint16_t *tcp_dst);

/* Unified accessor functions for of_match_v2 */

extern void of_match_v2_in_port_set(
    of_match_v2_t *obj,
    of_port_no_t in_port);
extern void of_match_v2_in_port_get(
    of_match_v2_t *obj,
    of_port_no_t *in_port);

extern void of_match_v2_wildcards_set(
    of_match_v2_t *obj,
    of_wc_bmap_t wildcards);
extern void of_match_v2_wildcards_get(
    of_match_v2_t *obj,
    of_wc_bmap_t *wildcards);

extern void of_match_v2_eth_src_set(
    of_match_v2_t *obj,
    of_mac_addr_t eth_src);
extern void of_match_v2_eth_src_get(
    of_match_v2_t *obj,
    of_mac_addr_t *eth_src);

extern void of_match_v2_eth_src_mask_set(
    of_match_v2_t *obj,
    of_mac_addr_t eth_src_mask);
extern void of_match_v2_eth_src_mask_get(
    of_match_v2_t *obj,
    of_mac_addr_t *eth_src_mask);

extern void of_match_v2_eth_dst_set(
    of_match_v2_t *obj,
    of_mac_addr_t eth_dst);
extern void of_match_v2_eth_dst_get(
    of_match_v2_t *obj,
    of_mac_addr_t *eth_dst);

extern void of_match_v2_eth_dst_mask_set(
    of_match_v2_t *obj,
    of_mac_addr_t eth_dst_mask);
extern void of_match_v2_eth_dst_mask_get(
    of_match_v2_t *obj,
    of_mac_addr_t *eth_dst_mask);

extern void of_match_v2_vlan_vid_set(
    of_match_v2_t *obj,
    uint16_t vlan_vid);
extern void of_match_v2_vlan_vid_get(
    of_match_v2_t *obj,
    uint16_t *vlan_vid);

extern void of_match_v2_vlan_pcp_set(
    of_match_v2_t *obj,
    uint8_t vlan_pcp);
extern void of_match_v2_vlan_pcp_get(
    of_match_v2_t *obj,
    uint8_t *vlan_pcp);

extern void of_match_v2_eth_type_set(
    of_match_v2_t *obj,
    uint16_t eth_type);
extern void of_match_v2_eth_type_get(
    of_match_v2_t *obj,
    uint16_t *eth_type);

extern void of_match_v2_ip_dscp_set(
    of_match_v2_t *obj,
    uint8_t ip_dscp);
extern void of_match_v2_ip_dscp_get(
    of_match_v2_t *obj,
    uint8_t *ip_dscp);

extern void of_match_v2_ip_proto_set(
    of_match_v2_t *obj,
    uint8_t ip_proto);
extern void of_match_v2_ip_proto_get(
    of_match_v2_t *obj,
    uint8_t *ip_proto);

extern void of_match_v2_ipv4_src_set(
    of_match_v2_t *obj,
    of_ipv4_t ipv4_src);
extern void of_match_v2_ipv4_src_get(
    of_match_v2_t *obj,
    of_ipv4_t *ipv4_src);

extern void of_match_v2_ipv4_src_mask_set(
    of_match_v2_t *obj,
    of_ipv4_t ipv4_src_mask);
extern void of_match_v2_ipv4_src_mask_get(
    of_match_v2_t *obj,
    of_ipv4_t *ipv4_src_mask);

extern void of_match_v2_ipv4_dst_set(
    of_match_v2_t *obj,
    of_ipv4_t ipv4_dst);
extern void of_match_v2_ipv4_dst_get(
    of_match_v2_t *obj,
    of_ipv4_t *ipv4_dst);

extern void of_match_v2_ipv4_dst_mask_set(
    of_match_v2_t *obj,
    of_ipv4_t ipv4_dst_mask);
extern void of_match_v2_ipv4_dst_mask_get(
    of_match_v2_t *obj,
    of_ipv4_t *ipv4_dst_mask);

extern void of_match_v2_tcp_src_set(
    of_match_v2_t *obj,
    uint16_t tcp_src);
extern void of_match_v2_tcp_src_get(
    of_match_v2_t *obj,
    uint16_t *tcp_src);

extern void of_match_v2_tcp_dst_set(
    of_match_v2_t *obj,
    uint16_t tcp_dst);
extern void of_match_v2_tcp_dst_get(
    of_match_v2_t *obj,
    uint16_t *tcp_dst);

extern void of_match_v2_mpls_label_set(
    of_match_v2_t *obj,
    uint32_t mpls_label);
extern void of_match_v2_mpls_label_get(
    of_match_v2_t *obj,
    uint32_t *mpls_label);

extern void of_match_v2_mpls_tc_set(
    of_match_v2_t *obj,
    uint8_t mpls_tc);
extern void of_match_v2_mpls_tc_get(
    of_match_v2_t *obj,
    uint8_t *mpls_tc);

extern void of_match_v2_metadata_set(
    of_match_v2_t *obj,
    uint64_t metadata);
extern void of_match_v2_metadata_get(
    of_match_v2_t *obj,
    uint64_t *metadata);

extern void of_match_v2_metadata_mask_set(
    of_match_v2_t *obj,
    uint64_t metadata_mask);
extern void of_match_v2_metadata_mask_get(
    of_match_v2_t *obj,
    uint64_t *metadata_mask);

/* Unified accessor functions for of_match_v3 */

extern int WARN_UNUSED_RESULT of_match_v3_oxm_list_set(
    of_match_v3_t *obj,
    of_list_oxm_t *oxm_list);
extern void of_match_v3_oxm_list_bind(
    of_match_v3_t *obj,
    of_list_oxm_t *oxm_list);
extern of_list_oxm_t *of_match_v3_oxm_list_get(
    of_match_v3_t *obj);

/* Unified accessor functions for of_meter_band_drop */

extern void of_meter_band_drop_rate_set(
    of_meter_band_drop_t *obj,
    uint32_t rate);
extern void of_meter_band_drop_rate_get(
    of_meter_band_drop_t *obj,
    uint32_t *rate);

extern void of_meter_band_drop_burst_size_set(
    of_meter_band_drop_t *obj,
    uint32_t burst_size);
extern void of_meter_band_drop_burst_size_get(
    of_meter_band_drop_t *obj,
    uint32_t *burst_size);

/* Unified accessor functions for of_meter_band_dscp_remark */

extern void of_meter_band_dscp_remark_rate_set(
    of_meter_band_dscp_remark_t *obj,
    uint32_t rate);
extern void of_meter_band_dscp_remark_rate_get(
    of_meter_band_dscp_remark_t *obj,
    uint32_t *rate);

extern void of_meter_band_dscp_remark_burst_size_set(
    of_meter_band_dscp_remark_t *obj,
    uint32_t burst_size);
extern void of_meter_band_dscp_remark_burst_size_get(
    of_meter_band_dscp_remark_t *obj,
    uint32_t *burst_size);

extern void of_meter_band_dscp_remark_prec_level_set(
    of_meter_band_dscp_remark_t *obj,
    uint8_t prec_level);
extern void of_meter_band_dscp_remark_prec_level_get(
    of_meter_band_dscp_remark_t *obj,
    uint8_t *prec_level);

/* Unified accessor functions for of_meter_band_experimenter */

extern void of_meter_band_experimenter_rate_set(
    of_meter_band_experimenter_t *obj,
    uint32_t rate);
extern void of_meter_band_experimenter_rate_get(
    of_meter_band_experimenter_t *obj,
    uint32_t *rate);

extern void of_meter_band_experimenter_burst_size_set(
    of_meter_band_experimenter_t *obj,
    uint32_t burst_size);
extern void of_meter_band_experimenter_burst_size_get(
    of_meter_band_experimenter_t *obj,
    uint32_t *burst_size);

extern void of_meter_band_experimenter_experimenter_set(
    of_meter_band_experimenter_t *obj,
    uint32_t experimenter);
extern void of_meter_band_experimenter_experimenter_get(
    of_meter_band_experimenter_t *obj,
    uint32_t *experimenter);

/* Unified accessor functions for of_meter_band_header */

/* Unified accessor functions for of_meter_band_stats */

extern void of_meter_band_stats_packet_band_count_set(
    of_meter_band_stats_t *obj,
    uint64_t packet_band_count);
extern void of_meter_band_stats_packet_band_count_get(
    of_meter_band_stats_t *obj,
    uint64_t *packet_band_count);

extern void of_meter_band_stats_byte_band_count_set(
    of_meter_band_stats_t *obj,
    uint64_t byte_band_count);
extern void of_meter_band_stats_byte_band_count_get(
    of_meter_band_stats_t *obj,
    uint64_t *byte_band_count);

/* Unified accessor functions for of_meter_config */

extern void of_meter_config_flags_set(
    of_meter_config_t *obj,
    uint16_t flags);
extern void of_meter_config_flags_get(
    of_meter_config_t *obj,
    uint16_t *flags);

extern void of_meter_config_meter_id_set(
    of_meter_config_t *obj,
    uint32_t meter_id);
extern void of_meter_config_meter_id_get(
    of_meter_config_t *obj,
    uint32_t *meter_id);

extern int WARN_UNUSED_RESULT of_meter_config_entries_set(
    of_meter_config_t *obj,
    of_list_meter_band_t *entries);
extern void of_meter_config_entries_bind(
    of_meter_config_t *obj,
    of_list_meter_band_t *entries);
extern of_list_meter_band_t *of_meter_config_entries_get(
    of_meter_config_t *obj);

/* Unified accessor functions for of_meter_features */

extern void of_meter_features_max_meter_set(
    of_meter_features_t *obj,
    uint32_t max_meter);
extern void of_meter_features_max_meter_get(
    of_meter_features_t *obj,
    uint32_t *max_meter);

extern void of_meter_features_band_types_set(
    of_meter_features_t *obj,
    uint32_t band_types);
extern void of_meter_features_band_types_get(
    of_meter_features_t *obj,
    uint32_t *band_types);

extern void of_meter_features_capabilities_set(
    of_meter_features_t *obj,
    uint32_t capabilities);
extern void of_meter_features_capabilities_get(
    of_meter_features_t *obj,
    uint32_t *capabilities);

extern void of_meter_features_max_bands_set(
    of_meter_features_t *obj,
    uint8_t max_bands);
extern void of_meter_features_max_bands_get(
    of_meter_features_t *obj,
    uint8_t *max_bands);

extern void of_meter_features_max_color_set(
    of_meter_features_t *obj,
    uint8_t max_color);
extern void of_meter_features_max_color_get(
    of_meter_features_t *obj,
    uint8_t *max_color);

/* Unified accessor functions for of_meter_stats */

extern void of_meter_stats_meter_id_set(
    of_meter_stats_t *obj,
    uint32_t meter_id);
extern void of_meter_stats_meter_id_get(
    of_meter_stats_t *obj,
    uint32_t *meter_id);

extern void of_meter_stats_flow_count_set(
    of_meter_stats_t *obj,
    uint32_t flow_count);
extern void of_meter_stats_flow_count_get(
    of_meter_stats_t *obj,
    uint32_t *flow_count);

extern void of_meter_stats_packet_in_count_set(
    of_meter_stats_t *obj,
    uint64_t packet_in_count);
extern void of_meter_stats_packet_in_count_get(
    of_meter_stats_t *obj,
    uint64_t *packet_in_count);

extern void of_meter_stats_byte_in_count_set(
    of_meter_stats_t *obj,
    uint64_t byte_in_count);
extern void of_meter_stats_byte_in_count_get(
    of_meter_stats_t *obj,
    uint64_t *byte_in_count);

extern void of_meter_stats_duration_sec_set(
    of_meter_stats_t *obj,
    uint32_t duration_sec);
extern void of_meter_stats_duration_sec_get(
    of_meter_stats_t *obj,
    uint32_t *duration_sec);

extern void of_meter_stats_duration_nsec_set(
    of_meter_stats_t *obj,
    uint32_t duration_nsec);
extern void of_meter_stats_duration_nsec_get(
    of_meter_stats_t *obj,
    uint32_t *duration_nsec);

extern int WARN_UNUSED_RESULT of_meter_stats_band_stats_set(
    of_meter_stats_t *obj,
    of_list_meter_band_stats_t *band_stats);
extern void of_meter_stats_band_stats_bind(
    of_meter_stats_t *obj,
    of_list_meter_band_stats_t *band_stats);
extern of_list_meter_band_stats_t *of_meter_stats_band_stats_get(
    of_meter_stats_t *obj);

/* Unified accessor functions for of_oxm_arp_op */

extern void of_oxm_arp_op_value_set(
    of_oxm_arp_op_t *obj,
    uint16_t value);
extern void of_oxm_arp_op_value_get(
    of_oxm_arp_op_t *obj,
    uint16_t *value);

/* Unified accessor functions for of_oxm_arp_op_masked */

extern void of_oxm_arp_op_masked_value_set(
    of_oxm_arp_op_masked_t *obj,
    uint16_t value);
extern void of_oxm_arp_op_masked_value_get(
    of_oxm_arp_op_masked_t *obj,
    uint16_t *value);

extern void of_oxm_arp_op_masked_value_mask_set(
    of_oxm_arp_op_masked_t *obj,
    uint16_t value_mask);
extern void of_oxm_arp_op_masked_value_mask_get(
    of_oxm_arp_op_masked_t *obj,
    uint16_t *value_mask);

/* Unified accessor functions for of_oxm_arp_sha */

extern void of_oxm_arp_sha_value_set(
    of_oxm_arp_sha_t *obj,
    of_mac_addr_t value);
extern void of_oxm_arp_sha_value_get(
    of_oxm_arp_sha_t *obj,
    of_mac_addr_t *value);

/* Unified accessor functions for of_oxm_arp_sha_masked */

extern void of_oxm_arp_sha_masked_value_set(
    of_oxm_arp_sha_masked_t *obj,
    of_mac_addr_t value);
extern void of_oxm_arp_sha_masked_value_get(
    of_oxm_arp_sha_masked_t *obj,
    of_mac_addr_t *value);

extern void of_oxm_arp_sha_masked_value_mask_set(
    of_oxm_arp_sha_masked_t *obj,
    of_mac_addr_t value_mask);
extern void of_oxm_arp_sha_masked_value_mask_get(
    of_oxm_arp_sha_masked_t *obj,
    of_mac_addr_t *value_mask);

/* Unified accessor functions for of_oxm_arp_spa */

extern void of_oxm_arp_spa_value_set(
    of_oxm_arp_spa_t *obj,
    uint32_t value);
extern void of_oxm_arp_spa_value_get(
    of_oxm_arp_spa_t *obj,
    uint32_t *value);

/* Unified accessor functions for of_oxm_arp_spa_masked */

extern void of_oxm_arp_spa_masked_value_set(
    of_oxm_arp_spa_masked_t *obj,
    uint32_t value);
extern void of_oxm_arp_spa_masked_value_get(
    of_oxm_arp_spa_masked_t *obj,
    uint32_t *value);

extern void of_oxm_arp_spa_masked_value_mask_set(
    of_oxm_arp_spa_masked_t *obj,
    uint32_t value_mask);
extern void of_oxm_arp_spa_masked_value_mask_get(
    of_oxm_arp_spa_masked_t *obj,
    uint32_t *value_mask);

/* Unified accessor functions for of_oxm_arp_tha */

extern void of_oxm_arp_tha_value_set(
    of_oxm_arp_tha_t *obj,
    of_mac_addr_t value);
extern void of_oxm_arp_tha_value_get(
    of_oxm_arp_tha_t *obj,
    of_mac_addr_t *value);

/* Unified accessor functions for of_oxm_arp_tha_masked */

extern void of_oxm_arp_tha_masked_value_set(
    of_oxm_arp_tha_masked_t *obj,
    of_mac_addr_t value);
extern void of_oxm_arp_tha_masked_value_get(
    of_oxm_arp_tha_masked_t *obj,
    of_mac_addr_t *value);

extern void of_oxm_arp_tha_masked_value_mask_set(
    of_oxm_arp_tha_masked_t *obj,
    of_mac_addr_t value_mask);
extern void of_oxm_arp_tha_masked_value_mask_get(
    of_oxm_arp_tha_masked_t *obj,
    of_mac_addr_t *value_mask);

/* Unified accessor functions for of_oxm_arp_tpa */

extern void of_oxm_arp_tpa_value_set(
    of_oxm_arp_tpa_t *obj,
    uint32_t value);
extern void of_oxm_arp_tpa_value_get(
    of_oxm_arp_tpa_t *obj,
    uint32_t *value);

/* Unified accessor functions for of_oxm_arp_tpa_masked */

extern void of_oxm_arp_tpa_masked_value_set(
    of_oxm_arp_tpa_masked_t *obj,
    uint32_t value);
extern void of_oxm_arp_tpa_masked_value_get(
    of_oxm_arp_tpa_masked_t *obj,
    uint32_t *value);

extern void of_oxm_arp_tpa_masked_value_mask_set(
    of_oxm_arp_tpa_masked_t *obj,
    uint32_t value_mask);
extern void of_oxm_arp_tpa_masked_value_mask_get(
    of_oxm_arp_tpa_masked_t *obj,
    uint32_t *value_mask);

/* Unified accessor functions for of_oxm_bsn_global_vrf_allowed */

extern void of_oxm_bsn_global_vrf_allowed_value_set(
    of_oxm_bsn_global_vrf_allowed_t *obj,
    uint8_t value);
extern void of_oxm_bsn_global_vrf_allowed_value_get(
    of_oxm_bsn_global_vrf_allowed_t *obj,
    uint8_t *value);

/* Unified accessor functions for of_oxm_bsn_global_vrf_allowed_masked */

extern void of_oxm_bsn_global_vrf_allowed_masked_value_set(
    of_oxm_bsn_global_vrf_allowed_masked_t *obj,
    uint8_t value);
extern void of_oxm_bsn_global_vrf_allowed_masked_value_get(
    of_oxm_bsn_global_vrf_allowed_masked_t *obj,
    uint8_t *value);

extern void of_oxm_bsn_global_vrf_allowed_masked_value_mask_set(
    of_oxm_bsn_global_vrf_allowed_masked_t *obj,
    uint8_t value_mask);
extern void of_oxm_bsn_global_vrf_allowed_masked_value_mask_get(
    of_oxm_bsn_global_vrf_allowed_masked_t *obj,
    uint8_t *value_mask);

/* Unified accessor functions for of_oxm_bsn_in_ports_128 */

extern void of_oxm_bsn_in_ports_128_value_set(
    of_oxm_bsn_in_ports_128_t *obj,
    of_bitmap_128_t value);
extern void of_oxm_bsn_in_ports_128_value_get(
    of_oxm_bsn_in_ports_128_t *obj,
    of_bitmap_128_t *value);

/* Unified accessor functions for of_oxm_bsn_in_ports_128_masked */

extern void of_oxm_bsn_in_ports_128_masked_value_set(
    of_oxm_bsn_in_ports_128_masked_t *obj,
    of_bitmap_128_t value);
extern void of_oxm_bsn_in_ports_128_masked_value_get(
    of_oxm_bsn_in_ports_128_masked_t *obj,
    of_bitmap_128_t *value);

extern void of_oxm_bsn_in_ports_128_masked_value_mask_set(
    of_oxm_bsn_in_ports_128_masked_t *obj,
    of_bitmap_128_t value_mask);
extern void of_oxm_bsn_in_ports_128_masked_value_mask_get(
    of_oxm_bsn_in_ports_128_masked_t *obj,
    of_bitmap_128_t *value_mask);

/* Unified accessor functions for of_oxm_bsn_l3_dst_class_id */

extern void of_oxm_bsn_l3_dst_class_id_value_set(
    of_oxm_bsn_l3_dst_class_id_t *obj,
    uint32_t value);
extern void of_oxm_bsn_l3_dst_class_id_value_get(
    of_oxm_bsn_l3_dst_class_id_t *obj,
    uint32_t *value);

/* Unified accessor functions for of_oxm_bsn_l3_dst_class_id_masked */

extern void of_oxm_bsn_l3_dst_class_id_masked_value_set(
    of_oxm_bsn_l3_dst_class_id_masked_t *obj,
    uint32_t value);
extern void of_oxm_bsn_l3_dst_class_id_masked_value_get(
    of_oxm_bsn_l3_dst_class_id_masked_t *obj,
    uint32_t *value);

extern void of_oxm_bsn_l3_dst_class_id_masked_value_mask_set(
    of_oxm_bsn_l3_dst_class_id_masked_t *obj,
    uint32_t value_mask);
extern void of_oxm_bsn_l3_dst_class_id_masked_value_mask_get(
    of_oxm_bsn_l3_dst_class_id_masked_t *obj,
    uint32_t *value_mask);

/* Unified accessor functions for of_oxm_bsn_l3_interface_class_id */

extern void of_oxm_bsn_l3_interface_class_id_value_set(
    of_oxm_bsn_l3_interface_class_id_t *obj,
    uint32_t value);
extern void of_oxm_bsn_l3_interface_class_id_value_get(
    of_oxm_bsn_l3_interface_class_id_t *obj,
    uint32_t *value);

/* Unified accessor functions for of_oxm_bsn_l3_interface_class_id_masked */

extern void of_oxm_bsn_l3_interface_class_id_masked_value_set(
    of_oxm_bsn_l3_interface_class_id_masked_t *obj,
    uint32_t value);
extern void of_oxm_bsn_l3_interface_class_id_masked_value_get(
    of_oxm_bsn_l3_interface_class_id_masked_t *obj,
    uint32_t *value);

extern void of_oxm_bsn_l3_interface_class_id_masked_value_mask_set(
    of_oxm_bsn_l3_interface_class_id_masked_t *obj,
    uint32_t value_mask);
extern void of_oxm_bsn_l3_interface_class_id_masked_value_mask_get(
    of_oxm_bsn_l3_interface_class_id_masked_t *obj,
    uint32_t *value_mask);

/* Unified accessor functions for of_oxm_bsn_l3_src_class_id */

extern void of_oxm_bsn_l3_src_class_id_value_set(
    of_oxm_bsn_l3_src_class_id_t *obj,
    uint32_t value);
extern void of_oxm_bsn_l3_src_class_id_value_get(
    of_oxm_bsn_l3_src_class_id_t *obj,
    uint32_t *value);

/* Unified accessor functions for of_oxm_bsn_l3_src_class_id_masked */

extern void of_oxm_bsn_l3_src_class_id_masked_value_set(
    of_oxm_bsn_l3_src_class_id_masked_t *obj,
    uint32_t value);
extern void of_oxm_bsn_l3_src_class_id_masked_value_get(
    of_oxm_bsn_l3_src_class_id_masked_t *obj,
    uint32_t *value);

extern void of_oxm_bsn_l3_src_class_id_masked_value_mask_set(
    of_oxm_bsn_l3_src_class_id_masked_t *obj,
    uint32_t value_mask);
extern void of_oxm_bsn_l3_src_class_id_masked_value_mask_get(
    of_oxm_bsn_l3_src_class_id_masked_t *obj,
    uint32_t *value_mask);

/* Unified accessor functions for of_oxm_bsn_lag_id */

extern void of_oxm_bsn_lag_id_value_set(
    of_oxm_bsn_lag_id_t *obj,
    uint32_t value);
extern void of_oxm_bsn_lag_id_value_get(
    of_oxm_bsn_lag_id_t *obj,
    uint32_t *value);

/* Unified accessor functions for of_oxm_bsn_lag_id_masked */

extern void of_oxm_bsn_lag_id_masked_value_set(
    of_oxm_bsn_lag_id_masked_t *obj,
    uint32_t value);
extern void of_oxm_bsn_lag_id_masked_value_get(
    of_oxm_bsn_lag_id_masked_t *obj,
    uint32_t *value);

extern void of_oxm_bsn_lag_id_masked_value_mask_set(
    of_oxm_bsn_lag_id_masked_t *obj,
    uint32_t value_mask);
extern void of_oxm_bsn_lag_id_masked_value_mask_get(
    of_oxm_bsn_lag_id_masked_t *obj,
    uint32_t *value_mask);

/* Unified accessor functions for of_oxm_bsn_vrf */

extern void of_oxm_bsn_vrf_value_set(
    of_oxm_bsn_vrf_t *obj,
    uint32_t value);
extern void of_oxm_bsn_vrf_value_get(
    of_oxm_bsn_vrf_t *obj,
    uint32_t *value);

/* Unified accessor functions for of_oxm_bsn_vrf_masked */

extern void of_oxm_bsn_vrf_masked_value_set(
    of_oxm_bsn_vrf_masked_t *obj,
    uint32_t value);
extern void of_oxm_bsn_vrf_masked_value_get(
    of_oxm_bsn_vrf_masked_t *obj,
    uint32_t *value);

extern void of_oxm_bsn_vrf_masked_value_mask_set(
    of_oxm_bsn_vrf_masked_t *obj,
    uint32_t value_mask);
extern void of_oxm_bsn_vrf_masked_value_mask_get(
    of_oxm_bsn_vrf_masked_t *obj,
    uint32_t *value_mask);

/* Unified accessor functions for of_oxm_eth_dst */

extern void of_oxm_eth_dst_value_set(
    of_oxm_eth_dst_t *obj,
    of_mac_addr_t value);
extern void of_oxm_eth_dst_value_get(
    of_oxm_eth_dst_t *obj,
    of_mac_addr_t *value);

/* Unified accessor functions for of_oxm_eth_dst_masked */

extern void of_oxm_eth_dst_masked_value_set(
    of_oxm_eth_dst_masked_t *obj,
    of_mac_addr_t value);
extern void of_oxm_eth_dst_masked_value_get(
    of_oxm_eth_dst_masked_t *obj,
    of_mac_addr_t *value);

extern void of_oxm_eth_dst_masked_value_mask_set(
    of_oxm_eth_dst_masked_t *obj,
    of_mac_addr_t value_mask);
extern void of_oxm_eth_dst_masked_value_mask_get(
    of_oxm_eth_dst_masked_t *obj,
    of_mac_addr_t *value_mask);

/* Unified accessor functions for of_oxm_eth_src */

extern void of_oxm_eth_src_value_set(
    of_oxm_eth_src_t *obj,
    of_mac_addr_t value);
extern void of_oxm_eth_src_value_get(
    of_oxm_eth_src_t *obj,
    of_mac_addr_t *value);

/* Unified accessor functions for of_oxm_eth_src_masked */

extern void of_oxm_eth_src_masked_value_set(
    of_oxm_eth_src_masked_t *obj,
    of_mac_addr_t value);
extern void of_oxm_eth_src_masked_value_get(
    of_oxm_eth_src_masked_t *obj,
    of_mac_addr_t *value);

extern void of_oxm_eth_src_masked_value_mask_set(
    of_oxm_eth_src_masked_t *obj,
    of_mac_addr_t value_mask);
extern void of_oxm_eth_src_masked_value_mask_get(
    of_oxm_eth_src_masked_t *obj,
    of_mac_addr_t *value_mask);

/* Unified accessor functions for of_oxm_eth_type */

extern void of_oxm_eth_type_value_set(
    of_oxm_eth_type_t *obj,
    uint16_t value);
extern void of_oxm_eth_type_value_get(
    of_oxm_eth_type_t *obj,
    uint16_t *value);

/* Unified accessor functions for of_oxm_eth_type_masked */

extern void of_oxm_eth_type_masked_value_set(
    of_oxm_eth_type_masked_t *obj,
    uint16_t value);
extern void of_oxm_eth_type_masked_value_get(
    of_oxm_eth_type_masked_t *obj,
    uint16_t *value);

extern void of_oxm_eth_type_masked_value_mask_set(
    of_oxm_eth_type_masked_t *obj,
    uint16_t value_mask);
extern void of_oxm_eth_type_masked_value_mask_get(
    of_oxm_eth_type_masked_t *obj,
    uint16_t *value_mask);

/* Unified accessor functions for of_oxm_header */

/* Unified accessor functions for of_oxm_icmpv4_code */

extern void of_oxm_icmpv4_code_value_set(
    of_oxm_icmpv4_code_t *obj,
    uint8_t value);
extern void of_oxm_icmpv4_code_value_get(
    of_oxm_icmpv4_code_t *obj,
    uint8_t *value);

/* Unified accessor functions for of_oxm_icmpv4_code_masked */

extern void of_oxm_icmpv4_code_masked_value_set(
    of_oxm_icmpv4_code_masked_t *obj,
    uint8_t value);
extern void of_oxm_icmpv4_code_masked_value_get(
    of_oxm_icmpv4_code_masked_t *obj,
    uint8_t *value);

extern void of_oxm_icmpv4_code_masked_value_mask_set(
    of_oxm_icmpv4_code_masked_t *obj,
    uint8_t value_mask);
extern void of_oxm_icmpv4_code_masked_value_mask_get(
    of_oxm_icmpv4_code_masked_t *obj,
    uint8_t *value_mask);

/* Unified accessor functions for of_oxm_icmpv4_type */

extern void of_oxm_icmpv4_type_value_set(
    of_oxm_icmpv4_type_t *obj,
    uint8_t value);
extern void of_oxm_icmpv4_type_value_get(
    of_oxm_icmpv4_type_t *obj,
    uint8_t *value);

/* Unified accessor functions for of_oxm_icmpv4_type_masked */

extern void of_oxm_icmpv4_type_masked_value_set(
    of_oxm_icmpv4_type_masked_t *obj,
    uint8_t value);
extern void of_oxm_icmpv4_type_masked_value_get(
    of_oxm_icmpv4_type_masked_t *obj,
    uint8_t *value);

extern void of_oxm_icmpv4_type_masked_value_mask_set(
    of_oxm_icmpv4_type_masked_t *obj,
    uint8_t value_mask);
extern void of_oxm_icmpv4_type_masked_value_mask_get(
    of_oxm_icmpv4_type_masked_t *obj,
    uint8_t *value_mask);

/* Unified accessor functions for of_oxm_icmpv6_code */

extern void of_oxm_icmpv6_code_value_set(
    of_oxm_icmpv6_code_t *obj,
    uint8_t value);
extern void of_oxm_icmpv6_code_value_get(
    of_oxm_icmpv6_code_t *obj,
    uint8_t *value);

/* Unified accessor functions for of_oxm_icmpv6_code_masked */

extern void of_oxm_icmpv6_code_masked_value_set(
    of_oxm_icmpv6_code_masked_t *obj,
    uint8_t value);
extern void of_oxm_icmpv6_code_masked_value_get(
    of_oxm_icmpv6_code_masked_t *obj,
    uint8_t *value);

extern void of_oxm_icmpv6_code_masked_value_mask_set(
    of_oxm_icmpv6_code_masked_t *obj,
    uint8_t value_mask);
extern void of_oxm_icmpv6_code_masked_value_mask_get(
    of_oxm_icmpv6_code_masked_t *obj,
    uint8_t *value_mask);

/* Unified accessor functions for of_oxm_icmpv6_type */

extern void of_oxm_icmpv6_type_value_set(
    of_oxm_icmpv6_type_t *obj,
    uint8_t value);
extern void of_oxm_icmpv6_type_value_get(
    of_oxm_icmpv6_type_t *obj,
    uint8_t *value);

/* Unified accessor functions for of_oxm_icmpv6_type_masked */

extern void of_oxm_icmpv6_type_masked_value_set(
    of_oxm_icmpv6_type_masked_t *obj,
    uint8_t value);
extern void of_oxm_icmpv6_type_masked_value_get(
    of_oxm_icmpv6_type_masked_t *obj,
    uint8_t *value);

extern void of_oxm_icmpv6_type_masked_value_mask_set(
    of_oxm_icmpv6_type_masked_t *obj,
    uint8_t value_mask);
extern void of_oxm_icmpv6_type_masked_value_mask_get(
    of_oxm_icmpv6_type_masked_t *obj,
    uint8_t *value_mask);

/* Unified accessor functions for of_oxm_in_phy_port */

extern void of_oxm_in_phy_port_value_set(
    of_oxm_in_phy_port_t *obj,
    of_port_no_t value);
extern void of_oxm_in_phy_port_value_get(
    of_oxm_in_phy_port_t *obj,
    of_port_no_t *value);

/* Unified accessor functions for of_oxm_in_phy_port_masked */

extern void of_oxm_in_phy_port_masked_value_set(
    of_oxm_in_phy_port_masked_t *obj,
    of_port_no_t value);
extern void of_oxm_in_phy_port_masked_value_get(
    of_oxm_in_phy_port_masked_t *obj,
    of_port_no_t *value);

extern void of_oxm_in_phy_port_masked_value_mask_set(
    of_oxm_in_phy_port_masked_t *obj,
    of_port_no_t value_mask);
extern void of_oxm_in_phy_port_masked_value_mask_get(
    of_oxm_in_phy_port_masked_t *obj,
    of_port_no_t *value_mask);

/* Unified accessor functions for of_oxm_in_port */

extern void of_oxm_in_port_value_set(
    of_oxm_in_port_t *obj,
    of_port_no_t value);
extern void of_oxm_in_port_value_get(
    of_oxm_in_port_t *obj,
    of_port_no_t *value);

/* Unified accessor functions for of_oxm_in_port_masked */

extern void of_oxm_in_port_masked_value_set(
    of_oxm_in_port_masked_t *obj,
    of_port_no_t value);
extern void of_oxm_in_port_masked_value_get(
    of_oxm_in_port_masked_t *obj,
    of_port_no_t *value);

extern void of_oxm_in_port_masked_value_mask_set(
    of_oxm_in_port_masked_t *obj,
    of_port_no_t value_mask);
extern void of_oxm_in_port_masked_value_mask_get(
    of_oxm_in_port_masked_t *obj,
    of_port_no_t *value_mask);

/* Unified accessor functions for of_oxm_ip_dscp */

extern void of_oxm_ip_dscp_value_set(
    of_oxm_ip_dscp_t *obj,
    uint8_t value);
extern void of_oxm_ip_dscp_value_get(
    of_oxm_ip_dscp_t *obj,
    uint8_t *value);

/* Unified accessor functions for of_oxm_ip_dscp_masked */

extern void of_oxm_ip_dscp_masked_value_set(
    of_oxm_ip_dscp_masked_t *obj,
    uint8_t value);
extern void of_oxm_ip_dscp_masked_value_get(
    of_oxm_ip_dscp_masked_t *obj,
    uint8_t *value);

extern void of_oxm_ip_dscp_masked_value_mask_set(
    of_oxm_ip_dscp_masked_t *obj,
    uint8_t value_mask);
extern void of_oxm_ip_dscp_masked_value_mask_get(
    of_oxm_ip_dscp_masked_t *obj,
    uint8_t *value_mask);

/* Unified accessor functions for of_oxm_ip_ecn */

extern void of_oxm_ip_ecn_value_set(
    of_oxm_ip_ecn_t *obj,
    uint8_t value);
extern void of_oxm_ip_ecn_value_get(
    of_oxm_ip_ecn_t *obj,
    uint8_t *value);

/* Unified accessor functions for of_oxm_ip_ecn_masked */

extern void of_oxm_ip_ecn_masked_value_set(
    of_oxm_ip_ecn_masked_t *obj,
    uint8_t value);
extern void of_oxm_ip_ecn_masked_value_get(
    of_oxm_ip_ecn_masked_t *obj,
    uint8_t *value);

extern void of_oxm_ip_ecn_masked_value_mask_set(
    of_oxm_ip_ecn_masked_t *obj,
    uint8_t value_mask);
extern void of_oxm_ip_ecn_masked_value_mask_get(
    of_oxm_ip_ecn_masked_t *obj,
    uint8_t *value_mask);

/* Unified accessor functions for of_oxm_ip_proto */

extern void of_oxm_ip_proto_value_set(
    of_oxm_ip_proto_t *obj,
    uint8_t value);
extern void of_oxm_ip_proto_value_get(
    of_oxm_ip_proto_t *obj,
    uint8_t *value);

/* Unified accessor functions for of_oxm_ip_proto_masked */

extern void of_oxm_ip_proto_masked_value_set(
    of_oxm_ip_proto_masked_t *obj,
    uint8_t value);
extern void of_oxm_ip_proto_masked_value_get(
    of_oxm_ip_proto_masked_t *obj,
    uint8_t *value);

extern void of_oxm_ip_proto_masked_value_mask_set(
    of_oxm_ip_proto_masked_t *obj,
    uint8_t value_mask);
extern void of_oxm_ip_proto_masked_value_mask_get(
    of_oxm_ip_proto_masked_t *obj,
    uint8_t *value_mask);

/* Unified accessor functions for of_oxm_ipv4_dst */

extern void of_oxm_ipv4_dst_value_set(
    of_oxm_ipv4_dst_t *obj,
    of_ipv4_t value);
extern void of_oxm_ipv4_dst_value_get(
    of_oxm_ipv4_dst_t *obj,
    of_ipv4_t *value);

/* Unified accessor functions for of_oxm_ipv4_dst_masked */

extern void of_oxm_ipv4_dst_masked_value_set(
    of_oxm_ipv4_dst_masked_t *obj,
    of_ipv4_t value);
extern void of_oxm_ipv4_dst_masked_value_get(
    of_oxm_ipv4_dst_masked_t *obj,
    of_ipv4_t *value);

extern void of_oxm_ipv4_dst_masked_value_mask_set(
    of_oxm_ipv4_dst_masked_t *obj,
    of_ipv4_t value_mask);
extern void of_oxm_ipv4_dst_masked_value_mask_get(
    of_oxm_ipv4_dst_masked_t *obj,
    of_ipv4_t *value_mask);

/* Unified accessor functions for of_oxm_ipv4_src */

extern void of_oxm_ipv4_src_value_set(
    of_oxm_ipv4_src_t *obj,
    of_ipv4_t value);
extern void of_oxm_ipv4_src_value_get(
    of_oxm_ipv4_src_t *obj,
    of_ipv4_t *value);

/* Unified accessor functions for of_oxm_ipv4_src_masked */

extern void of_oxm_ipv4_src_masked_value_set(
    of_oxm_ipv4_src_masked_t *obj,
    of_ipv4_t value);
extern void of_oxm_ipv4_src_masked_value_get(
    of_oxm_ipv4_src_masked_t *obj,
    of_ipv4_t *value);

extern void of_oxm_ipv4_src_masked_value_mask_set(
    of_oxm_ipv4_src_masked_t *obj,
    of_ipv4_t value_mask);
extern void of_oxm_ipv4_src_masked_value_mask_get(
    of_oxm_ipv4_src_masked_t *obj,
    of_ipv4_t *value_mask);

/* Unified accessor functions for of_oxm_ipv6_dst */

extern void of_oxm_ipv6_dst_value_set(
    of_oxm_ipv6_dst_t *obj,
    of_ipv6_t value);
extern void of_oxm_ipv6_dst_value_get(
    of_oxm_ipv6_dst_t *obj,
    of_ipv6_t *value);

/* Unified accessor functions for of_oxm_ipv6_dst_masked */

extern void of_oxm_ipv6_dst_masked_value_set(
    of_oxm_ipv6_dst_masked_t *obj,
    of_ipv6_t value);
extern void of_oxm_ipv6_dst_masked_value_get(
    of_oxm_ipv6_dst_masked_t *obj,
    of_ipv6_t *value);

extern void of_oxm_ipv6_dst_masked_value_mask_set(
    of_oxm_ipv6_dst_masked_t *obj,
    of_ipv6_t value_mask);
extern void of_oxm_ipv6_dst_masked_value_mask_get(
    of_oxm_ipv6_dst_masked_t *obj,
    of_ipv6_t *value_mask);

/* Unified accessor functions for of_oxm_ipv6_flabel */

extern void of_oxm_ipv6_flabel_value_set(
    of_oxm_ipv6_flabel_t *obj,
    uint32_t value);
extern void of_oxm_ipv6_flabel_value_get(
    of_oxm_ipv6_flabel_t *obj,
    uint32_t *value);

/* Unified accessor functions for of_oxm_ipv6_flabel_masked */

extern void of_oxm_ipv6_flabel_masked_value_set(
    of_oxm_ipv6_flabel_masked_t *obj,
    uint32_t value);
extern void of_oxm_ipv6_flabel_masked_value_get(
    of_oxm_ipv6_flabel_masked_t *obj,
    uint32_t *value);

extern void of_oxm_ipv6_flabel_masked_value_mask_set(
    of_oxm_ipv6_flabel_masked_t *obj,
    uint32_t value_mask);
extern void of_oxm_ipv6_flabel_masked_value_mask_get(
    of_oxm_ipv6_flabel_masked_t *obj,
    uint32_t *value_mask);

/* Unified accessor functions for of_oxm_ipv6_nd_sll */

extern void of_oxm_ipv6_nd_sll_value_set(
    of_oxm_ipv6_nd_sll_t *obj,
    of_mac_addr_t value);
extern void of_oxm_ipv6_nd_sll_value_get(
    of_oxm_ipv6_nd_sll_t *obj,
    of_mac_addr_t *value);

/* Unified accessor functions for of_oxm_ipv6_nd_sll_masked */

extern void of_oxm_ipv6_nd_sll_masked_value_set(
    of_oxm_ipv6_nd_sll_masked_t *obj,
    of_mac_addr_t value);
extern void of_oxm_ipv6_nd_sll_masked_value_get(
    of_oxm_ipv6_nd_sll_masked_t *obj,
    of_mac_addr_t *value);

extern void of_oxm_ipv6_nd_sll_masked_value_mask_set(
    of_oxm_ipv6_nd_sll_masked_t *obj,
    of_mac_addr_t value_mask);
extern void of_oxm_ipv6_nd_sll_masked_value_mask_get(
    of_oxm_ipv6_nd_sll_masked_t *obj,
    of_mac_addr_t *value_mask);

/* Unified accessor functions for of_oxm_ipv6_nd_target */

extern void of_oxm_ipv6_nd_target_value_set(
    of_oxm_ipv6_nd_target_t *obj,
    of_ipv6_t value);
extern void of_oxm_ipv6_nd_target_value_get(
    of_oxm_ipv6_nd_target_t *obj,
    of_ipv6_t *value);

/* Unified accessor functions for of_oxm_ipv6_nd_target_masked */

extern void of_oxm_ipv6_nd_target_masked_value_set(
    of_oxm_ipv6_nd_target_masked_t *obj,
    of_ipv6_t value);
extern void of_oxm_ipv6_nd_target_masked_value_get(
    of_oxm_ipv6_nd_target_masked_t *obj,
    of_ipv6_t *value);

extern void of_oxm_ipv6_nd_target_masked_value_mask_set(
    of_oxm_ipv6_nd_target_masked_t *obj,
    of_ipv6_t value_mask);
extern void of_oxm_ipv6_nd_target_masked_value_mask_get(
    of_oxm_ipv6_nd_target_masked_t *obj,
    of_ipv6_t *value_mask);

/* Unified accessor functions for of_oxm_ipv6_nd_tll */

extern void of_oxm_ipv6_nd_tll_value_set(
    of_oxm_ipv6_nd_tll_t *obj,
    of_mac_addr_t value);
extern void of_oxm_ipv6_nd_tll_value_get(
    of_oxm_ipv6_nd_tll_t *obj,
    of_mac_addr_t *value);

/* Unified accessor functions for of_oxm_ipv6_nd_tll_masked */

extern void of_oxm_ipv6_nd_tll_masked_value_set(
    of_oxm_ipv6_nd_tll_masked_t *obj,
    of_mac_addr_t value);
extern void of_oxm_ipv6_nd_tll_masked_value_get(
    of_oxm_ipv6_nd_tll_masked_t *obj,
    of_mac_addr_t *value);

extern void of_oxm_ipv6_nd_tll_masked_value_mask_set(
    of_oxm_ipv6_nd_tll_masked_t *obj,
    of_mac_addr_t value_mask);
extern void of_oxm_ipv6_nd_tll_masked_value_mask_get(
    of_oxm_ipv6_nd_tll_masked_t *obj,
    of_mac_addr_t *value_mask);

/* Unified accessor functions for of_oxm_ipv6_src */

extern void of_oxm_ipv6_src_value_set(
    of_oxm_ipv6_src_t *obj,
    of_ipv6_t value);
extern void of_oxm_ipv6_src_value_get(
    of_oxm_ipv6_src_t *obj,
    of_ipv6_t *value);

/* Unified accessor functions for of_oxm_ipv6_src_masked */

extern void of_oxm_ipv6_src_masked_value_set(
    of_oxm_ipv6_src_masked_t *obj,
    of_ipv6_t value);
extern void of_oxm_ipv6_src_masked_value_get(
    of_oxm_ipv6_src_masked_t *obj,
    of_ipv6_t *value);

extern void of_oxm_ipv6_src_masked_value_mask_set(
    of_oxm_ipv6_src_masked_t *obj,
    of_ipv6_t value_mask);
extern void of_oxm_ipv6_src_masked_value_mask_get(
    of_oxm_ipv6_src_masked_t *obj,
    of_ipv6_t *value_mask);

/* Unified accessor functions for of_oxm_metadata */

extern void of_oxm_metadata_value_set(
    of_oxm_metadata_t *obj,
    uint64_t value);
extern void of_oxm_metadata_value_get(
    of_oxm_metadata_t *obj,
    uint64_t *value);

/* Unified accessor functions for of_oxm_metadata_masked */

extern void of_oxm_metadata_masked_value_set(
    of_oxm_metadata_masked_t *obj,
    uint64_t value);
extern void of_oxm_metadata_masked_value_get(
    of_oxm_metadata_masked_t *obj,
    uint64_t *value);

extern void of_oxm_metadata_masked_value_mask_set(
    of_oxm_metadata_masked_t *obj,
    uint64_t value_mask);
extern void of_oxm_metadata_masked_value_mask_get(
    of_oxm_metadata_masked_t *obj,
    uint64_t *value_mask);

/* Unified accessor functions for of_oxm_mpls_label */

extern void of_oxm_mpls_label_value_set(
    of_oxm_mpls_label_t *obj,
    uint32_t value);
extern void of_oxm_mpls_label_value_get(
    of_oxm_mpls_label_t *obj,
    uint32_t *value);

/* Unified accessor functions for of_oxm_mpls_label_masked */

extern void of_oxm_mpls_label_masked_value_set(
    of_oxm_mpls_label_masked_t *obj,
    uint32_t value);
extern void of_oxm_mpls_label_masked_value_get(
    of_oxm_mpls_label_masked_t *obj,
    uint32_t *value);

extern void of_oxm_mpls_label_masked_value_mask_set(
    of_oxm_mpls_label_masked_t *obj,
    uint32_t value_mask);
extern void of_oxm_mpls_label_masked_value_mask_get(
    of_oxm_mpls_label_masked_t *obj,
    uint32_t *value_mask);

/* Unified accessor functions for of_oxm_mpls_tc */

extern void of_oxm_mpls_tc_value_set(
    of_oxm_mpls_tc_t *obj,
    uint8_t value);
extern void of_oxm_mpls_tc_value_get(
    of_oxm_mpls_tc_t *obj,
    uint8_t *value);

/* Unified accessor functions for of_oxm_mpls_tc_masked */

extern void of_oxm_mpls_tc_masked_value_set(
    of_oxm_mpls_tc_masked_t *obj,
    uint8_t value);
extern void of_oxm_mpls_tc_masked_value_get(
    of_oxm_mpls_tc_masked_t *obj,
    uint8_t *value);

extern void of_oxm_mpls_tc_masked_value_mask_set(
    of_oxm_mpls_tc_masked_t *obj,
    uint8_t value_mask);
extern void of_oxm_mpls_tc_masked_value_mask_get(
    of_oxm_mpls_tc_masked_t *obj,
    uint8_t *value_mask);

/* Unified accessor functions for of_oxm_sctp_dst */

extern void of_oxm_sctp_dst_value_set(
    of_oxm_sctp_dst_t *obj,
    uint16_t value);
extern void of_oxm_sctp_dst_value_get(
    of_oxm_sctp_dst_t *obj,
    uint16_t *value);

/* Unified accessor functions for of_oxm_sctp_dst_masked */

extern void of_oxm_sctp_dst_masked_value_set(
    of_oxm_sctp_dst_masked_t *obj,
    uint16_t value);
extern void of_oxm_sctp_dst_masked_value_get(
    of_oxm_sctp_dst_masked_t *obj,
    uint16_t *value);

extern void of_oxm_sctp_dst_masked_value_mask_set(
    of_oxm_sctp_dst_masked_t *obj,
    uint16_t value_mask);
extern void of_oxm_sctp_dst_masked_value_mask_get(
    of_oxm_sctp_dst_masked_t *obj,
    uint16_t *value_mask);

/* Unified accessor functions for of_oxm_sctp_src */

extern void of_oxm_sctp_src_value_set(
    of_oxm_sctp_src_t *obj,
    uint16_t value);
extern void of_oxm_sctp_src_value_get(
    of_oxm_sctp_src_t *obj,
    uint16_t *value);

/* Unified accessor functions for of_oxm_sctp_src_masked */

extern void of_oxm_sctp_src_masked_value_set(
    of_oxm_sctp_src_masked_t *obj,
    uint16_t value);
extern void of_oxm_sctp_src_masked_value_get(
    of_oxm_sctp_src_masked_t *obj,
    uint16_t *value);

extern void of_oxm_sctp_src_masked_value_mask_set(
    of_oxm_sctp_src_masked_t *obj,
    uint16_t value_mask);
extern void of_oxm_sctp_src_masked_value_mask_get(
    of_oxm_sctp_src_masked_t *obj,
    uint16_t *value_mask);

/* Unified accessor functions for of_oxm_tcp_dst */

extern void of_oxm_tcp_dst_value_set(
    of_oxm_tcp_dst_t *obj,
    uint16_t value);
extern void of_oxm_tcp_dst_value_get(
    of_oxm_tcp_dst_t *obj,
    uint16_t *value);

/* Unified accessor functions for of_oxm_tcp_dst_masked */

extern void of_oxm_tcp_dst_masked_value_set(
    of_oxm_tcp_dst_masked_t *obj,
    uint16_t value);
extern void of_oxm_tcp_dst_masked_value_get(
    of_oxm_tcp_dst_masked_t *obj,
    uint16_t *value);

extern void of_oxm_tcp_dst_masked_value_mask_set(
    of_oxm_tcp_dst_masked_t *obj,
    uint16_t value_mask);
extern void of_oxm_tcp_dst_masked_value_mask_get(
    of_oxm_tcp_dst_masked_t *obj,
    uint16_t *value_mask);

/* Unified accessor functions for of_oxm_tcp_src */

extern void of_oxm_tcp_src_value_set(
    of_oxm_tcp_src_t *obj,
    uint16_t value);
extern void of_oxm_tcp_src_value_get(
    of_oxm_tcp_src_t *obj,
    uint16_t *value);

/* Unified accessor functions for of_oxm_tcp_src_masked */

extern void of_oxm_tcp_src_masked_value_set(
    of_oxm_tcp_src_masked_t *obj,
    uint16_t value);
extern void of_oxm_tcp_src_masked_value_get(
    of_oxm_tcp_src_masked_t *obj,
    uint16_t *value);

extern void of_oxm_tcp_src_masked_value_mask_set(
    of_oxm_tcp_src_masked_t *obj,
    uint16_t value_mask);
extern void of_oxm_tcp_src_masked_value_mask_get(
    of_oxm_tcp_src_masked_t *obj,
    uint16_t *value_mask);

/* Unified accessor functions for of_oxm_udp_dst */

extern void of_oxm_udp_dst_value_set(
    of_oxm_udp_dst_t *obj,
    uint16_t value);
extern void of_oxm_udp_dst_value_get(
    of_oxm_udp_dst_t *obj,
    uint16_t *value);

/* Unified accessor functions for of_oxm_udp_dst_masked */

extern void of_oxm_udp_dst_masked_value_set(
    of_oxm_udp_dst_masked_t *obj,
    uint16_t value);
extern void of_oxm_udp_dst_masked_value_get(
    of_oxm_udp_dst_masked_t *obj,
    uint16_t *value);

extern void of_oxm_udp_dst_masked_value_mask_set(
    of_oxm_udp_dst_masked_t *obj,
    uint16_t value_mask);
extern void of_oxm_udp_dst_masked_value_mask_get(
    of_oxm_udp_dst_masked_t *obj,
    uint16_t *value_mask);

/* Unified accessor functions for of_oxm_udp_src */

extern void of_oxm_udp_src_value_set(
    of_oxm_udp_src_t *obj,
    uint16_t value);
extern void of_oxm_udp_src_value_get(
    of_oxm_udp_src_t *obj,
    uint16_t *value);

/* Unified accessor functions for of_oxm_udp_src_masked */

extern void of_oxm_udp_src_masked_value_set(
    of_oxm_udp_src_masked_t *obj,
    uint16_t value);
extern void of_oxm_udp_src_masked_value_get(
    of_oxm_udp_src_masked_t *obj,
    uint16_t *value);

extern void of_oxm_udp_src_masked_value_mask_set(
    of_oxm_udp_src_masked_t *obj,
    uint16_t value_mask);
extern void of_oxm_udp_src_masked_value_mask_get(
    of_oxm_udp_src_masked_t *obj,
    uint16_t *value_mask);

/* Unified accessor functions for of_oxm_vlan_pcp */

extern void of_oxm_vlan_pcp_value_set(
    of_oxm_vlan_pcp_t *obj,
    uint8_t value);
extern void of_oxm_vlan_pcp_value_get(
    of_oxm_vlan_pcp_t *obj,
    uint8_t *value);

/* Unified accessor functions for of_oxm_vlan_pcp_masked */

extern void of_oxm_vlan_pcp_masked_value_set(
    of_oxm_vlan_pcp_masked_t *obj,
    uint8_t value);
extern void of_oxm_vlan_pcp_masked_value_get(
    of_oxm_vlan_pcp_masked_t *obj,
    uint8_t *value);

extern void of_oxm_vlan_pcp_masked_value_mask_set(
    of_oxm_vlan_pcp_masked_t *obj,
    uint8_t value_mask);
extern void of_oxm_vlan_pcp_masked_value_mask_get(
    of_oxm_vlan_pcp_masked_t *obj,
    uint8_t *value_mask);

/* Unified accessor functions for of_oxm_vlan_vid */

extern void of_oxm_vlan_vid_value_set(
    of_oxm_vlan_vid_t *obj,
    uint16_t value);
extern void of_oxm_vlan_vid_value_get(
    of_oxm_vlan_vid_t *obj,
    uint16_t *value);

/* Unified accessor functions for of_oxm_vlan_vid_masked */

extern void of_oxm_vlan_vid_masked_value_set(
    of_oxm_vlan_vid_masked_t *obj,
    uint16_t value);
extern void of_oxm_vlan_vid_masked_value_get(
    of_oxm_vlan_vid_masked_t *obj,
    uint16_t *value);

extern void of_oxm_vlan_vid_masked_value_mask_set(
    of_oxm_vlan_vid_masked_t *obj,
    uint16_t value_mask);
extern void of_oxm_vlan_vid_masked_value_mask_get(
    of_oxm_vlan_vid_masked_t *obj,
    uint16_t *value_mask);

/* Unified accessor functions for of_packet_queue */

extern void of_packet_queue_queue_id_set(
    of_packet_queue_t *obj,
    uint32_t queue_id);
extern void of_packet_queue_queue_id_get(
    of_packet_queue_t *obj,
    uint32_t *queue_id);

extern void of_packet_queue_port_set(
    of_packet_queue_t *obj,
    of_port_no_t port);
extern void of_packet_queue_port_get(
    of_packet_queue_t *obj,
    of_port_no_t *port);

extern int WARN_UNUSED_RESULT of_packet_queue_properties_set(
    of_packet_queue_t *obj,
    of_list_queue_prop_t *properties);
extern void of_packet_queue_properties_bind(
    of_packet_queue_t *obj,
    of_list_queue_prop_t *properties);
extern of_list_queue_prop_t *of_packet_queue_properties_get(
    of_packet_queue_t *obj);

/* Unified accessor functions for of_port_desc */

extern void of_port_desc_port_no_set(
    of_port_desc_t *obj,
    of_port_no_t port_no);
extern void of_port_desc_port_no_get(
    of_port_desc_t *obj,
    of_port_no_t *port_no);

extern void of_port_desc_hw_addr_set(
    of_port_desc_t *obj,
    of_mac_addr_t hw_addr);
extern void of_port_desc_hw_addr_get(
    of_port_desc_t *obj,
    of_mac_addr_t *hw_addr);

extern void of_port_desc_name_set(
    of_port_desc_t *obj,
    of_port_name_t name);
extern void of_port_desc_name_get(
    of_port_desc_t *obj,
    of_port_name_t *name);

extern void of_port_desc_config_set(
    of_port_desc_t *obj,
    uint32_t config);
extern void of_port_desc_config_get(
    of_port_desc_t *obj,
    uint32_t *config);

extern void of_port_desc_state_set(
    of_port_desc_t *obj,
    uint32_t state);
extern void of_port_desc_state_get(
    of_port_desc_t *obj,
    uint32_t *state);

extern void of_port_desc_curr_set(
    of_port_desc_t *obj,
    uint32_t curr);
extern void of_port_desc_curr_get(
    of_port_desc_t *obj,
    uint32_t *curr);

extern void of_port_desc_advertised_set(
    of_port_desc_t *obj,
    uint32_t advertised);
extern void of_port_desc_advertised_get(
    of_port_desc_t *obj,
    uint32_t *advertised);

extern void of_port_desc_supported_set(
    of_port_desc_t *obj,
    uint32_t supported);
extern void of_port_desc_supported_get(
    of_port_desc_t *obj,
    uint32_t *supported);

extern void of_port_desc_peer_set(
    of_port_desc_t *obj,
    uint32_t peer);
extern void of_port_desc_peer_get(
    of_port_desc_t *obj,
    uint32_t *peer);

extern void of_port_desc_curr_speed_set(
    of_port_desc_t *obj,
    uint32_t curr_speed);
extern void of_port_desc_curr_speed_get(
    of_port_desc_t *obj,
    uint32_t *curr_speed);

extern void of_port_desc_max_speed_set(
    of_port_desc_t *obj,
    uint32_t max_speed);
extern void of_port_desc_max_speed_get(
    of_port_desc_t *obj,
    uint32_t *max_speed);

/* Unified accessor functions for of_port_stats_entry */

extern void of_port_stats_entry_port_no_set(
    of_port_stats_entry_t *obj,
    of_port_no_t port_no);
extern void of_port_stats_entry_port_no_get(
    of_port_stats_entry_t *obj,
    of_port_no_t *port_no);

extern void of_port_stats_entry_rx_packets_set(
    of_port_stats_entry_t *obj,
    uint64_t rx_packets);
extern void of_port_stats_entry_rx_packets_get(
    of_port_stats_entry_t *obj,
    uint64_t *rx_packets);

extern void of_port_stats_entry_tx_packets_set(
    of_port_stats_entry_t *obj,
    uint64_t tx_packets);
extern void of_port_stats_entry_tx_packets_get(
    of_port_stats_entry_t *obj,
    uint64_t *tx_packets);

extern void of_port_stats_entry_rx_bytes_set(
    of_port_stats_entry_t *obj,
    uint64_t rx_bytes);
extern void of_port_stats_entry_rx_bytes_get(
    of_port_stats_entry_t *obj,
    uint64_t *rx_bytes);

extern void of_port_stats_entry_tx_bytes_set(
    of_port_stats_entry_t *obj,
    uint64_t tx_bytes);
extern void of_port_stats_entry_tx_bytes_get(
    of_port_stats_entry_t *obj,
    uint64_t *tx_bytes);

extern void of_port_stats_entry_rx_dropped_set(
    of_port_stats_entry_t *obj,
    uint64_t rx_dropped);
extern void of_port_stats_entry_rx_dropped_get(
    of_port_stats_entry_t *obj,
    uint64_t *rx_dropped);

extern void of_port_stats_entry_tx_dropped_set(
    of_port_stats_entry_t *obj,
    uint64_t tx_dropped);
extern void of_port_stats_entry_tx_dropped_get(
    of_port_stats_entry_t *obj,
    uint64_t *tx_dropped);

extern void of_port_stats_entry_rx_errors_set(
    of_port_stats_entry_t *obj,
    uint64_t rx_errors);
extern void of_port_stats_entry_rx_errors_get(
    of_port_stats_entry_t *obj,
    uint64_t *rx_errors);

extern void of_port_stats_entry_tx_errors_set(
    of_port_stats_entry_t *obj,
    uint64_t tx_errors);
extern void of_port_stats_entry_tx_errors_get(
    of_port_stats_entry_t *obj,
    uint64_t *tx_errors);

extern void of_port_stats_entry_rx_frame_err_set(
    of_port_stats_entry_t *obj,
    uint64_t rx_frame_err);
extern void of_port_stats_entry_rx_frame_err_get(
    of_port_stats_entry_t *obj,
    uint64_t *rx_frame_err);

extern void of_port_stats_entry_rx_over_err_set(
    of_port_stats_entry_t *obj,
    uint64_t rx_over_err);
extern void of_port_stats_entry_rx_over_err_get(
    of_port_stats_entry_t *obj,
    uint64_t *rx_over_err);

extern void of_port_stats_entry_rx_crc_err_set(
    of_port_stats_entry_t *obj,
    uint64_t rx_crc_err);
extern void of_port_stats_entry_rx_crc_err_get(
    of_port_stats_entry_t *obj,
    uint64_t *rx_crc_err);

extern void of_port_stats_entry_collisions_set(
    of_port_stats_entry_t *obj,
    uint64_t collisions);
extern void of_port_stats_entry_collisions_get(
    of_port_stats_entry_t *obj,
    uint64_t *collisions);

extern void of_port_stats_entry_duration_sec_set(
    of_port_stats_entry_t *obj,
    uint32_t duration_sec);
extern void of_port_stats_entry_duration_sec_get(
    of_port_stats_entry_t *obj,
    uint32_t *duration_sec);

extern void of_port_stats_entry_duration_nsec_set(
    of_port_stats_entry_t *obj,
    uint32_t duration_nsec);
extern void of_port_stats_entry_duration_nsec_get(
    of_port_stats_entry_t *obj,
    uint32_t *duration_nsec);

/* Unified accessor functions for of_queue_prop_experimenter */

extern void of_queue_prop_experimenter_experimenter_set(
    of_queue_prop_experimenter_t *obj,
    uint32_t experimenter);
extern void of_queue_prop_experimenter_experimenter_get(
    of_queue_prop_experimenter_t *obj,
    uint32_t *experimenter);

extern int WARN_UNUSED_RESULT of_queue_prop_experimenter_data_set(
    of_queue_prop_experimenter_t *obj,
    of_octets_t *data);
extern void of_queue_prop_experimenter_data_get(
    of_queue_prop_experimenter_t *obj,
    of_octets_t *data);

/* Unified accessor functions for of_queue_prop_header */

/* Unified accessor functions for of_queue_prop_max_rate */

extern void of_queue_prop_max_rate_rate_set(
    of_queue_prop_max_rate_t *obj,
    uint16_t rate);
extern void of_queue_prop_max_rate_rate_get(
    of_queue_prop_max_rate_t *obj,
    uint16_t *rate);

/* Unified accessor functions for of_queue_prop_min_rate */

extern void of_queue_prop_min_rate_rate_set(
    of_queue_prop_min_rate_t *obj,
    uint16_t rate);
extern void of_queue_prop_min_rate_rate_get(
    of_queue_prop_min_rate_t *obj,
    uint16_t *rate);

/* Unified accessor functions for of_queue_stats_entry */

extern void of_queue_stats_entry_port_no_set(
    of_queue_stats_entry_t *obj,
    of_port_no_t port_no);
extern void of_queue_stats_entry_port_no_get(
    of_queue_stats_entry_t *obj,
    of_port_no_t *port_no);

extern void of_queue_stats_entry_queue_id_set(
    of_queue_stats_entry_t *obj,
    uint32_t queue_id);
extern void of_queue_stats_entry_queue_id_get(
    of_queue_stats_entry_t *obj,
    uint32_t *queue_id);

extern void of_queue_stats_entry_tx_bytes_set(
    of_queue_stats_entry_t *obj,
    uint64_t tx_bytes);
extern void of_queue_stats_entry_tx_bytes_get(
    of_queue_stats_entry_t *obj,
    uint64_t *tx_bytes);

extern void of_queue_stats_entry_tx_packets_set(
    of_queue_stats_entry_t *obj,
    uint64_t tx_packets);
extern void of_queue_stats_entry_tx_packets_get(
    of_queue_stats_entry_t *obj,
    uint64_t *tx_packets);

extern void of_queue_stats_entry_tx_errors_set(
    of_queue_stats_entry_t *obj,
    uint64_t tx_errors);
extern void of_queue_stats_entry_tx_errors_get(
    of_queue_stats_entry_t *obj,
    uint64_t *tx_errors);

extern void of_queue_stats_entry_duration_sec_set(
    of_queue_stats_entry_t *obj,
    uint32_t duration_sec);
extern void of_queue_stats_entry_duration_sec_get(
    of_queue_stats_entry_t *obj,
    uint32_t *duration_sec);

extern void of_queue_stats_entry_duration_nsec_set(
    of_queue_stats_entry_t *obj,
    uint32_t duration_nsec);
extern void of_queue_stats_entry_duration_nsec_get(
    of_queue_stats_entry_t *obj,
    uint32_t *duration_nsec);

/* Unified accessor functions for of_table_feature_prop_apply_actions */

extern int WARN_UNUSED_RESULT of_table_feature_prop_apply_actions_action_ids_set(
    of_table_feature_prop_apply_actions_t *obj,
    of_list_action_id_t *action_ids);
extern void of_table_feature_prop_apply_actions_action_ids_bind(
    of_table_feature_prop_apply_actions_t *obj,
    of_list_action_id_t *action_ids);
extern of_list_action_id_t *of_table_feature_prop_apply_actions_action_ids_get(
    of_table_feature_prop_apply_actions_t *obj);

/* Unified accessor functions for of_table_feature_prop_apply_actions_miss */

extern int WARN_UNUSED_RESULT of_table_feature_prop_apply_actions_miss_action_ids_set(
    of_table_feature_prop_apply_actions_miss_t *obj,
    of_list_action_id_t *action_ids);
extern void of_table_feature_prop_apply_actions_miss_action_ids_bind(
    of_table_feature_prop_apply_actions_miss_t *obj,
    of_list_action_id_t *action_ids);
extern of_list_action_id_t *of_table_feature_prop_apply_actions_miss_action_ids_get(
    of_table_feature_prop_apply_actions_miss_t *obj);

/* Unified accessor functions for of_table_feature_prop_apply_setfield */

extern int WARN_UNUSED_RESULT of_table_feature_prop_apply_setfield_oxm_ids_set(
    of_table_feature_prop_apply_setfield_t *obj,
    of_list_uint32_t *oxm_ids);
extern void of_table_feature_prop_apply_setfield_oxm_ids_bind(
    of_table_feature_prop_apply_setfield_t *obj,
    of_list_uint32_t *oxm_ids);
extern of_list_uint32_t *of_table_feature_prop_apply_setfield_oxm_ids_get(
    of_table_feature_prop_apply_setfield_t *obj);

/* Unified accessor functions for of_table_feature_prop_apply_setfield_miss */

extern int WARN_UNUSED_RESULT of_table_feature_prop_apply_setfield_miss_oxm_ids_set(
    of_table_feature_prop_apply_setfield_miss_t *obj,
    of_list_uint32_t *oxm_ids);
extern void of_table_feature_prop_apply_setfield_miss_oxm_ids_bind(
    of_table_feature_prop_apply_setfield_miss_t *obj,
    of_list_uint32_t *oxm_ids);
extern of_list_uint32_t *of_table_feature_prop_apply_setfield_miss_oxm_ids_get(
    of_table_feature_prop_apply_setfield_miss_t *obj);

/* Unified accessor functions for of_table_feature_prop_experimenter */

extern void of_table_feature_prop_experimenter_experimenter_set(
    of_table_feature_prop_experimenter_t *obj,
    uint32_t experimenter);
extern void of_table_feature_prop_experimenter_experimenter_get(
    of_table_feature_prop_experimenter_t *obj,
    uint32_t *experimenter);

extern void of_table_feature_prop_experimenter_subtype_set(
    of_table_feature_prop_experimenter_t *obj,
    uint32_t subtype);
extern void of_table_feature_prop_experimenter_subtype_get(
    of_table_feature_prop_experimenter_t *obj,
    uint32_t *subtype);

extern int WARN_UNUSED_RESULT of_table_feature_prop_experimenter_experimenter_data_set(
    of_table_feature_prop_experimenter_t *obj,
    of_octets_t *experimenter_data);
extern void of_table_feature_prop_experimenter_experimenter_data_get(
    of_table_feature_prop_experimenter_t *obj,
    of_octets_t *experimenter_data);

/* Unified accessor functions for of_table_feature_prop_header */

/* Unified accessor functions for of_table_feature_prop_instructions */

extern int WARN_UNUSED_RESULT of_table_feature_prop_instructions_instruction_ids_set(
    of_table_feature_prop_instructions_t *obj,
    of_list_instruction_t *instruction_ids);
extern void of_table_feature_prop_instructions_instruction_ids_bind(
    of_table_feature_prop_instructions_t *obj,
    of_list_instruction_t *instruction_ids);
extern of_list_instruction_t *of_table_feature_prop_instructions_instruction_ids_get(
    of_table_feature_prop_instructions_t *obj);

/* Unified accessor functions for of_table_feature_prop_instructions_miss */

extern int WARN_UNUSED_RESULT of_table_feature_prop_instructions_miss_instruction_ids_set(
    of_table_feature_prop_instructions_miss_t *obj,
    of_list_instruction_t *instruction_ids);
extern void of_table_feature_prop_instructions_miss_instruction_ids_bind(
    of_table_feature_prop_instructions_miss_t *obj,
    of_list_instruction_t *instruction_ids);
extern of_list_instruction_t *of_table_feature_prop_instructions_miss_instruction_ids_get(
    of_table_feature_prop_instructions_miss_t *obj);

/* Unified accessor functions for of_table_feature_prop_match */

extern int WARN_UNUSED_RESULT of_table_feature_prop_match_oxm_ids_set(
    of_table_feature_prop_match_t *obj,
    of_list_uint32_t *oxm_ids);
extern void of_table_feature_prop_match_oxm_ids_bind(
    of_table_feature_prop_match_t *obj,
    of_list_uint32_t *oxm_ids);
extern of_list_uint32_t *of_table_feature_prop_match_oxm_ids_get(
    of_table_feature_prop_match_t *obj);

/* Unified accessor functions for of_table_feature_prop_next_tables */

extern int WARN_UNUSED_RESULT of_table_feature_prop_next_tables_next_table_ids_set(
    of_table_feature_prop_next_tables_t *obj,
    of_list_uint8_t *next_table_ids);
extern void of_table_feature_prop_next_tables_next_table_ids_bind(
    of_table_feature_prop_next_tables_t *obj,
    of_list_uint8_t *next_table_ids);
extern of_list_uint8_t *of_table_feature_prop_next_tables_next_table_ids_get(
    of_table_feature_prop_next_tables_t *obj);

/* Unified accessor functions for of_table_feature_prop_next_tables_miss */

extern int WARN_UNUSED_RESULT of_table_feature_prop_next_tables_miss_next_table_ids_set(
    of_table_feature_prop_next_tables_miss_t *obj,
    of_list_uint8_t *next_table_ids);
extern void of_table_feature_prop_next_tables_miss_next_table_ids_bind(
    of_table_feature_prop_next_tables_miss_t *obj,
    of_list_uint8_t *next_table_ids);
extern of_list_uint8_t *of_table_feature_prop_next_tables_miss_next_table_ids_get(
    of_table_feature_prop_next_tables_miss_t *obj);

/* Unified accessor functions for of_table_feature_prop_wildcards */

extern int WARN_UNUSED_RESULT of_table_feature_prop_wildcards_oxm_ids_set(
    of_table_feature_prop_wildcards_t *obj,
    of_list_uint32_t *oxm_ids);
extern void of_table_feature_prop_wildcards_oxm_ids_bind(
    of_table_feature_prop_wildcards_t *obj,
    of_list_uint32_t *oxm_ids);
extern of_list_uint32_t *of_table_feature_prop_wildcards_oxm_ids_get(
    of_table_feature_prop_wildcards_t *obj);

/* Unified accessor functions for of_table_feature_prop_write_actions */

extern int WARN_UNUSED_RESULT of_table_feature_prop_write_actions_action_ids_set(
    of_table_feature_prop_write_actions_t *obj,
    of_list_action_id_t *action_ids);
extern void of_table_feature_prop_write_actions_action_ids_bind(
    of_table_feature_prop_write_actions_t *obj,
    of_list_action_id_t *action_ids);
extern of_list_action_id_t *of_table_feature_prop_write_actions_action_ids_get(
    of_table_feature_prop_write_actions_t *obj);

/* Unified accessor functions for of_table_feature_prop_write_actions_miss */

extern int WARN_UNUSED_RESULT of_table_feature_prop_write_actions_miss_action_ids_set(
    of_table_feature_prop_write_actions_miss_t *obj,
    of_list_action_id_t *action_ids);
extern void of_table_feature_prop_write_actions_miss_action_ids_bind(
    of_table_feature_prop_write_actions_miss_t *obj,
    of_list_action_id_t *action_ids);
extern of_list_action_id_t *of_table_feature_prop_write_actions_miss_action_ids_get(
    of_table_feature_prop_write_actions_miss_t *obj);

/* Unified accessor functions for of_table_feature_prop_write_setfield */

extern int WARN_UNUSED_RESULT of_table_feature_prop_write_setfield_oxm_ids_set(
    of_table_feature_prop_write_setfield_t *obj,
    of_list_uint32_t *oxm_ids);
extern void of_table_feature_prop_write_setfield_oxm_ids_bind(
    of_table_feature_prop_write_setfield_t *obj,
    of_list_uint32_t *oxm_ids);
extern of_list_uint32_t *of_table_feature_prop_write_setfield_oxm_ids_get(
    of_table_feature_prop_write_setfield_t *obj);

/* Unified accessor functions for of_table_feature_prop_write_setfield_miss */

extern int WARN_UNUSED_RESULT of_table_feature_prop_write_setfield_miss_oxm_ids_set(
    of_table_feature_prop_write_setfield_miss_t *obj,
    of_list_uint32_t *oxm_ids);
extern void of_table_feature_prop_write_setfield_miss_oxm_ids_bind(
    of_table_feature_prop_write_setfield_miss_t *obj,
    of_list_uint32_t *oxm_ids);
extern of_list_uint32_t *of_table_feature_prop_write_setfield_miss_oxm_ids_get(
    of_table_feature_prop_write_setfield_miss_t *obj);

/* Unified accessor functions for of_table_features */

extern void of_table_features_table_id_set(
    of_table_features_t *obj,
    uint8_t table_id);
extern void of_table_features_table_id_get(
    of_table_features_t *obj,
    uint8_t *table_id);

extern void of_table_features_name_set(
    of_table_features_t *obj,
    of_table_name_t name);
extern void of_table_features_name_get(
    of_table_features_t *obj,
    of_table_name_t *name);

extern void of_table_features_metadata_match_set(
    of_table_features_t *obj,
    uint64_t metadata_match);
extern void of_table_features_metadata_match_get(
    of_table_features_t *obj,
    uint64_t *metadata_match);

extern void of_table_features_metadata_write_set(
    of_table_features_t *obj,
    uint64_t metadata_write);
extern void of_table_features_metadata_write_get(
    of_table_features_t *obj,
    uint64_t *metadata_write);

extern void of_table_features_config_set(
    of_table_features_t *obj,
    uint32_t config);
extern void of_table_features_config_get(
    of_table_features_t *obj,
    uint32_t *config);

extern void of_table_features_max_entries_set(
    of_table_features_t *obj,
    uint32_t max_entries);
extern void of_table_features_max_entries_get(
    of_table_features_t *obj,
    uint32_t *max_entries);

extern int WARN_UNUSED_RESULT of_table_features_properties_set(
    of_table_features_t *obj,
    of_list_table_feature_prop_t *properties);
extern void of_table_features_properties_bind(
    of_table_features_t *obj,
    of_list_table_feature_prop_t *properties);
extern of_list_table_feature_prop_t *of_table_features_properties_get(
    of_table_features_t *obj);

/* Unified accessor functions for of_table_stats_entry */

extern void of_table_stats_entry_table_id_set(
    of_table_stats_entry_t *obj,
    uint8_t table_id);
extern void of_table_stats_entry_table_id_get(
    of_table_stats_entry_t *obj,
    uint8_t *table_id);

extern void of_table_stats_entry_active_count_set(
    of_table_stats_entry_t *obj,
    uint32_t active_count);
extern void of_table_stats_entry_active_count_get(
    of_table_stats_entry_t *obj,
    uint32_t *active_count);

extern void of_table_stats_entry_lookup_count_set(
    of_table_stats_entry_t *obj,
    uint64_t lookup_count);
extern void of_table_stats_entry_lookup_count_get(
    of_table_stats_entry_t *obj,
    uint64_t *lookup_count);

extern void of_table_stats_entry_matched_count_set(
    of_table_stats_entry_t *obj,
    uint64_t matched_count);
extern void of_table_stats_entry_matched_count_get(
    of_table_stats_entry_t *obj,
    uint64_t *matched_count);

extern void of_table_stats_entry_name_set(
    of_table_stats_entry_t *obj,
    of_table_name_t name);
extern void of_table_stats_entry_name_get(
    of_table_stats_entry_t *obj,
    of_table_name_t *name);

extern void of_table_stats_entry_match_set(
    of_table_stats_entry_t *obj,
    of_match_bmap_t match);
extern void of_table_stats_entry_match_get(
    of_table_stats_entry_t *obj,
    of_match_bmap_t *match);

extern void of_table_stats_entry_wildcards_set(
    of_table_stats_entry_t *obj,
    of_wc_bmap_t wildcards);
extern void of_table_stats_entry_wildcards_get(
    of_table_stats_entry_t *obj,
    of_wc_bmap_t *wildcards);

extern void of_table_stats_entry_write_actions_set(
    of_table_stats_entry_t *obj,
    uint32_t write_actions);
extern void of_table_stats_entry_write_actions_get(
    of_table_stats_entry_t *obj,
    uint32_t *write_actions);

extern void of_table_stats_entry_apply_actions_set(
    of_table_stats_entry_t *obj,
    uint32_t apply_actions);
extern void of_table_stats_entry_apply_actions_get(
    of_table_stats_entry_t *obj,
    uint32_t *apply_actions);

extern void of_table_stats_entry_write_setfields_set(
    of_table_stats_entry_t *obj,
    uint64_t write_setfields);
extern void of_table_stats_entry_write_setfields_get(
    of_table_stats_entry_t *obj,
    uint64_t *write_setfields);

extern void of_table_stats_entry_apply_setfields_set(
    of_table_stats_entry_t *obj,
    uint64_t apply_setfields);
extern void of_table_stats_entry_apply_setfields_get(
    of_table_stats_entry_t *obj,
    uint64_t *apply_setfields);

extern void of_table_stats_entry_metadata_match_set(
    of_table_stats_entry_t *obj,
    uint64_t metadata_match);
extern void of_table_stats_entry_metadata_match_get(
    of_table_stats_entry_t *obj,
    uint64_t *metadata_match);

extern void of_table_stats_entry_metadata_write_set(
    of_table_stats_entry_t *obj,
    uint64_t metadata_write);
extern void of_table_stats_entry_metadata_write_get(
    of_table_stats_entry_t *obj,
    uint64_t *metadata_write);

extern void of_table_stats_entry_instructions_set(
    of_table_stats_entry_t *obj,
    uint32_t instructions);
extern void of_table_stats_entry_instructions_get(
    of_table_stats_entry_t *obj,
    uint32_t *instructions);

extern void of_table_stats_entry_config_set(
    of_table_stats_entry_t *obj,
    uint32_t config);
extern void of_table_stats_entry_config_get(
    of_table_stats_entry_t *obj,
    uint32_t *config);

extern void of_table_stats_entry_max_entries_set(
    of_table_stats_entry_t *obj,
    uint32_t max_entries);
extern void of_table_stats_entry_max_entries_get(
    of_table_stats_entry_t *obj,
    uint32_t *max_entries);

/* Unified accessor functions for of_uint32 */

extern void of_uint32_value_set(
    of_uint32_t *obj,
    uint32_t value);
extern void of_uint32_value_get(
    of_uint32_t *obj,
    uint32_t *value);

/* Unified accessor functions for of_uint64 */

extern void of_uint64_value_set(
    of_uint64_t *obj,
    uint64_t value);
extern void of_uint64_value_get(
    of_uint64_t *obj,
    uint64_t *value);

/* Unified accessor functions for of_uint8 */

extern void of_uint8_value_set(
    of_uint8_t *obj,
    uint8_t value);
extern void of_uint8_value_get(
    of_uint8_t *obj,
    uint8_t *value);

/* Unified accessor functions for of_list_action */

extern int of_list_action_first(
    of_list_action_t *list, of_action_t *obj);
extern int of_list_action_next(
    of_list_action_t *list, of_action_t *obj);
extern int of_list_action_append_bind(
    of_list_action_t *list, of_action_t *obj);
extern int of_list_action_append(
    of_list_action_t *list, of_action_t *obj);

/**
 * Iteration macro for list of type of_list_action
 * @param list Pointer to the list being iterated over of
 * type of_list_action
 * @param elt Pointer to an element of type of_action
 * @param rv On exiting the loop will have the value OF_ERROR_RANGE.
 */
#define OF_LIST_ACTION_ITER(list, elt, rv)  \
    for ((rv) = of_list_action_first((list), (elt));   \
         (rv) == OF_ERROR_NONE;   \
         (rv) = of_list_action_next((list), (elt)))

/* Unified accessor functions for of_list_action_id */

extern int of_list_action_id_first(
    of_list_action_id_t *list, of_action_id_t *obj);
extern int of_list_action_id_next(
    of_list_action_id_t *list, of_action_id_t *obj);
extern int of_list_action_id_append_bind(
    of_list_action_id_t *list, of_action_id_t *obj);
extern int of_list_action_id_append(
    of_list_action_id_t *list, of_action_id_t *obj);

/**
 * Iteration macro for list of type of_list_action_id
 * @param list Pointer to the list being iterated over of
 * type of_list_action_id
 * @param elt Pointer to an element of type of_action_id
 * @param rv On exiting the loop will have the value OF_ERROR_RANGE.
 */
#define OF_LIST_ACTION_ID_ITER(list, elt, rv)  \
    for ((rv) = of_list_action_id_first((list), (elt));   \
         (rv) == OF_ERROR_NONE;   \
         (rv) = of_list_action_id_next((list), (elt)))

/* Unified accessor functions for of_list_bsn_interface */

extern int of_list_bsn_interface_first(
    of_list_bsn_interface_t *list, of_bsn_interface_t *obj);
extern int of_list_bsn_interface_next(
    of_list_bsn_interface_t *list, of_bsn_interface_t *obj);
extern int of_list_bsn_interface_append_bind(
    of_list_bsn_interface_t *list, of_bsn_interface_t *obj);
extern int of_list_bsn_interface_append(
    of_list_bsn_interface_t *list, of_bsn_interface_t *obj);

/**
 * Iteration macro for list of type of_list_bsn_interface
 * @param list Pointer to the list being iterated over of
 * type of_list_bsn_interface
 * @param elt Pointer to an element of type of_bsn_interface
 * @param rv On exiting the loop will have the value OF_ERROR_RANGE.
 */
#define OF_LIST_BSN_INTERFACE_ITER(list, elt, rv)  \
    for ((rv) = of_list_bsn_interface_first((list), (elt));   \
         (rv) == OF_ERROR_NONE;   \
         (rv) = of_list_bsn_interface_next((list), (elt)))

/* Unified accessor functions for of_list_bsn_lacp_stats_entry */

extern int of_list_bsn_lacp_stats_entry_first(
    of_list_bsn_lacp_stats_entry_t *list, of_bsn_lacp_stats_entry_t *obj);
extern int of_list_bsn_lacp_stats_entry_next(
    of_list_bsn_lacp_stats_entry_t *list, of_bsn_lacp_stats_entry_t *obj);
extern int of_list_bsn_lacp_stats_entry_append_bind(
    of_list_bsn_lacp_stats_entry_t *list, of_bsn_lacp_stats_entry_t *obj);
extern int of_list_bsn_lacp_stats_entry_append(
    of_list_bsn_lacp_stats_entry_t *list, of_bsn_lacp_stats_entry_t *obj);

/**
 * Iteration macro for list of type of_list_bsn_lacp_stats_entry
 * @param list Pointer to the list being iterated over of
 * type of_list_bsn_lacp_stats_entry
 * @param elt Pointer to an element of type of_bsn_lacp_stats_entry
 * @param rv On exiting the loop will have the value OF_ERROR_RANGE.
 */
#define OF_LIST_BSN_LACP_STATS_ENTRY_ITER(list, elt, rv)  \
    for ((rv) = of_list_bsn_lacp_stats_entry_first((list), (elt));   \
         (rv) == OF_ERROR_NONE;   \
         (rv) = of_list_bsn_lacp_stats_entry_next((list), (elt)))

/* Unified accessor functions for of_list_bsn_port_counter_stats_entry */

extern int of_list_bsn_port_counter_stats_entry_first(
    of_list_bsn_port_counter_stats_entry_t *list, of_bsn_port_counter_stats_entry_t *obj);
extern int of_list_bsn_port_counter_stats_entry_next(
    of_list_bsn_port_counter_stats_entry_t *list, of_bsn_port_counter_stats_entry_t *obj);
extern int of_list_bsn_port_counter_stats_entry_append_bind(
    of_list_bsn_port_counter_stats_entry_t *list, of_bsn_port_counter_stats_entry_t *obj);
extern int of_list_bsn_port_counter_stats_entry_append(
    of_list_bsn_port_counter_stats_entry_t *list, of_bsn_port_counter_stats_entry_t *obj);

/**
 * Iteration macro for list of type of_list_bsn_port_counter_stats_entry
 * @param list Pointer to the list being iterated over of
 * type of_list_bsn_port_counter_stats_entry
 * @param elt Pointer to an element of type of_bsn_port_counter_stats_entry
 * @param rv On exiting the loop will have the value OF_ERROR_RANGE.
 */
#define OF_LIST_BSN_PORT_COUNTER_STATS_ENTRY_ITER(list, elt, rv)  \
    for ((rv) = of_list_bsn_port_counter_stats_entry_first((list), (elt));   \
         (rv) == OF_ERROR_NONE;   \
         (rv) = of_list_bsn_port_counter_stats_entry_next((list), (elt)))

/* Unified accessor functions for of_list_bsn_switch_pipeline_stats_entry */

extern int of_list_bsn_switch_pipeline_stats_entry_first(
    of_list_bsn_switch_pipeline_stats_entry_t *list, of_bsn_switch_pipeline_stats_entry_t *obj);
extern int of_list_bsn_switch_pipeline_stats_entry_next(
    of_list_bsn_switch_pipeline_stats_entry_t *list, of_bsn_switch_pipeline_stats_entry_t *obj);
extern int of_list_bsn_switch_pipeline_stats_entry_append_bind(
    of_list_bsn_switch_pipeline_stats_entry_t *list, of_bsn_switch_pipeline_stats_entry_t *obj);
extern int of_list_bsn_switch_pipeline_stats_entry_append(
    of_list_bsn_switch_pipeline_stats_entry_t *list, of_bsn_switch_pipeline_stats_entry_t *obj);

/**
 * Iteration macro for list of type of_list_bsn_switch_pipeline_stats_entry
 * @param list Pointer to the list being iterated over of
 * type of_list_bsn_switch_pipeline_stats_entry
 * @param elt Pointer to an element of type of_bsn_switch_pipeline_stats_entry
 * @param rv On exiting the loop will have the value OF_ERROR_RANGE.
 */
#define OF_LIST_BSN_SWITCH_PIPELINE_STATS_ENTRY_ITER(list, elt, rv)  \
    for ((rv) = of_list_bsn_switch_pipeline_stats_entry_first((list), (elt));   \
         (rv) == OF_ERROR_NONE;   \
         (rv) = of_list_bsn_switch_pipeline_stats_entry_next((list), (elt)))

/* Unified accessor functions for of_list_bsn_vlan_counter_stats_entry */

extern int of_list_bsn_vlan_counter_stats_entry_first(
    of_list_bsn_vlan_counter_stats_entry_t *list, of_bsn_vlan_counter_stats_entry_t *obj);
extern int of_list_bsn_vlan_counter_stats_entry_next(
    of_list_bsn_vlan_counter_stats_entry_t *list, of_bsn_vlan_counter_stats_entry_t *obj);
extern int of_list_bsn_vlan_counter_stats_entry_append_bind(
    of_list_bsn_vlan_counter_stats_entry_t *list, of_bsn_vlan_counter_stats_entry_t *obj);
extern int of_list_bsn_vlan_counter_stats_entry_append(
    of_list_bsn_vlan_counter_stats_entry_t *list, of_bsn_vlan_counter_stats_entry_t *obj);

/**
 * Iteration macro for list of type of_list_bsn_vlan_counter_stats_entry
 * @param list Pointer to the list being iterated over of
 * type of_list_bsn_vlan_counter_stats_entry
 * @param elt Pointer to an element of type of_bsn_vlan_counter_stats_entry
 * @param rv On exiting the loop will have the value OF_ERROR_RANGE.
 */
#define OF_LIST_BSN_VLAN_COUNTER_STATS_ENTRY_ITER(list, elt, rv)  \
    for ((rv) = of_list_bsn_vlan_counter_stats_entry_first((list), (elt));   \
         (rv) == OF_ERROR_NONE;   \
         (rv) = of_list_bsn_vlan_counter_stats_entry_next((list), (elt)))

/* Unified accessor functions for of_list_bucket */

extern int of_list_bucket_first(
    of_list_bucket_t *list, of_bucket_t *obj);
extern int of_list_bucket_next(
    of_list_bucket_t *list, of_bucket_t *obj);
extern int of_list_bucket_append_bind(
    of_list_bucket_t *list, of_bucket_t *obj);
extern int of_list_bucket_append(
    of_list_bucket_t *list, of_bucket_t *obj);

/**
 * Iteration macro for list of type of_list_bucket
 * @param list Pointer to the list being iterated over of
 * type of_list_bucket
 * @param elt Pointer to an element of type of_bucket
 * @param rv On exiting the loop will have the value OF_ERROR_RANGE.
 */
#define OF_LIST_BUCKET_ITER(list, elt, rv)  \
    for ((rv) = of_list_bucket_first((list), (elt));   \
         (rv) == OF_ERROR_NONE;   \
         (rv) = of_list_bucket_next((list), (elt)))

/* Unified accessor functions for of_list_bucket_counter */

extern int of_list_bucket_counter_first(
    of_list_bucket_counter_t *list, of_bucket_counter_t *obj);
extern int of_list_bucket_counter_next(
    of_list_bucket_counter_t *list, of_bucket_counter_t *obj);
extern int of_list_bucket_counter_append_bind(
    of_list_bucket_counter_t *list, of_bucket_counter_t *obj);
extern int of_list_bucket_counter_append(
    of_list_bucket_counter_t *list, of_bucket_counter_t *obj);

/**
 * Iteration macro for list of type of_list_bucket_counter
 * @param list Pointer to the list being iterated over of
 * type of_list_bucket_counter
 * @param elt Pointer to an element of type of_bucket_counter
 * @param rv On exiting the loop will have the value OF_ERROR_RANGE.
 */
#define OF_LIST_BUCKET_COUNTER_ITER(list, elt, rv)  \
    for ((rv) = of_list_bucket_counter_first((list), (elt));   \
         (rv) == OF_ERROR_NONE;   \
         (rv) = of_list_bucket_counter_next((list), (elt)))

/* Unified accessor functions for of_list_flow_stats_entry */

extern int of_list_flow_stats_entry_first(
    of_list_flow_stats_entry_t *list, of_flow_stats_entry_t *obj);
extern int of_list_flow_stats_entry_next(
    of_list_flow_stats_entry_t *list, of_flow_stats_entry_t *obj);
extern int of_list_flow_stats_entry_append_bind(
    of_list_flow_stats_entry_t *list, of_flow_stats_entry_t *obj);
extern int of_list_flow_stats_entry_append(
    of_list_flow_stats_entry_t *list, of_flow_stats_entry_t *obj);

/**
 * Iteration macro for list of type of_list_flow_stats_entry
 * @param list Pointer to the list being iterated over of
 * type of_list_flow_stats_entry
 * @param elt Pointer to an element of type of_flow_stats_entry
 * @param rv On exiting the loop will have the value OF_ERROR_RANGE.
 */
#define OF_LIST_FLOW_STATS_ENTRY_ITER(list, elt, rv)  \
    for ((rv) = of_list_flow_stats_entry_first((list), (elt));   \
         (rv) == OF_ERROR_NONE;   \
         (rv) = of_list_flow_stats_entry_next((list), (elt)))

/* Unified accessor functions for of_list_group_desc_stats_entry */

extern int of_list_group_desc_stats_entry_first(
    of_list_group_desc_stats_entry_t *list, of_group_desc_stats_entry_t *obj);
extern int of_list_group_desc_stats_entry_next(
    of_list_group_desc_stats_entry_t *list, of_group_desc_stats_entry_t *obj);
extern int of_list_group_desc_stats_entry_append_bind(
    of_list_group_desc_stats_entry_t *list, of_group_desc_stats_entry_t *obj);
extern int of_list_group_desc_stats_entry_append(
    of_list_group_desc_stats_entry_t *list, of_group_desc_stats_entry_t *obj);

/**
 * Iteration macro for list of type of_list_group_desc_stats_entry
 * @param list Pointer to the list being iterated over of
 * type of_list_group_desc_stats_entry
 * @param elt Pointer to an element of type of_group_desc_stats_entry
 * @param rv On exiting the loop will have the value OF_ERROR_RANGE.
 */
#define OF_LIST_GROUP_DESC_STATS_ENTRY_ITER(list, elt, rv)  \
    for ((rv) = of_list_group_desc_stats_entry_first((list), (elt));   \
         (rv) == OF_ERROR_NONE;   \
         (rv) = of_list_group_desc_stats_entry_next((list), (elt)))

/* Unified accessor functions for of_list_group_stats_entry */

extern int of_list_group_stats_entry_first(
    of_list_group_stats_entry_t *list, of_group_stats_entry_t *obj);
extern int of_list_group_stats_entry_next(
    of_list_group_stats_entry_t *list, of_group_stats_entry_t *obj);
extern int of_list_group_stats_entry_append_bind(
    of_list_group_stats_entry_t *list, of_group_stats_entry_t *obj);
extern int of_list_group_stats_entry_append(
    of_list_group_stats_entry_t *list, of_group_stats_entry_t *obj);

/**
 * Iteration macro for list of type of_list_group_stats_entry
 * @param list Pointer to the list being iterated over of
 * type of_list_group_stats_entry
 * @param elt Pointer to an element of type of_group_stats_entry
 * @param rv On exiting the loop will have the value OF_ERROR_RANGE.
 */
#define OF_LIST_GROUP_STATS_ENTRY_ITER(list, elt, rv)  \
    for ((rv) = of_list_group_stats_entry_first((list), (elt));   \
         (rv) == OF_ERROR_NONE;   \
         (rv) = of_list_group_stats_entry_next((list), (elt)))

/* Unified accessor functions for of_list_hello_elem */

extern int of_list_hello_elem_first(
    of_list_hello_elem_t *list, of_hello_elem_t *obj);
extern int of_list_hello_elem_next(
    of_list_hello_elem_t *list, of_hello_elem_t *obj);
extern int of_list_hello_elem_append_bind(
    of_list_hello_elem_t *list, of_hello_elem_t *obj);
extern int of_list_hello_elem_append(
    of_list_hello_elem_t *list, of_hello_elem_t *obj);

/**
 * Iteration macro for list of type of_list_hello_elem
 * @param list Pointer to the list being iterated over of
 * type of_list_hello_elem
 * @param elt Pointer to an element of type of_hello_elem
 * @param rv On exiting the loop will have the value OF_ERROR_RANGE.
 */
#define OF_LIST_HELLO_ELEM_ITER(list, elt, rv)  \
    for ((rv) = of_list_hello_elem_first((list), (elt));   \
         (rv) == OF_ERROR_NONE;   \
         (rv) = of_list_hello_elem_next((list), (elt)))

/* Unified accessor functions for of_list_instruction */

extern int of_list_instruction_first(
    of_list_instruction_t *list, of_instruction_t *obj);
extern int of_list_instruction_next(
    of_list_instruction_t *list, of_instruction_t *obj);
extern int of_list_instruction_append_bind(
    of_list_instruction_t *list, of_instruction_t *obj);
extern int of_list_instruction_append(
    of_list_instruction_t *list, of_instruction_t *obj);

/**
 * Iteration macro for list of type of_list_instruction
 * @param list Pointer to the list being iterated over of
 * type of_list_instruction
 * @param elt Pointer to an element of type of_instruction
 * @param rv On exiting the loop will have the value OF_ERROR_RANGE.
 */
#define OF_LIST_INSTRUCTION_ITER(list, elt, rv)  \
    for ((rv) = of_list_instruction_first((list), (elt));   \
         (rv) == OF_ERROR_NONE;   \
         (rv) = of_list_instruction_next((list), (elt)))

/* Unified accessor functions for of_list_meter_band */

extern int of_list_meter_band_first(
    of_list_meter_band_t *list, of_meter_band_t *obj);
extern int of_list_meter_band_next(
    of_list_meter_band_t *list, of_meter_band_t *obj);
extern int of_list_meter_band_append_bind(
    of_list_meter_band_t *list, of_meter_band_t *obj);
extern int of_list_meter_band_append(
    of_list_meter_band_t *list, of_meter_band_t *obj);

/**
 * Iteration macro for list of type of_list_meter_band
 * @param list Pointer to the list being iterated over of
 * type of_list_meter_band
 * @param elt Pointer to an element of type of_meter_band
 * @param rv On exiting the loop will have the value OF_ERROR_RANGE.
 */
#define OF_LIST_METER_BAND_ITER(list, elt, rv)  \
    for ((rv) = of_list_meter_band_first((list), (elt));   \
         (rv) == OF_ERROR_NONE;   \
         (rv) = of_list_meter_band_next((list), (elt)))

/* Unified accessor functions for of_list_meter_band_stats */

extern int of_list_meter_band_stats_first(
    of_list_meter_band_stats_t *list, of_meter_band_stats_t *obj);
extern int of_list_meter_band_stats_next(
    of_list_meter_band_stats_t *list, of_meter_band_stats_t *obj);
extern int of_list_meter_band_stats_append_bind(
    of_list_meter_band_stats_t *list, of_meter_band_stats_t *obj);
extern int of_list_meter_band_stats_append(
    of_list_meter_band_stats_t *list, of_meter_band_stats_t *obj);

/**
 * Iteration macro for list of type of_list_meter_band_stats
 * @param list Pointer to the list being iterated over of
 * type of_list_meter_band_stats
 * @param elt Pointer to an element of type of_meter_band_stats
 * @param rv On exiting the loop will have the value OF_ERROR_RANGE.
 */
#define OF_LIST_METER_BAND_STATS_ITER(list, elt, rv)  \
    for ((rv) = of_list_meter_band_stats_first((list), (elt));   \
         (rv) == OF_ERROR_NONE;   \
         (rv) = of_list_meter_band_stats_next((list), (elt)))

/* Unified accessor functions for of_list_meter_stats */

extern int of_list_meter_stats_first(
    of_list_meter_stats_t *list, of_meter_stats_t *obj);
extern int of_list_meter_stats_next(
    of_list_meter_stats_t *list, of_meter_stats_t *obj);
extern int of_list_meter_stats_append_bind(
    of_list_meter_stats_t *list, of_meter_stats_t *obj);
extern int of_list_meter_stats_append(
    of_list_meter_stats_t *list, of_meter_stats_t *obj);

/**
 * Iteration macro for list of type of_list_meter_stats
 * @param list Pointer to the list being iterated over of
 * type of_list_meter_stats
 * @param elt Pointer to an element of type of_meter_stats
 * @param rv On exiting the loop will have the value OF_ERROR_RANGE.
 */
#define OF_LIST_METER_STATS_ITER(list, elt, rv)  \
    for ((rv) = of_list_meter_stats_first((list), (elt));   \
         (rv) == OF_ERROR_NONE;   \
         (rv) = of_list_meter_stats_next((list), (elt)))

/* Unified accessor functions for of_list_oxm */

extern int of_list_oxm_first(
    of_list_oxm_t *list, of_oxm_t *obj);
extern int of_list_oxm_next(
    of_list_oxm_t *list, of_oxm_t *obj);
extern int of_list_oxm_append_bind(
    of_list_oxm_t *list, of_oxm_t *obj);
extern int of_list_oxm_append(
    of_list_oxm_t *list, of_oxm_t *obj);

/**
 * Iteration macro for list of type of_list_oxm
 * @param list Pointer to the list being iterated over of
 * type of_list_oxm
 * @param elt Pointer to an element of type of_oxm
 * @param rv On exiting the loop will have the value OF_ERROR_RANGE.
 */
#define OF_LIST_OXM_ITER(list, elt, rv)  \
    for ((rv) = of_list_oxm_first((list), (elt));   \
         (rv) == OF_ERROR_NONE;   \
         (rv) = of_list_oxm_next((list), (elt)))

/* Unified accessor functions for of_list_packet_queue */

extern int of_list_packet_queue_first(
    of_list_packet_queue_t *list, of_packet_queue_t *obj);
extern int of_list_packet_queue_next(
    of_list_packet_queue_t *list, of_packet_queue_t *obj);
extern int of_list_packet_queue_append_bind(
    of_list_packet_queue_t *list, of_packet_queue_t *obj);
extern int of_list_packet_queue_append(
    of_list_packet_queue_t *list, of_packet_queue_t *obj);

/**
 * Iteration macro for list of type of_list_packet_queue
 * @param list Pointer to the list being iterated over of
 * type of_list_packet_queue
 * @param elt Pointer to an element of type of_packet_queue
 * @param rv On exiting the loop will have the value OF_ERROR_RANGE.
 */
#define OF_LIST_PACKET_QUEUE_ITER(list, elt, rv)  \
    for ((rv) = of_list_packet_queue_first((list), (elt));   \
         (rv) == OF_ERROR_NONE;   \
         (rv) = of_list_packet_queue_next((list), (elt)))

/* Unified accessor functions for of_list_port_desc */

extern int of_list_port_desc_first(
    of_list_port_desc_t *list, of_port_desc_t *obj);
extern int of_list_port_desc_next(
    of_list_port_desc_t *list, of_port_desc_t *obj);
extern int of_list_port_desc_append_bind(
    of_list_port_desc_t *list, of_port_desc_t *obj);
extern int of_list_port_desc_append(
    of_list_port_desc_t *list, of_port_desc_t *obj);

/**
 * Iteration macro for list of type of_list_port_desc
 * @param list Pointer to the list being iterated over of
 * type of_list_port_desc
 * @param elt Pointer to an element of type of_port_desc
 * @param rv On exiting the loop will have the value OF_ERROR_RANGE.
 */
#define OF_LIST_PORT_DESC_ITER(list, elt, rv)  \
    for ((rv) = of_list_port_desc_first((list), (elt));   \
         (rv) == OF_ERROR_NONE;   \
         (rv) = of_list_port_desc_next((list), (elt)))

/* Unified accessor functions for of_list_port_stats_entry */

extern int of_list_port_stats_entry_first(
    of_list_port_stats_entry_t *list, of_port_stats_entry_t *obj);
extern int of_list_port_stats_entry_next(
    of_list_port_stats_entry_t *list, of_port_stats_entry_t *obj);
extern int of_list_port_stats_entry_append_bind(
    of_list_port_stats_entry_t *list, of_port_stats_entry_t *obj);
extern int of_list_port_stats_entry_append(
    of_list_port_stats_entry_t *list, of_port_stats_entry_t *obj);

/**
 * Iteration macro for list of type of_list_port_stats_entry
 * @param list Pointer to the list being iterated over of
 * type of_list_port_stats_entry
 * @param elt Pointer to an element of type of_port_stats_entry
 * @param rv On exiting the loop will have the value OF_ERROR_RANGE.
 */
#define OF_LIST_PORT_STATS_ENTRY_ITER(list, elt, rv)  \
    for ((rv) = of_list_port_stats_entry_first((list), (elt));   \
         (rv) == OF_ERROR_NONE;   \
         (rv) = of_list_port_stats_entry_next((list), (elt)))

/* Unified accessor functions for of_list_queue_prop */

extern int of_list_queue_prop_first(
    of_list_queue_prop_t *list, of_queue_prop_t *obj);
extern int of_list_queue_prop_next(
    of_list_queue_prop_t *list, of_queue_prop_t *obj);
extern int of_list_queue_prop_append_bind(
    of_list_queue_prop_t *list, of_queue_prop_t *obj);
extern int of_list_queue_prop_append(
    of_list_queue_prop_t *list, of_queue_prop_t *obj);

/**
 * Iteration macro for list of type of_list_queue_prop
 * @param list Pointer to the list being iterated over of
 * type of_list_queue_prop
 * @param elt Pointer to an element of type of_queue_prop
 * @param rv On exiting the loop will have the value OF_ERROR_RANGE.
 */
#define OF_LIST_QUEUE_PROP_ITER(list, elt, rv)  \
    for ((rv) = of_list_queue_prop_first((list), (elt));   \
         (rv) == OF_ERROR_NONE;   \
         (rv) = of_list_queue_prop_next((list), (elt)))

/* Unified accessor functions for of_list_queue_stats_entry */

extern int of_list_queue_stats_entry_first(
    of_list_queue_stats_entry_t *list, of_queue_stats_entry_t *obj);
extern int of_list_queue_stats_entry_next(
    of_list_queue_stats_entry_t *list, of_queue_stats_entry_t *obj);
extern int of_list_queue_stats_entry_append_bind(
    of_list_queue_stats_entry_t *list, of_queue_stats_entry_t *obj);
extern int of_list_queue_stats_entry_append(
    of_list_queue_stats_entry_t *list, of_queue_stats_entry_t *obj);

/**
 * Iteration macro for list of type of_list_queue_stats_entry
 * @param list Pointer to the list being iterated over of
 * type of_list_queue_stats_entry
 * @param elt Pointer to an element of type of_queue_stats_entry
 * @param rv On exiting the loop will have the value OF_ERROR_RANGE.
 */
#define OF_LIST_QUEUE_STATS_ENTRY_ITER(list, elt, rv)  \
    for ((rv) = of_list_queue_stats_entry_first((list), (elt));   \
         (rv) == OF_ERROR_NONE;   \
         (rv) = of_list_queue_stats_entry_next((list), (elt)))

/* Unified accessor functions for of_list_table_feature_prop */

extern int of_list_table_feature_prop_first(
    of_list_table_feature_prop_t *list, of_table_feature_prop_t *obj);
extern int of_list_table_feature_prop_next(
    of_list_table_feature_prop_t *list, of_table_feature_prop_t *obj);
extern int of_list_table_feature_prop_append_bind(
    of_list_table_feature_prop_t *list, of_table_feature_prop_t *obj);
extern int of_list_table_feature_prop_append(
    of_list_table_feature_prop_t *list, of_table_feature_prop_t *obj);

/**
 * Iteration macro for list of type of_list_table_feature_prop
 * @param list Pointer to the list being iterated over of
 * type of_list_table_feature_prop
 * @param elt Pointer to an element of type of_table_feature_prop
 * @param rv On exiting the loop will have the value OF_ERROR_RANGE.
 */
#define OF_LIST_TABLE_FEATURE_PROP_ITER(list, elt, rv)  \
    for ((rv) = of_list_table_feature_prop_first((list), (elt));   \
         (rv) == OF_ERROR_NONE;   \
         (rv) = of_list_table_feature_prop_next((list), (elt)))

/* Unified accessor functions for of_list_table_features */

extern int of_list_table_features_first(
    of_list_table_features_t *list, of_table_features_t *obj);
extern int of_list_table_features_next(
    of_list_table_features_t *list, of_table_features_t *obj);
extern int of_list_table_features_append_bind(
    of_list_table_features_t *list, of_table_features_t *obj);
extern int of_list_table_features_append(
    of_list_table_features_t *list, of_table_features_t *obj);

/**
 * Iteration macro for list of type of_list_table_features
 * @param list Pointer to the list being iterated over of
 * type of_list_table_features
 * @param elt Pointer to an element of type of_table_features
 * @param rv On exiting the loop will have the value OF_ERROR_RANGE.
 */
#define OF_LIST_TABLE_FEATURES_ITER(list, elt, rv)  \
    for ((rv) = of_list_table_features_first((list), (elt));   \
         (rv) == OF_ERROR_NONE;   \
         (rv) = of_list_table_features_next((list), (elt)))

/* Unified accessor functions for of_list_table_stats_entry */

extern int of_list_table_stats_entry_first(
    of_list_table_stats_entry_t *list, of_table_stats_entry_t *obj);
extern int of_list_table_stats_entry_next(
    of_list_table_stats_entry_t *list, of_table_stats_entry_t *obj);
extern int of_list_table_stats_entry_append_bind(
    of_list_table_stats_entry_t *list, of_table_stats_entry_t *obj);
extern int of_list_table_stats_entry_append(
    of_list_table_stats_entry_t *list, of_table_stats_entry_t *obj);

/**
 * Iteration macro for list of type of_list_table_stats_entry
 * @param list Pointer to the list being iterated over of
 * type of_list_table_stats_entry
 * @param elt Pointer to an element of type of_table_stats_entry
 * @param rv On exiting the loop will have the value OF_ERROR_RANGE.
 */
#define OF_LIST_TABLE_STATS_ENTRY_ITER(list, elt, rv)  \
    for ((rv) = of_list_table_stats_entry_first((list), (elt));   \
         (rv) == OF_ERROR_NONE;   \
         (rv) = of_list_table_stats_entry_next((list), (elt)))

/* Unified accessor functions for of_list_uint32 */

extern int of_list_uint32_first(
    of_list_uint32_t *list, of_uint32_t *obj);
extern int of_list_uint32_next(
    of_list_uint32_t *list, of_uint32_t *obj);
extern int of_list_uint32_append_bind(
    of_list_uint32_t *list, of_uint32_t *obj);
extern int of_list_uint32_append(
    of_list_uint32_t *list, of_uint32_t *obj);

/**
 * Iteration macro for list of type of_list_uint32
 * @param list Pointer to the list being iterated over of
 * type of_list_uint32
 * @param elt Pointer to an element of type of_uint32
 * @param rv On exiting the loop will have the value OF_ERROR_RANGE.
 */
#define OF_LIST_UINT32_ITER(list, elt, rv)  \
    for ((rv) = of_list_uint32_first((list), (elt));   \
         (rv) == OF_ERROR_NONE;   \
         (rv) = of_list_uint32_next((list), (elt)))

/* Unified accessor functions for of_list_uint64 */

extern int of_list_uint64_first(
    of_list_uint64_t *list, of_uint64_t *obj);
extern int of_list_uint64_next(
    of_list_uint64_t *list, of_uint64_t *obj);
extern int of_list_uint64_append_bind(
    of_list_uint64_t *list, of_uint64_t *obj);
extern int of_list_uint64_append(
    of_list_uint64_t *list, of_uint64_t *obj);

/**
 * Iteration macro for list of type of_list_uint64
 * @param list Pointer to the list being iterated over of
 * type of_list_uint64
 * @param elt Pointer to an element of type of_uint64
 * @param rv On exiting the loop will have the value OF_ERROR_RANGE.
 */
#define OF_LIST_UINT64_ITER(list, elt, rv)  \
    for ((rv) = of_list_uint64_first((list), (elt));   \
         (rv) == OF_ERROR_NONE;   \
         (rv) = of_list_uint64_next((list), (elt)))

/* Unified accessor functions for of_list_uint8 */

extern int of_list_uint8_first(
    of_list_uint8_t *list, of_uint8_t *obj);
extern int of_list_uint8_next(
    of_list_uint8_t *list, of_uint8_t *obj);
extern int of_list_uint8_append_bind(
    of_list_uint8_t *list, of_uint8_t *obj);
extern int of_list_uint8_append(
    of_list_uint8_t *list, of_uint8_t *obj);

/**
 * Iteration macro for list of type of_list_uint8
 * @param list Pointer to the list being iterated over of
 * type of_list_uint8
 * @param elt Pointer to an element of type of_uint8
 * @param rv On exiting the loop will have the value OF_ERROR_RANGE.
 */
#define OF_LIST_UINT8_ITER(list, elt, rv)  \
    for ((rv) = of_list_uint8_first((list), (elt));   \
         (rv) == OF_ERROR_NONE;   \
         (rv) = of_list_uint8_next((list), (elt)))

/****************************************************************
 *
 * Unified structure definitions
 *
 ****************************************************************/

struct of_object_s {
    /* Common members */
    /* The control block for the underlying data buffer */
    of_wire_object_t wire_object;
    /* The LOCI type enum value of the object */
    of_object_id_t object_id;

    /*
     * Objects need to track their "parent" so that updates to the
     * object that affect its length can be pushed to the parent.
     * Treat as private.
     */
    of_object_t *parent;

    /*
     * Not all objects have length and version on the wire so we keep
     * them here.  NOTE: Infrastructure manages length and version.
     * Treat length as private and version as read only.
     */
    int length;
    of_version_t version;

    /*
     * Many objects have a length and/or type represented in the wire buffer
     * These accessors get and set those value when present.  Treat as private.
     */
    of_wire_length_get_f wire_length_get;
    of_wire_length_set_f wire_length_set;
    of_wire_type_get_f wire_type_get;
    of_wire_type_set_f wire_type_set;

    of_object_track_info_t track_info;

    /*
     * Metadata available for applications.  Ensure 8-byte alignment, but
     * that buffer is at least as large as requested.  This data is not used
     * or inspected by LOCI.
     */
    uint64_t metadata[(OF_OBJECT_METADATA_BYTES + 7) / 8];

};

/****************************************************************
 * Functions for objects that can be initialized by a flow add message.
 * These are defined in a non-autogenerated file
 ****************************************************************/

/**
 * @brief Set up a flow removed message from the original add
 * @param obj The flow removed message being updated
 * @param flow_add The flow_add message to use
 *
 * Initialize the following fields of obj to be identical
 * to what was originally on the wire from the flow_add object:
 *     match
 *     cookie
 *     priority
 *     idle_timeout
 *     hard_timeout
 *
 */

extern int
of_flow_removed_setup_from_flow_add(of_flow_removed_t *obj,
                                    of_flow_add_t *flow_add);


/**
 * @brief Set up the packet in match structure from the original add
 * @param obj The packet in message being updated
 * @param flow_add The flow_add message to use
 * @returns Indigo error code.  Does not return a version error if
 * the version does not require initializing obj.
 *
 * Initialize the match member of obj to be identical to what was originally
 * on the wire from the flow_add object.  If applicable, the table ID is also
 * initialized from the flow_add object.
 *
 * This API applies to 1.2 and later only.
 */

extern int
of_packet_in_setup_from_flow_add(of_packet_in_t *obj,
                                 of_flow_add_t *flow_add);


/**
 * @brief Set up the flow stats entry from the original add
 * @param obj The packet in message being updated
 * @param flow_add The flow_add message to use
 * @param effects Optional actions or instructions; see below.
 *
 * Initialize the following fields of obj to be identical
 * to what was originally on the wire from the flow_add object:
 *     match
 *     actions/instructions (effects)
 *     cookie
 *     priority
 *     idle_timeout
 *     hard_timeout
 *
 * Note that the actions/instructions of a flow may be modified by a
 * subsequent flow modify message.  To facilitate implementations,
 * the "effects" parameter is provided.  If effects is NULL, the
 * actions/instructions are taken from the flow_add message.
 * Otherwise, effects is coerced to the proper type (actions or
 * instructions) and used to init obj.
 */

extern int
of_flow_stats_entry_setup_from_flow_add(of_flow_stats_entry_t *obj,
                                        of_flow_add_t *flow_add,
                                        of_object_t *effects);

/**
 * The common LOCI object is a union of all possible objects.
 */
union of_generic_u {
    of_object_t object;  /* Common base class with fundamental accessors */

    /* Message objects */
    of_aggregate_stats_reply_t of_aggregate_stats_reply;
    of_aggregate_stats_request_t of_aggregate_stats_request;
    of_async_get_reply_t of_async_get_reply;
    of_async_get_request_t of_async_get_request;
    of_async_set_t of_async_set;
    of_bad_action_error_msg_t of_bad_action_error_msg;
    of_bad_instruction_error_msg_t of_bad_instruction_error_msg;
    of_bad_match_error_msg_t of_bad_match_error_msg;
    of_bad_request_error_msg_t of_bad_request_error_msg;
    of_barrier_reply_t of_barrier_reply;
    of_barrier_request_t of_barrier_request;
    of_bsn_bw_clear_data_reply_t of_bsn_bw_clear_data_reply;
    of_bsn_bw_clear_data_request_t of_bsn_bw_clear_data_request;
    of_bsn_bw_enable_get_reply_t of_bsn_bw_enable_get_reply;
    of_bsn_bw_enable_get_request_t of_bsn_bw_enable_get_request;
    of_bsn_bw_enable_set_reply_t of_bsn_bw_enable_set_reply;
    of_bsn_bw_enable_set_request_t of_bsn_bw_enable_set_request;
    of_bsn_flow_idle_t of_bsn_flow_idle;
    of_bsn_flow_idle_enable_get_reply_t of_bsn_flow_idle_enable_get_reply;
    of_bsn_flow_idle_enable_get_request_t of_bsn_flow_idle_enable_get_request;
    of_bsn_flow_idle_enable_set_reply_t of_bsn_flow_idle_enable_set_reply;
    of_bsn_flow_idle_enable_set_request_t of_bsn_flow_idle_enable_set_request;
    of_bsn_get_interfaces_reply_t of_bsn_get_interfaces_reply;
    of_bsn_get_interfaces_request_t of_bsn_get_interfaces_request;
    of_bsn_get_ip_mask_reply_t of_bsn_get_ip_mask_reply;
    of_bsn_get_ip_mask_request_t of_bsn_get_ip_mask_request;
    of_bsn_get_l2_table_reply_t of_bsn_get_l2_table_reply;
    of_bsn_get_l2_table_request_t of_bsn_get_l2_table_request;
    of_bsn_get_mirroring_reply_t of_bsn_get_mirroring_reply;
    of_bsn_get_mirroring_request_t of_bsn_get_mirroring_request;
    of_bsn_get_switch_pipeline_reply_t of_bsn_get_switch_pipeline_reply;
    of_bsn_get_switch_pipeline_request_t of_bsn_get_switch_pipeline_request;
    of_bsn_header_t of_bsn_header;
    of_bsn_hybrid_get_reply_t of_bsn_hybrid_get_reply;
    of_bsn_hybrid_get_request_t of_bsn_hybrid_get_request;
    of_bsn_lacp_convergence_notif_t of_bsn_lacp_convergence_notif;
    of_bsn_lacp_stats_reply_t of_bsn_lacp_stats_reply;
    of_bsn_lacp_stats_request_t of_bsn_lacp_stats_request;
    of_bsn_pdu_rx_reply_t of_bsn_pdu_rx_reply;
    of_bsn_pdu_rx_request_t of_bsn_pdu_rx_request;
    of_bsn_pdu_rx_timeout_t of_bsn_pdu_rx_timeout;
    of_bsn_pdu_tx_reply_t of_bsn_pdu_tx_reply;
    of_bsn_pdu_tx_request_t of_bsn_pdu_tx_request;
    of_bsn_port_counter_stats_reply_t of_bsn_port_counter_stats_reply;
    of_bsn_port_counter_stats_request_t of_bsn_port_counter_stats_request;
    of_bsn_set_ip_mask_t of_bsn_set_ip_mask;
    of_bsn_set_l2_table_reply_t of_bsn_set_l2_table_reply;
    of_bsn_set_l2_table_request_t of_bsn_set_l2_table_request;
    of_bsn_set_lacp_reply_t of_bsn_set_lacp_reply;
    of_bsn_set_lacp_request_t of_bsn_set_lacp_request;
    of_bsn_set_mirroring_t of_bsn_set_mirroring;
    of_bsn_set_pktin_suppression_reply_t of_bsn_set_pktin_suppression_reply;
    of_bsn_set_pktin_suppression_request_t of_bsn_set_pktin_suppression_request;
    of_bsn_set_switch_pipeline_reply_t of_bsn_set_switch_pipeline_reply;
    of_bsn_set_switch_pipeline_request_t of_bsn_set_switch_pipeline_request;
    of_bsn_shell_command_t of_bsn_shell_command;
    of_bsn_shell_output_t of_bsn_shell_output;
    of_bsn_shell_status_t of_bsn_shell_status;
    of_bsn_stats_reply_t of_bsn_stats_reply;
    of_bsn_stats_request_t of_bsn_stats_request;
    of_bsn_switch_pipeline_stats_reply_t of_bsn_switch_pipeline_stats_reply;
    of_bsn_switch_pipeline_stats_request_t of_bsn_switch_pipeline_stats_request;
    of_bsn_time_reply_t of_bsn_time_reply;
    of_bsn_time_request_t of_bsn_time_request;
    of_bsn_virtual_port_create_reply_t of_bsn_virtual_port_create_reply;
    of_bsn_virtual_port_create_request_t of_bsn_virtual_port_create_request;
    of_bsn_virtual_port_remove_reply_t of_bsn_virtual_port_remove_reply;
    of_bsn_virtual_port_remove_request_t of_bsn_virtual_port_remove_request;
    of_bsn_vlan_counter_stats_reply_t of_bsn_vlan_counter_stats_reply;
    of_bsn_vlan_counter_stats_request_t of_bsn_vlan_counter_stats_request;
    of_desc_stats_reply_t of_desc_stats_reply;
    of_desc_stats_request_t of_desc_stats_request;
    of_echo_reply_t of_echo_reply;
    of_echo_request_t of_echo_request;
    of_error_msg_t of_error_msg;
    of_experimenter_t of_experimenter;
    of_experimenter_error_msg_t of_experimenter_error_msg;
    of_experimenter_stats_reply_t of_experimenter_stats_reply;
    of_experimenter_stats_request_t of_experimenter_stats_request;
    of_features_reply_t of_features_reply;
    of_features_request_t of_features_request;
    of_flow_add_t of_flow_add;
    of_flow_delete_t of_flow_delete;
    of_flow_delete_strict_t of_flow_delete_strict;
    of_flow_mod_t of_flow_mod;
    of_flow_mod_failed_error_msg_t of_flow_mod_failed_error_msg;
    of_flow_modify_t of_flow_modify;
    of_flow_modify_strict_t of_flow_modify_strict;
    of_flow_removed_t of_flow_removed;
    of_flow_stats_reply_t of_flow_stats_reply;
    of_flow_stats_request_t of_flow_stats_request;
    of_get_config_reply_t of_get_config_reply;
    of_get_config_request_t of_get_config_request;
    of_group_add_t of_group_add;
    of_group_delete_t of_group_delete;
    of_group_desc_stats_reply_t of_group_desc_stats_reply;
    of_group_desc_stats_request_t of_group_desc_stats_request;
    of_group_features_stats_reply_t of_group_features_stats_reply;
    of_group_features_stats_request_t of_group_features_stats_request;
    of_group_mod_t of_group_mod;
    of_group_mod_failed_error_msg_t of_group_mod_failed_error_msg;
    of_group_modify_t of_group_modify;
    of_group_stats_reply_t of_group_stats_reply;
    of_group_stats_request_t of_group_stats_request;
    of_hello_t of_hello;
    of_hello_failed_error_msg_t of_hello_failed_error_msg;
    of_meter_config_stats_reply_t of_meter_config_stats_reply;
    of_meter_config_stats_request_t of_meter_config_stats_request;
    of_meter_features_stats_reply_t of_meter_features_stats_reply;
    of_meter_features_stats_request_t of_meter_features_stats_request;
    of_meter_mod_t of_meter_mod;
    of_meter_mod_failed_error_msg_t of_meter_mod_failed_error_msg;
    of_meter_stats_reply_t of_meter_stats_reply;
    of_meter_stats_request_t of_meter_stats_request;
    of_nicira_controller_role_reply_t of_nicira_controller_role_reply;
    of_nicira_controller_role_request_t of_nicira_controller_role_request;
    of_nicira_header_t of_nicira_header;
    of_packet_in_t of_packet_in;
    of_packet_out_t of_packet_out;
    of_port_desc_stats_reply_t of_port_desc_stats_reply;
    of_port_desc_stats_request_t of_port_desc_stats_request;
    of_port_mod_t of_port_mod;
    of_port_mod_failed_error_msg_t of_port_mod_failed_error_msg;
    of_port_stats_reply_t of_port_stats_reply;
    of_port_stats_request_t of_port_stats_request;
    of_port_status_t of_port_status;
    of_queue_get_config_reply_t of_queue_get_config_reply;
    of_queue_get_config_request_t of_queue_get_config_request;
    of_queue_op_failed_error_msg_t of_queue_op_failed_error_msg;
    of_queue_stats_reply_t of_queue_stats_reply;
    of_queue_stats_request_t of_queue_stats_request;
    of_role_reply_t of_role_reply;
    of_role_request_t of_role_request;
    of_role_request_failed_error_msg_t of_role_request_failed_error_msg;
    of_set_config_t of_set_config;
    of_stats_reply_t of_stats_reply;
    of_stats_request_t of_stats_request;
    of_switch_config_failed_error_msg_t of_switch_config_failed_error_msg;
    of_table_features_failed_error_msg_t of_table_features_failed_error_msg;
    of_table_features_stats_reply_t of_table_features_stats_reply;
    of_table_features_stats_request_t of_table_features_stats_request;
    of_table_mod_t of_table_mod;
    of_table_mod_failed_error_msg_t of_table_mod_failed_error_msg;
    of_table_stats_reply_t of_table_stats_reply;
    of_table_stats_request_t of_table_stats_request;

    /* Non-message composite objects */
    of_action_bsn_t of_action_bsn;
    of_action_bsn_mirror_t of_action_bsn_mirror;
    of_action_bsn_set_tunnel_dst_t of_action_bsn_set_tunnel_dst;
    of_action_copy_ttl_in_t of_action_copy_ttl_in;
    of_action_copy_ttl_out_t of_action_copy_ttl_out;
    of_action_dec_mpls_ttl_t of_action_dec_mpls_ttl;
    of_action_dec_nw_ttl_t of_action_dec_nw_ttl;
    of_action_enqueue_t of_action_enqueue;
    of_action_experimenter_t of_action_experimenter;
    of_action_group_t of_action_group;
    of_action_header_t of_action_header;
    of_action_id_bsn_t of_action_id_bsn;
    of_action_id_bsn_mirror_t of_action_id_bsn_mirror;
    of_action_id_bsn_set_tunnel_dst_t of_action_id_bsn_set_tunnel_dst;
    of_action_id_copy_ttl_in_t of_action_id_copy_ttl_in;
    of_action_id_copy_ttl_out_t of_action_id_copy_ttl_out;
    of_action_id_dec_mpls_ttl_t of_action_id_dec_mpls_ttl;
    of_action_id_dec_nw_ttl_t of_action_id_dec_nw_ttl;
    of_action_id_experimenter_t of_action_id_experimenter;
    of_action_id_group_t of_action_id_group;
    of_action_id_header_t of_action_id_header;
    of_action_id_nicira_t of_action_id_nicira;
    of_action_id_nicira_dec_ttl_t of_action_id_nicira_dec_ttl;
    of_action_id_output_t of_action_id_output;
    of_action_id_pop_mpls_t of_action_id_pop_mpls;
    of_action_id_pop_pbb_t of_action_id_pop_pbb;
    of_action_id_pop_vlan_t of_action_id_pop_vlan;
    of_action_id_push_mpls_t of_action_id_push_mpls;
    of_action_id_push_pbb_t of_action_id_push_pbb;
    of_action_id_push_vlan_t of_action_id_push_vlan;
    of_action_id_set_field_t of_action_id_set_field;
    of_action_id_set_mpls_ttl_t of_action_id_set_mpls_ttl;
    of_action_id_set_nw_ttl_t of_action_id_set_nw_ttl;
    of_action_id_set_queue_t of_action_id_set_queue;
    of_action_nicira_t of_action_nicira;
    of_action_nicira_dec_ttl_t of_action_nicira_dec_ttl;
    of_action_output_t of_action_output;
    of_action_pop_mpls_t of_action_pop_mpls;
    of_action_pop_pbb_t of_action_pop_pbb;
    of_action_pop_vlan_t of_action_pop_vlan;
    of_action_push_mpls_t of_action_push_mpls;
    of_action_push_pbb_t of_action_push_pbb;
    of_action_push_vlan_t of_action_push_vlan;
    of_action_set_dl_dst_t of_action_set_dl_dst;
    of_action_set_dl_src_t of_action_set_dl_src;
    of_action_set_field_t of_action_set_field;
    of_action_set_mpls_label_t of_action_set_mpls_label;
    of_action_set_mpls_tc_t of_action_set_mpls_tc;
    of_action_set_mpls_ttl_t of_action_set_mpls_ttl;
    of_action_set_nw_dst_t of_action_set_nw_dst;
    of_action_set_nw_ecn_t of_action_set_nw_ecn;
    of_action_set_nw_src_t of_action_set_nw_src;
    of_action_set_nw_tos_t of_action_set_nw_tos;
    of_action_set_nw_ttl_t of_action_set_nw_ttl;
    of_action_set_queue_t of_action_set_queue;
    of_action_set_tp_dst_t of_action_set_tp_dst;
    of_action_set_tp_src_t of_action_set_tp_src;
    of_action_set_vlan_pcp_t of_action_set_vlan_pcp;
    of_action_set_vlan_vid_t of_action_set_vlan_vid;
    of_action_strip_vlan_t of_action_strip_vlan;
    of_bsn_interface_t of_bsn_interface;
    of_bsn_lacp_stats_entry_t of_bsn_lacp_stats_entry;
    of_bsn_port_counter_stats_entry_t of_bsn_port_counter_stats_entry;
    of_bsn_switch_pipeline_stats_entry_t of_bsn_switch_pipeline_stats_entry;
    of_bsn_vlan_counter_stats_entry_t of_bsn_vlan_counter_stats_entry;
    of_bsn_vport_header_t of_bsn_vport_header;
    of_bsn_vport_q_in_q_t of_bsn_vport_q_in_q;
    of_bucket_t of_bucket;
    of_bucket_counter_t of_bucket_counter;
    of_experimenter_stats_header_t of_experimenter_stats_header;
    of_flow_stats_entry_t of_flow_stats_entry;
    of_group_desc_stats_entry_t of_group_desc_stats_entry;
    of_group_stats_entry_t of_group_stats_entry;
    of_header_t of_header;
    of_hello_elem_header_t of_hello_elem_header;
    of_hello_elem_versionbitmap_t of_hello_elem_versionbitmap;
    of_instruction_apply_actions_t of_instruction_apply_actions;
    of_instruction_bsn_t of_instruction_bsn;
    of_instruction_bsn_disable_src_mac_check_t of_instruction_bsn_disable_src_mac_check;
    of_instruction_clear_actions_t of_instruction_clear_actions;
    of_instruction_experimenter_t of_instruction_experimenter;
    of_instruction_goto_table_t of_instruction_goto_table;
    of_instruction_header_t of_instruction_header;
    of_instruction_id_apply_actions_t of_instruction_id_apply_actions;
    of_instruction_id_bsn_t of_instruction_id_bsn;
    of_instruction_id_bsn_disable_src_mac_check_t of_instruction_id_bsn_disable_src_mac_check;
    of_instruction_id_clear_actions_t of_instruction_id_clear_actions;
    of_instruction_id_experimenter_t of_instruction_id_experimenter;
    of_instruction_id_goto_table_t of_instruction_id_goto_table;
    of_instruction_id_header_t of_instruction_id_header;
    of_instruction_id_meter_t of_instruction_id_meter;
    of_instruction_id_write_actions_t of_instruction_id_write_actions;
    of_instruction_id_write_metadata_t of_instruction_id_write_metadata;
    of_instruction_meter_t of_instruction_meter;
    of_instruction_write_actions_t of_instruction_write_actions;
    of_instruction_write_metadata_t of_instruction_write_metadata;
    of_match_v1_t of_match_v1;
    of_match_v2_t of_match_v2;
    of_match_v3_t of_match_v3;
    of_meter_band_drop_t of_meter_band_drop;
    of_meter_band_dscp_remark_t of_meter_band_dscp_remark;
    of_meter_band_experimenter_t of_meter_band_experimenter;
    of_meter_band_header_t of_meter_band_header;
    of_meter_band_stats_t of_meter_band_stats;
    of_meter_config_t of_meter_config;
    of_meter_features_t of_meter_features;
    of_meter_stats_t of_meter_stats;
    of_oxm_arp_op_t of_oxm_arp_op;
    of_oxm_arp_op_masked_t of_oxm_arp_op_masked;
    of_oxm_arp_sha_t of_oxm_arp_sha;
    of_oxm_arp_sha_masked_t of_oxm_arp_sha_masked;
    of_oxm_arp_spa_t of_oxm_arp_spa;
    of_oxm_arp_spa_masked_t of_oxm_arp_spa_masked;
    of_oxm_arp_tha_t of_oxm_arp_tha;
    of_oxm_arp_tha_masked_t of_oxm_arp_tha_masked;
    of_oxm_arp_tpa_t of_oxm_arp_tpa;
    of_oxm_arp_tpa_masked_t of_oxm_arp_tpa_masked;
    of_oxm_bsn_global_vrf_allowed_t of_oxm_bsn_global_vrf_allowed;
    of_oxm_bsn_global_vrf_allowed_masked_t of_oxm_bsn_global_vrf_allowed_masked;
    of_oxm_bsn_in_ports_128_t of_oxm_bsn_in_ports_128;
    of_oxm_bsn_in_ports_128_masked_t of_oxm_bsn_in_ports_128_masked;
    of_oxm_bsn_l3_dst_class_id_t of_oxm_bsn_l3_dst_class_id;
    of_oxm_bsn_l3_dst_class_id_masked_t of_oxm_bsn_l3_dst_class_id_masked;
    of_oxm_bsn_l3_interface_class_id_t of_oxm_bsn_l3_interface_class_id;
    of_oxm_bsn_l3_interface_class_id_masked_t of_oxm_bsn_l3_interface_class_id_masked;
    of_oxm_bsn_l3_src_class_id_t of_oxm_bsn_l3_src_class_id;
    of_oxm_bsn_l3_src_class_id_masked_t of_oxm_bsn_l3_src_class_id_masked;
    of_oxm_bsn_lag_id_t of_oxm_bsn_lag_id;
    of_oxm_bsn_lag_id_masked_t of_oxm_bsn_lag_id_masked;
    of_oxm_bsn_vrf_t of_oxm_bsn_vrf;
    of_oxm_bsn_vrf_masked_t of_oxm_bsn_vrf_masked;
    of_oxm_eth_dst_t of_oxm_eth_dst;
    of_oxm_eth_dst_masked_t of_oxm_eth_dst_masked;
    of_oxm_eth_src_t of_oxm_eth_src;
    of_oxm_eth_src_masked_t of_oxm_eth_src_masked;
    of_oxm_eth_type_t of_oxm_eth_type;
    of_oxm_eth_type_masked_t of_oxm_eth_type_masked;
    of_oxm_header_t of_oxm_header;
    of_oxm_icmpv4_code_t of_oxm_icmpv4_code;
    of_oxm_icmpv4_code_masked_t of_oxm_icmpv4_code_masked;
    of_oxm_icmpv4_type_t of_oxm_icmpv4_type;
    of_oxm_icmpv4_type_masked_t of_oxm_icmpv4_type_masked;
    of_oxm_icmpv6_code_t of_oxm_icmpv6_code;
    of_oxm_icmpv6_code_masked_t of_oxm_icmpv6_code_masked;
    of_oxm_icmpv6_type_t of_oxm_icmpv6_type;
    of_oxm_icmpv6_type_masked_t of_oxm_icmpv6_type_masked;
    of_oxm_in_phy_port_t of_oxm_in_phy_port;
    of_oxm_in_phy_port_masked_t of_oxm_in_phy_port_masked;
    of_oxm_in_port_t of_oxm_in_port;
    of_oxm_in_port_masked_t of_oxm_in_port_masked;
    of_oxm_ip_dscp_t of_oxm_ip_dscp;
    of_oxm_ip_dscp_masked_t of_oxm_ip_dscp_masked;
    of_oxm_ip_ecn_t of_oxm_ip_ecn;
    of_oxm_ip_ecn_masked_t of_oxm_ip_ecn_masked;
    of_oxm_ip_proto_t of_oxm_ip_proto;
    of_oxm_ip_proto_masked_t of_oxm_ip_proto_masked;
    of_oxm_ipv4_dst_t of_oxm_ipv4_dst;
    of_oxm_ipv4_dst_masked_t of_oxm_ipv4_dst_masked;
    of_oxm_ipv4_src_t of_oxm_ipv4_src;
    of_oxm_ipv4_src_masked_t of_oxm_ipv4_src_masked;
    of_oxm_ipv6_dst_t of_oxm_ipv6_dst;
    of_oxm_ipv6_dst_masked_t of_oxm_ipv6_dst_masked;
    of_oxm_ipv6_flabel_t of_oxm_ipv6_flabel;
    of_oxm_ipv6_flabel_masked_t of_oxm_ipv6_flabel_masked;
    of_oxm_ipv6_nd_sll_t of_oxm_ipv6_nd_sll;
    of_oxm_ipv6_nd_sll_masked_t of_oxm_ipv6_nd_sll_masked;
    of_oxm_ipv6_nd_target_t of_oxm_ipv6_nd_target;
    of_oxm_ipv6_nd_target_masked_t of_oxm_ipv6_nd_target_masked;
    of_oxm_ipv6_nd_tll_t of_oxm_ipv6_nd_tll;
    of_oxm_ipv6_nd_tll_masked_t of_oxm_ipv6_nd_tll_masked;
    of_oxm_ipv6_src_t of_oxm_ipv6_src;
    of_oxm_ipv6_src_masked_t of_oxm_ipv6_src_masked;
    of_oxm_metadata_t of_oxm_metadata;
    of_oxm_metadata_masked_t of_oxm_metadata_masked;
    of_oxm_mpls_label_t of_oxm_mpls_label;
    of_oxm_mpls_label_masked_t of_oxm_mpls_label_masked;
    of_oxm_mpls_tc_t of_oxm_mpls_tc;
    of_oxm_mpls_tc_masked_t of_oxm_mpls_tc_masked;
    of_oxm_sctp_dst_t of_oxm_sctp_dst;
    of_oxm_sctp_dst_masked_t of_oxm_sctp_dst_masked;
    of_oxm_sctp_src_t of_oxm_sctp_src;
    of_oxm_sctp_src_masked_t of_oxm_sctp_src_masked;
    of_oxm_tcp_dst_t of_oxm_tcp_dst;
    of_oxm_tcp_dst_masked_t of_oxm_tcp_dst_masked;
    of_oxm_tcp_src_t of_oxm_tcp_src;
    of_oxm_tcp_src_masked_t of_oxm_tcp_src_masked;
    of_oxm_udp_dst_t of_oxm_udp_dst;
    of_oxm_udp_dst_masked_t of_oxm_udp_dst_masked;
    of_oxm_udp_src_t of_oxm_udp_src;
    of_oxm_udp_src_masked_t of_oxm_udp_src_masked;
    of_oxm_vlan_pcp_t of_oxm_vlan_pcp;
    of_oxm_vlan_pcp_masked_t of_oxm_vlan_pcp_masked;
    of_oxm_vlan_vid_t of_oxm_vlan_vid;
    of_oxm_vlan_vid_masked_t of_oxm_vlan_vid_masked;
    of_packet_queue_t of_packet_queue;
    of_port_desc_t of_port_desc;
    of_port_stats_entry_t of_port_stats_entry;
    of_queue_prop_experimenter_t of_queue_prop_experimenter;
    of_queue_prop_header_t of_queue_prop_header;
    of_queue_prop_max_rate_t of_queue_prop_max_rate;
    of_queue_prop_min_rate_t of_queue_prop_min_rate;
    of_queue_stats_entry_t of_queue_stats_entry;
    of_table_feature_prop_apply_actions_t of_table_feature_prop_apply_actions;
    of_table_feature_prop_apply_actions_miss_t of_table_feature_prop_apply_actions_miss;
    of_table_feature_prop_apply_setfield_t of_table_feature_prop_apply_setfield;
    of_table_feature_prop_apply_setfield_miss_t of_table_feature_prop_apply_setfield_miss;
    of_table_feature_prop_experimenter_t of_table_feature_prop_experimenter;
    of_table_feature_prop_header_t of_table_feature_prop_header;
    of_table_feature_prop_instructions_t of_table_feature_prop_instructions;
    of_table_feature_prop_instructions_miss_t of_table_feature_prop_instructions_miss;
    of_table_feature_prop_match_t of_table_feature_prop_match;
    of_table_feature_prop_next_tables_t of_table_feature_prop_next_tables;
    of_table_feature_prop_next_tables_miss_t of_table_feature_prop_next_tables_miss;
    of_table_feature_prop_wildcards_t of_table_feature_prop_wildcards;
    of_table_feature_prop_write_actions_t of_table_feature_prop_write_actions;
    of_table_feature_prop_write_actions_miss_t of_table_feature_prop_write_actions_miss;
    of_table_feature_prop_write_setfield_t of_table_feature_prop_write_setfield;
    of_table_feature_prop_write_setfield_miss_t of_table_feature_prop_write_setfield_miss;
    of_table_features_t of_table_features;
    of_table_stats_entry_t of_table_stats_entry;
    of_uint32_t of_uint32;
    of_uint64_t of_uint64;
    of_uint8_t of_uint8;

    /* List objects */
    of_list_action_t of_list_action;
    of_list_action_id_t of_list_action_id;
    of_list_bsn_interface_t of_list_bsn_interface;
    of_list_bsn_lacp_stats_entry_t of_list_bsn_lacp_stats_entry;
    of_list_bsn_port_counter_stats_entry_t of_list_bsn_port_counter_stats_entry;
    of_list_bsn_switch_pipeline_stats_entry_t of_list_bsn_switch_pipeline_stats_entry;
    of_list_bsn_vlan_counter_stats_entry_t of_list_bsn_vlan_counter_stats_entry;
    of_list_bucket_t of_list_bucket;
    of_list_bucket_counter_t of_list_bucket_counter;
    of_list_flow_stats_entry_t of_list_flow_stats_entry;
    of_list_group_desc_stats_entry_t of_list_group_desc_stats_entry;
    of_list_group_stats_entry_t of_list_group_stats_entry;
    of_list_hello_elem_t of_list_hello_elem;
    of_list_instruction_t of_list_instruction;
    of_list_meter_band_t of_list_meter_band;
    of_list_meter_band_stats_t of_list_meter_band_stats;
    of_list_meter_stats_t of_list_meter_stats;
    of_list_oxm_t of_list_oxm;
    of_list_packet_queue_t of_list_packet_queue;
    of_list_port_desc_t of_list_port_desc;
    of_list_port_stats_entry_t of_list_port_stats_entry;
    of_list_queue_prop_t of_list_queue_prop;
    of_list_queue_stats_entry_t of_list_queue_stats_entry;
    of_list_table_feature_prop_t of_list_table_feature_prop;
    of_list_table_features_t of_list_table_features;
    of_list_table_stats_entry_t of_list_table_stats_entry;
    of_list_uint32_t of_list_uint32;
    of_list_uint64_t of_list_uint64;
    of_list_uint8_t of_list_uint8;
};

/**
 * Inheritance super class for of_queue_prop
 *
 * This class is the union of of_queue_prop classes.  You can refer
 * to it untyped by refering to the member 'header' whose structure
 * is common across all sub-classes.
 */

union of_queue_prop_u {
    of_queue_prop_header_t header; /* Generic instance */
    of_queue_prop_experimenter_t experimenter;
    of_queue_prop_max_rate_t max_rate;
    of_queue_prop_min_rate_t min_rate;
};

/**
 * Inheritance super class for of_hello_elem
 *
 * This class is the union of of_hello_elem classes.  You can refer
 * to it untyped by refering to the member 'header' whose structure
 * is common across all sub-classes.
 */

union of_hello_elem_u {
    of_hello_elem_header_t header; /* Generic instance */
    of_hello_elem_versionbitmap_t versionbitmap;
};

/**
 * Inheritance super class for of_bsn_vport
 *
 * This class is the union of of_bsn_vport classes.  You can refer
 * to it untyped by refering to the member 'header' whose structure
 * is common across all sub-classes.
 */

union of_bsn_vport_u {
    of_bsn_vport_header_t header; /* Generic instance */
    of_bsn_vport_q_in_q_t q_in_q;
};

/**
 * Inheritance super class for of_table_feature_prop
 *
 * This class is the union of of_table_feature_prop classes.  You can refer
 * to it untyped by refering to the member 'header' whose structure
 * is common across all sub-classes.
 */

union of_table_feature_prop_u {
    of_table_feature_prop_header_t header; /* Generic instance */
    of_table_feature_prop_apply_actions_t apply_actions;
    of_table_feature_prop_apply_actions_miss_t apply_actions_miss;
    of_table_feature_prop_apply_setfield_t apply_setfield;
    of_table_feature_prop_apply_setfield_miss_t apply_setfield_miss;
    of_table_feature_prop_experimenter_t experimenter;
    of_table_feature_prop_instructions_t instructions;
    of_table_feature_prop_instructions_miss_t instructions_miss;
    of_table_feature_prop_match_t match;
    of_table_feature_prop_next_tables_t next_tables;
    of_table_feature_prop_next_tables_miss_t next_tables_miss;
    of_table_feature_prop_wildcards_t wildcards;
    of_table_feature_prop_write_actions_t write_actions;
    of_table_feature_prop_write_actions_miss_t write_actions_miss;
    of_table_feature_prop_write_setfield_t write_setfield;
    of_table_feature_prop_write_setfield_miss_t write_setfield_miss;
};

/**
 * Inheritance super class for of_action
 *
 * This class is the union of of_action classes.  You can refer
 * to it untyped by refering to the member 'header' whose structure
 * is common across all sub-classes.
 */

union of_action_u {
    of_action_header_t header; /* Generic instance */
    of_action_bsn_t bsn;
    of_action_bsn_mirror_t bsn_mirror;
    of_action_bsn_set_tunnel_dst_t bsn_set_tunnel_dst;
    of_action_copy_ttl_in_t copy_ttl_in;
    of_action_copy_ttl_out_t copy_ttl_out;
    of_action_dec_mpls_ttl_t dec_mpls_ttl;
    of_action_dec_nw_ttl_t dec_nw_ttl;
    of_action_enqueue_t enqueue;
    of_action_experimenter_t experimenter;
    of_action_group_t group;
    of_action_nicira_t nicira;
    of_action_nicira_dec_ttl_t nicira_dec_ttl;
    of_action_output_t output;
    of_action_pop_mpls_t pop_mpls;
    of_action_pop_pbb_t pop_pbb;
    of_action_pop_vlan_t pop_vlan;
    of_action_push_mpls_t push_mpls;
    of_action_push_pbb_t push_pbb;
    of_action_push_vlan_t push_vlan;
    of_action_set_dl_dst_t set_dl_dst;
    of_action_set_dl_src_t set_dl_src;
    of_action_set_field_t set_field;
    of_action_set_mpls_label_t set_mpls_label;
    of_action_set_mpls_tc_t set_mpls_tc;
    of_action_set_mpls_ttl_t set_mpls_ttl;
    of_action_set_nw_dst_t set_nw_dst;
    of_action_set_nw_ecn_t set_nw_ecn;
    of_action_set_nw_src_t set_nw_src;
    of_action_set_nw_tos_t set_nw_tos;
    of_action_set_nw_ttl_t set_nw_ttl;
    of_action_set_queue_t set_queue;
    of_action_set_tp_dst_t set_tp_dst;
    of_action_set_tp_src_t set_tp_src;
    of_action_set_vlan_pcp_t set_vlan_pcp;
    of_action_set_vlan_vid_t set_vlan_vid;
    of_action_strip_vlan_t strip_vlan;
};

/**
 * Inheritance super class for of_instruction
 *
 * This class is the union of of_instruction classes.  You can refer
 * to it untyped by refering to the member 'header' whose structure
 * is common across all sub-classes.
 */

union of_instruction_u {
    of_instruction_header_t header; /* Generic instance */
    of_instruction_apply_actions_t apply_actions;
    of_instruction_bsn_t bsn;
    of_instruction_bsn_disable_src_mac_check_t bsn_disable_src_mac_check;
    of_instruction_clear_actions_t clear_actions;
    of_instruction_experimenter_t experimenter;
    of_instruction_goto_table_t goto_table;
    of_instruction_meter_t meter;
    of_instruction_write_actions_t write_actions;
    of_instruction_write_metadata_t write_metadata;
};

/**
 * Inheritance super class for of_instruction_id
 *
 * This class is the union of of_instruction_id classes.  You can refer
 * to it untyped by refering to the member 'header' whose structure
 * is common across all sub-classes.
 */

union of_instruction_id_u {
    of_instruction_id_header_t header; /* Generic instance */
    of_instruction_id_apply_actions_t apply_actions;
    of_instruction_id_bsn_t bsn;
    of_instruction_id_bsn_disable_src_mac_check_t bsn_disable_src_mac_check;
    of_instruction_id_clear_actions_t clear_actions;
    of_instruction_id_experimenter_t experimenter;
    of_instruction_id_goto_table_t goto_table;
    of_instruction_id_meter_t meter;
    of_instruction_id_write_actions_t write_actions;
    of_instruction_id_write_metadata_t write_metadata;
};

/**
 * Inheritance super class for of_meter_band
 *
 * This class is the union of of_meter_band classes.  You can refer
 * to it untyped by refering to the member 'header' whose structure
 * is common across all sub-classes.
 */

union of_meter_band_u {
    of_meter_band_header_t header; /* Generic instance */
    of_meter_band_drop_t drop;
    of_meter_band_dscp_remark_t dscp_remark;
    of_meter_band_experimenter_t experimenter;
};

/**
 * Inheritance super class for of_action_id
 *
 * This class is the union of of_action_id classes.  You can refer
 * to it untyped by refering to the member 'header' whose structure
 * is common across all sub-classes.
 */

union of_action_id_u {
    of_action_id_header_t header; /* Generic instance */
    of_action_id_bsn_t bsn;
    of_action_id_bsn_mirror_t bsn_mirror;
    of_action_id_bsn_set_tunnel_dst_t bsn_set_tunnel_dst;
    of_action_id_copy_ttl_in_t copy_ttl_in;
    of_action_id_copy_ttl_out_t copy_ttl_out;
    of_action_id_dec_mpls_ttl_t dec_mpls_ttl;
    of_action_id_dec_nw_ttl_t dec_nw_ttl;
    of_action_id_experimenter_t experimenter;
    of_action_id_group_t group;
    of_action_id_nicira_t nicira;
    of_action_id_nicira_dec_ttl_t nicira_dec_ttl;
    of_action_id_output_t output;
    of_action_id_pop_mpls_t pop_mpls;
    of_action_id_pop_pbb_t pop_pbb;
    of_action_id_pop_vlan_t pop_vlan;
    of_action_id_push_mpls_t push_mpls;
    of_action_id_push_pbb_t push_pbb;
    of_action_id_push_vlan_t push_vlan;
    of_action_id_set_field_t set_field;
    of_action_id_set_mpls_ttl_t set_mpls_ttl;
    of_action_id_set_nw_ttl_t set_nw_ttl;
    of_action_id_set_queue_t set_queue;
};

/**
 * Inheritance super class for of_oxm
 *
 * This class is the union of of_oxm classes.  You can refer
 * to it untyped by refering to the member 'header' whose structure
 * is common across all sub-classes.
 */

union of_oxm_u {
    of_oxm_header_t header; /* Generic instance */
    of_oxm_arp_op_t arp_op;
    of_oxm_arp_op_masked_t arp_op_masked;
    of_oxm_arp_sha_t arp_sha;
    of_oxm_arp_sha_masked_t arp_sha_masked;
    of_oxm_arp_spa_t arp_spa;
    of_oxm_arp_spa_masked_t arp_spa_masked;
    of_oxm_arp_tha_t arp_tha;
    of_oxm_arp_tha_masked_t arp_tha_masked;
    of_oxm_arp_tpa_t arp_tpa;
    of_oxm_arp_tpa_masked_t arp_tpa_masked;
    of_oxm_bsn_global_vrf_allowed_t bsn_global_vrf_allowed;
    of_oxm_bsn_global_vrf_allowed_masked_t bsn_global_vrf_allowed_masked;
    of_oxm_bsn_in_ports_128_t bsn_in_ports_128;
    of_oxm_bsn_in_ports_128_masked_t bsn_in_ports_128_masked;
    of_oxm_bsn_l3_dst_class_id_t bsn_l3_dst_class_id;
    of_oxm_bsn_l3_dst_class_id_masked_t bsn_l3_dst_class_id_masked;
    of_oxm_bsn_l3_interface_class_id_t bsn_l3_interface_class_id;
    of_oxm_bsn_l3_interface_class_id_masked_t bsn_l3_interface_class_id_masked;
    of_oxm_bsn_l3_src_class_id_t bsn_l3_src_class_id;
    of_oxm_bsn_l3_src_class_id_masked_t bsn_l3_src_class_id_masked;
    of_oxm_bsn_lag_id_t bsn_lag_id;
    of_oxm_bsn_lag_id_masked_t bsn_lag_id_masked;
    of_oxm_bsn_vrf_t bsn_vrf;
    of_oxm_bsn_vrf_masked_t bsn_vrf_masked;
    of_oxm_eth_dst_t eth_dst;
    of_oxm_eth_dst_masked_t eth_dst_masked;
    of_oxm_eth_src_t eth_src;
    of_oxm_eth_src_masked_t eth_src_masked;
    of_oxm_eth_type_t eth_type;
    of_oxm_eth_type_masked_t eth_type_masked;
    of_oxm_icmpv4_code_t icmpv4_code;
    of_oxm_icmpv4_code_masked_t icmpv4_code_masked;
    of_oxm_icmpv4_type_t icmpv4_type;
    of_oxm_icmpv4_type_masked_t icmpv4_type_masked;
    of_oxm_icmpv6_code_t icmpv6_code;
    of_oxm_icmpv6_code_masked_t icmpv6_code_masked;
    of_oxm_icmpv6_type_t icmpv6_type;
    of_oxm_icmpv6_type_masked_t icmpv6_type_masked;
    of_oxm_in_phy_port_t in_phy_port;
    of_oxm_in_phy_port_masked_t in_phy_port_masked;
    of_oxm_in_port_t in_port;
    of_oxm_in_port_masked_t in_port_masked;
    of_oxm_ip_dscp_t ip_dscp;
    of_oxm_ip_dscp_masked_t ip_dscp_masked;
    of_oxm_ip_ecn_t ip_ecn;
    of_oxm_ip_ecn_masked_t ip_ecn_masked;
    of_oxm_ip_proto_t ip_proto;
    of_oxm_ip_proto_masked_t ip_proto_masked;
    of_oxm_ipv4_dst_t ipv4_dst;
    of_oxm_ipv4_dst_masked_t ipv4_dst_masked;
    of_oxm_ipv4_src_t ipv4_src;
    of_oxm_ipv4_src_masked_t ipv4_src_masked;
    of_oxm_ipv6_dst_t ipv6_dst;
    of_oxm_ipv6_dst_masked_t ipv6_dst_masked;
    of_oxm_ipv6_flabel_t ipv6_flabel;
    of_oxm_ipv6_flabel_masked_t ipv6_flabel_masked;
    of_oxm_ipv6_nd_sll_t ipv6_nd_sll;
    of_oxm_ipv6_nd_sll_masked_t ipv6_nd_sll_masked;
    of_oxm_ipv6_nd_target_t ipv6_nd_target;
    of_oxm_ipv6_nd_target_masked_t ipv6_nd_target_masked;
    of_oxm_ipv6_nd_tll_t ipv6_nd_tll;
    of_oxm_ipv6_nd_tll_masked_t ipv6_nd_tll_masked;
    of_oxm_ipv6_src_t ipv6_src;
    of_oxm_ipv6_src_masked_t ipv6_src_masked;
    of_oxm_metadata_t metadata;
    of_oxm_metadata_masked_t metadata_masked;
    of_oxm_mpls_label_t mpls_label;
    of_oxm_mpls_label_masked_t mpls_label_masked;
    of_oxm_mpls_tc_t mpls_tc;
    of_oxm_mpls_tc_masked_t mpls_tc_masked;
    of_oxm_sctp_dst_t sctp_dst;
    of_oxm_sctp_dst_masked_t sctp_dst_masked;
    of_oxm_sctp_src_t sctp_src;
    of_oxm_sctp_src_masked_t sctp_src_masked;
    of_oxm_tcp_dst_t tcp_dst;
    of_oxm_tcp_dst_masked_t tcp_dst_masked;
    of_oxm_tcp_src_t tcp_src;
    of_oxm_tcp_src_masked_t tcp_src_masked;
    of_oxm_udp_dst_t udp_dst;
    of_oxm_udp_dst_masked_t udp_dst_masked;
    of_oxm_udp_src_t udp_src;
    of_oxm_udp_src_masked_t udp_src_masked;
    of_oxm_vlan_pcp_t vlan_pcp;
    of_oxm_vlan_pcp_masked_t vlan_pcp_masked;
    of_oxm_vlan_vid_t vlan_vid;
    of_oxm_vlan_vid_masked_t vlan_vid_masked;
};


#define _MAX_PARENT_ITERATIONS 4
/**
 * Iteratively update parent lengths thru hierarchy
 * @param obj The object whose length is being updated
 * @param delta The difference between the current and new lengths
 *
 * Note that this includes updating the object itself.  It will
 * iterate thru parents.
 *
 * Assumes delta > 0.
 */
static inline void
of_object_parent_length_update(of_object_t *obj, int delta)
{
#ifndef NDEBUG
    int count = 0;
    of_wire_buffer_t *wbuf;  /* For debug asserts only */
#endif

    while (obj != NULL) {
        ASSERT(count++ < _MAX_PARENT_ITERATIONS);
        obj->length += delta;
        if (obj->wire_length_set != NULL) {
            obj->wire_length_set(obj, obj->length);
        }
#ifndef NDEBUG
        wbuf = obj->wire_object.wbuf;
#endif

        /* Asserts for wire length checking */
        ASSERT(obj->length + obj->wire_object.obj_offset <=
               WBUF_CURRENT_BYTES(wbuf));
        if (obj->parent == NULL) {
            ASSERT(obj->length + obj->wire_object.obj_offset ==
                   WBUF_CURRENT_BYTES(wbuf));
        }

        obj = obj->parent;
    }
}

/****************************************************************
 *
 * Declarations of maps between on-the-wire type values and LOCI identifiers
 *
 ****************************************************************/

/**
 * Generic experimenter type value.  Applies to all except
 * top level message: Action, instruction, error, stats, queue_props, oxm
 */
#define OF_EXPERIMENTER_TYPE 0xffff

int of_experimenter_stats_request_to_object_id(uint32_t experimenter, uint32_t subtype, int ver);
int of_experimenter_stats_reply_to_object_id(uint32_t experimenter, uint32_t subtype, int ver);

/**
 * action wire type to object ID array.
 * Treat as private; use function accessor below
 */

extern const of_object_id_t *const of_action_type_to_id[OF_VERSION_ARRAY_MAX];

#define OF_ACTION_ITEM_COUNT 28


/**
 * Map an action wire value to an OF object
 * @param action The action type wire value
 * @param version The version associated with the check
 * @return The action OF object type
 * @return OF_OBJECT_INVALID if type does not map to an object
 *
 */
static inline of_object_id_t
of_action_to_object_id(int action, of_version_t version)
{
    if (!OF_VERSION_OKAY(version)) {
        return OF_OBJECT_INVALID;
    }
    if (action == OF_EXPERIMENTER_TYPE) {
        return OF_ACTION_EXPERIMENTER;
    }
    if (action < 0 || action >= OF_ACTION_ITEM_COUNT) {
        return OF_OBJECT_INVALID;
    }

    return of_action_type_to_id[version][action];
}

/**
 * action_id wire type to object ID array.
 * Treat as private; use function accessor below
 */

extern const of_object_id_t *const of_action_id_type_to_id[OF_VERSION_ARRAY_MAX];

#define OF_ACTION_ID_ITEM_COUNT 28


/**
 * Map an action_id wire value to an OF object
 * @param action_id The action_id type wire value
 * @param version The version associated with the check
 * @return The action_id OF object type
 * @return OF_OBJECT_INVALID if type does not map to an object
 *
 */
static inline of_object_id_t
of_action_id_to_object_id(int action_id, of_version_t version)
{
    if (!OF_VERSION_OKAY(version)) {
        return OF_OBJECT_INVALID;
    }
    if (action_id == OF_EXPERIMENTER_TYPE) {
        return OF_ACTION_ID_EXPERIMENTER;
    }
    if (action_id < 0 || action_id >= OF_ACTION_ID_ITEM_COUNT) {
        return OF_OBJECT_INVALID;
    }

    return of_action_id_type_to_id[version][action_id];
}

/**
 * instruction wire type to object ID array.
 * Treat as private; use function accessor below
 */

extern const of_object_id_t *const of_instruction_type_to_id[OF_VERSION_ARRAY_MAX];

#define OF_INSTRUCTION_ITEM_COUNT 7


/**
 * Map an instruction wire value to an OF object
 * @param instruction The instruction type wire value
 * @param version The version associated with the check
 * @return The instruction OF object type
 * @return OF_OBJECT_INVALID if type does not map to an object
 *
 */
static inline of_object_id_t
of_instruction_to_object_id(int instruction, of_version_t version)
{
    if (!OF_VERSION_OKAY(version)) {
        return OF_OBJECT_INVALID;
    }
    if (instruction == OF_EXPERIMENTER_TYPE) {
        return OF_INSTRUCTION_EXPERIMENTER;
    }
    if (instruction < 0 || instruction >= OF_INSTRUCTION_ITEM_COUNT) {
        return OF_OBJECT_INVALID;
    }

    return of_instruction_type_to_id[version][instruction];
}

/**
 * queue_prop wire type to object ID array.
 * Treat as private; use function accessor below
 */

extern const of_object_id_t *const of_queue_prop_type_to_id[OF_VERSION_ARRAY_MAX];

#define OF_QUEUE_PROP_ITEM_COUNT 3


/**
 * Map an queue_prop wire value to an OF object
 * @param queue_prop The queue_prop type wire value
 * @param version The version associated with the check
 * @return The queue_prop OF object type
 * @return OF_OBJECT_INVALID if type does not map to an object
 *
 */
static inline of_object_id_t
of_queue_prop_to_object_id(int queue_prop, of_version_t version)
{
    if (!OF_VERSION_OKAY(version)) {
        return OF_OBJECT_INVALID;
    }
    if (queue_prop == OF_EXPERIMENTER_TYPE) {
        return OF_QUEUE_PROP_EXPERIMENTER;
    }
    if (queue_prop < 0 || queue_prop >= OF_QUEUE_PROP_ITEM_COUNT) {
        return OF_OBJECT_INVALID;
    }

    return of_queue_prop_type_to_id[version][queue_prop];
}

/**
 * table_feature_prop wire type to object ID array.
 * Treat as private; use function accessor below
 */

extern const of_object_id_t *const of_table_feature_prop_type_to_id[OF_VERSION_ARRAY_MAX];

#define OF_TABLE_FEATURE_PROP_ITEM_COUNT 16


/**
 * Map an table_feature_prop wire value to an OF object
 * @param table_feature_prop The table_feature_prop type wire value
 * @param version The version associated with the check
 * @return The table_feature_prop OF object type
 * @return OF_OBJECT_INVALID if type does not map to an object
 *
 */
static inline of_object_id_t
of_table_feature_prop_to_object_id(int table_feature_prop, of_version_t version)
{
    if (!OF_VERSION_OKAY(version)) {
        return OF_OBJECT_INVALID;
    }
    if (table_feature_prop == OF_EXPERIMENTER_TYPE) {
        return OF_TABLE_FEATURE_PROP_EXPERIMENTER;
    }
    if (table_feature_prop < 0 || table_feature_prop >= OF_TABLE_FEATURE_PROP_ITEM_COUNT) {
        return OF_OBJECT_INVALID;
    }

    return of_table_feature_prop_type_to_id[version][table_feature_prop];
}

/**
 * meter_band wire type to object ID array.
 * Treat as private; use function accessor below
 */

extern const of_object_id_t *const of_meter_band_type_to_id[OF_VERSION_ARRAY_MAX];

#define OF_METER_BAND_ITEM_COUNT 3


/**
 * Map an meter_band wire value to an OF object
 * @param meter_band The meter_band type wire value
 * @param version The version associated with the check
 * @return The meter_band OF object type
 * @return OF_OBJECT_INVALID if type does not map to an object
 *
 */
static inline of_object_id_t
of_meter_band_to_object_id(int meter_band, of_version_t version)
{
    if (!OF_VERSION_OKAY(version)) {
        return OF_OBJECT_INVALID;
    }
    if (meter_band == OF_EXPERIMENTER_TYPE) {
        return OF_METER_BAND_EXPERIMENTER;
    }
    if (meter_band < 0 || meter_band >= OF_METER_BAND_ITEM_COUNT) {
        return OF_OBJECT_INVALID;
    }

    return of_meter_band_type_to_id[version][meter_band];
}

/**
 * hello_elem wire type to object ID array.
 * Treat as private; use function accessor below
 */

extern const of_object_id_t *const of_hello_elem_type_to_id[OF_VERSION_ARRAY_MAX];

#define OF_HELLO_ELEM_ITEM_COUNT 2


/**
 * Map an hello_elem wire value to an OF object
 * @param hello_elem The hello_elem type wire value
 * @param version The version associated with the check
 * @return The hello_elem OF object type
 * @return OF_OBJECT_INVALID if type does not map to an object
 *
 */
static inline of_object_id_t
of_hello_elem_to_object_id(int hello_elem, of_version_t version)
{
    if (!OF_VERSION_OKAY(version)) {
        return OF_OBJECT_INVALID;
    }
    if (hello_elem < 0 || hello_elem >= OF_HELLO_ELEM_ITEM_COUNT) {
        return OF_OBJECT_INVALID;
    }

    return of_hello_elem_type_to_id[version][hello_elem];
}

/**
 * stats_reply wire type to object ID array.
 * Treat as private; use function accessor below
 */

extern const of_object_id_t *const of_stats_reply_type_to_id[OF_VERSION_ARRAY_MAX];

#define OF_STATS_REPLY_ITEM_COUNT 14


/**
 * Map an stats_reply wire value to an OF object
 * @param stats_reply The stats_reply type wire value
 * @param version The version associated with the check
 * @return The stats_reply OF object type
 * @return OF_OBJECT_INVALID if type does not map to an object
 *
 */
static inline of_object_id_t
of_stats_reply_to_object_id(int stats_reply, of_version_t version)
{
    if (!OF_VERSION_OKAY(version)) {
        return OF_OBJECT_INVALID;
    }
    if (stats_reply == OF_EXPERIMENTER_TYPE) {
        return OF_EXPERIMENTER_STATS_REPLY;
    }
    if (stats_reply < 0 || stats_reply >= OF_STATS_REPLY_ITEM_COUNT) {
        return OF_OBJECT_INVALID;
    }

    return of_stats_reply_type_to_id[version][stats_reply];
}

/**
 * stats_request wire type to object ID array.
 * Treat as private; use function accessor below
 */

extern const of_object_id_t *const of_stats_request_type_to_id[OF_VERSION_ARRAY_MAX];

#define OF_STATS_REQUEST_ITEM_COUNT 14


/**
 * Map an stats_request wire value to an OF object
 * @param stats_request The stats_request type wire value
 * @param version The version associated with the check
 * @return The stats_request OF object type
 * @return OF_OBJECT_INVALID if type does not map to an object
 *
 */
static inline of_object_id_t
of_stats_request_to_object_id(int stats_request, of_version_t version)
{
    if (!OF_VERSION_OKAY(version)) {
        return OF_OBJECT_INVALID;
    }
    if (stats_request == OF_EXPERIMENTER_TYPE) {
        return OF_EXPERIMENTER_STATS_REQUEST;
    }
    if (stats_request < 0 || stats_request >= OF_STATS_REQUEST_ITEM_COUNT) {
        return OF_OBJECT_INVALID;
    }

    return of_stats_request_type_to_id[version][stats_request];
}

/**
 * error_msg wire type to object ID array.
 * Treat as private; use function accessor below
 */

extern const of_object_id_t *const of_error_msg_type_to_id[OF_VERSION_ARRAY_MAX];

#define OF_ERROR_MSG_ITEM_COUNT 14


/**
 * Map an error_msg wire value to an OF object
 * @param error_msg The error_msg type wire value
 * @param version The version associated with the check
 * @return The error_msg OF object type
 * @return OF_OBJECT_INVALID if type does not map to an object
 *
 */
static inline of_object_id_t
of_error_msg_to_object_id(uint16_t error_msg, of_version_t version)
{
    if (!OF_VERSION_OKAY(version)) {
        return OF_OBJECT_INVALID;
    }
    if (error_msg == OF_EXPERIMENTER_TYPE) {
        return OF_EXPERIMENTER_ERROR_MSG;
    }
    if (error_msg < 0 || error_msg >= OF_ERROR_MSG_ITEM_COUNT) {
        return OF_OBJECT_INVALID;
    }

    return of_error_msg_type_to_id[version][error_msg];
}

/**
 * flow_mod wire type to object ID array.
 * Treat as private; use function accessor below
 */

extern const of_object_id_t *const of_flow_mod_type_to_id[OF_VERSION_ARRAY_MAX];

#define OF_FLOW_MOD_ITEM_COUNT 5


/**
 * Map an flow_mod wire value to an OF object
 * @param flow_mod The flow_mod type wire value
 * @param version The version associated with the check
 * @return The flow_mod OF object type
 * @return OF_OBJECT_INVALID if type does not map to an object
 *
 */
static inline of_object_id_t
of_flow_mod_to_object_id(int flow_mod, of_version_t version)
{
    if (!OF_VERSION_OKAY(version)) {
        return OF_OBJECT_INVALID;
    }
    if (flow_mod < 0 || flow_mod >= OF_FLOW_MOD_ITEM_COUNT) {
        return OF_OBJECT_INVALID;
    }

    return of_flow_mod_type_to_id[version][flow_mod];
}

/**
 * group_mod wire type to object ID array.
 * Treat as private; use function accessor below
 */

extern const of_object_id_t *const of_group_mod_type_to_id[OF_VERSION_ARRAY_MAX];

#define OF_GROUP_MOD_ITEM_COUNT 3


/**
 * Map an group_mod wire value to an OF object
 * @param group_mod The group_mod type wire value
 * @param version The version associated with the check
 * @return The group_mod OF object type
 * @return OF_OBJECT_INVALID if type does not map to an object
 *
 */
static inline of_object_id_t
of_group_mod_to_object_id(int group_mod, of_version_t version)
{
    if (!OF_VERSION_OKAY(version)) {
        return OF_OBJECT_INVALID;
    }
    if (group_mod < 0 || group_mod >= OF_GROUP_MOD_ITEM_COUNT) {
        return OF_OBJECT_INVALID;
    }

    return of_group_mod_type_to_id[version][group_mod];
}

/* NOTE: We could optimize the OXM and only generate OF 1.2 versions. */

/**
 * oxm wire type to object ID array.
 * Treat as private; use function accessor below
 */

extern const of_object_id_t *const of_oxm_type_to_id[OF_VERSION_ARRAY_MAX];

#define OF_OXM_ITEM_COUNT 72


/**
 * Map an oxm wire value to an OF object
 * @param oxm The oxm type wire value
 * @param version The version associated with the check
 * @return The oxm OF object type
 * @return OF_OBJECT_INVALID if type does not map to an object
 *
 */
static inline of_object_id_t
of_oxm_to_object_id(uint32_t type_len, of_version_t version)
{
    if (!OF_VERSION_OKAY(version)) {
        return OF_OBJECT_INVALID;
    }

    uint16_t class = (type_len >> 16) & 0xffff;
    uint8_t masked_type = (type_len >> 8) & 0xff;

    if (class == 0x8000) {
        if (masked_type < 0 || masked_type >= OF_OXM_ITEM_COUNT) {
            return OF_OBJECT_INVALID;
        }

        return of_oxm_type_to_id[version][masked_type];
    } else if (class == 0x0003) {
        switch (masked_type) {
        case 0x00: return OF_OXM_BSN_IN_PORTS_128;
        case 0x01: return OF_OXM_BSN_IN_PORTS_128_MASKED;
        case 0x02: return OF_OXM_BSN_LAG_ID;
        case 0x03: return OF_OXM_BSN_LAG_ID_MASKED;
        case 0x04: return OF_OXM_BSN_VRF;
        case 0x05: return OF_OXM_BSN_VRF_MASKED;
        case 0x06: return OF_OXM_BSN_GLOBAL_VRF_ALLOWED;
        case 0x07: return OF_OXM_BSN_GLOBAL_VRF_ALLOWED_MASKED;
        case 0x08: return OF_OXM_BSN_L3_INTERFACE_CLASS_ID;
        case 0x09: return OF_OXM_BSN_L3_INTERFACE_CLASS_ID_MASKED;
        case 0x0a: return OF_OXM_BSN_L3_SRC_CLASS_ID;
        case 0x0b: return OF_OXM_BSN_L3_SRC_CLASS_ID_MASKED;
        case 0x0c: return OF_OXM_BSN_L3_DST_CLASS_ID;
        case 0x0d: return OF_OXM_BSN_L3_DST_CLASS_ID_MASKED;
        default: return OF_OBJECT_INVALID;
        }
    } else {
        return OF_OBJECT_INVALID;
    }
}

/**
 * @brief Map a message known to be an exp msg to the proper object
 *
 * Assume that the message is a vendor/experimenter message.  Determine
 * the specific object type for the message.
 * @param msg An OF message object (uint8_t *)
 * @param length The number of bytes in the message (for error checking)
 * @param version Version of message
 * @returns object ID of specific type if recognized or OF_EXPERIMENTER if not
 *
 * @todo put OF_EXPERIMENTER_<name> in loci_base.h
 */

static inline of_object_id_t
of_message_experimenter_to_object_id(of_message_t msg, of_version_t version) {
    uint32_t experimenter_id;
    uint32_t subtype;

    /* Extract experimenter and subtype value; look for match from type maps */
    experimenter_id = of_message_experimenter_id_get(msg);
    subtype = of_message_experimenter_subtype_get(msg);

    /* Do a simple if/else search for the ver, experimenter and subtype */

    if ((experimenter_id == OF_EXPERIMENTER_ID_NICIRA) &&
            (version == OF_VERSION_1_0)) {

        if (subtype == 10) {
            return OF_NICIRA_CONTROLLER_ROLE_REQUEST;
        }

        if (subtype == 11) {
            return OF_NICIRA_CONTROLLER_ROLE_REPLY;
        }

    }

    if ((experimenter_id == OF_EXPERIMENTER_ID_BSN) &&
            (version == OF_VERSION_1_0)) {

        if (subtype == 9) {
            return OF_BSN_GET_INTERFACES_REQUEST;
        }

        if (subtype == 1) {
            return OF_BSN_GET_IP_MASK_REQUEST;
        }

        if (subtype == 34) {
            return OF_BSN_PDU_RX_REPLY;
        }

        if (subtype == 22) {
            return OF_BSN_BW_CLEAR_DATA_REPLY;
        }

        if (subtype == 25) {
            return OF_BSN_SET_PKTIN_SUPPRESSION_REPLY;
        }

        if (subtype == 28) {
            return OF_BSN_HYBRID_GET_REPLY;
        }

        if (subtype == 14) {
            return OF_BSN_GET_L2_TABLE_REPLY;
        }

        if (subtype == 26) {
            return OF_BSN_VIRTUAL_PORT_REMOVE_REPLY;
        }

        if (subtype == 11) {
            return OF_BSN_SET_PKTIN_SUPPRESSION_REQUEST;
        }

        if (subtype == 7) {
            return OF_BSN_SHELL_OUTPUT;
        }

        if (subtype == 6) {
            return OF_BSN_SHELL_COMMAND;
        }

        if (subtype == 5) {
            return OF_BSN_GET_MIRRORING_REPLY;
        }

        if (subtype == 13) {
            return OF_BSN_GET_L2_TABLE_REQUEST;
        }

        if (subtype == 32) {
            return OF_BSN_PDU_TX_REPLY;
        }

        if (subtype == 20) {
            return OF_BSN_BW_ENABLE_GET_REPLY;
        }

        if (subtype == 23) {
            return OF_BSN_BW_ENABLE_SET_REPLY;
        }

        if (subtype == 17) {
            return OF_BSN_VIRTUAL_PORT_REMOVE_REQUEST;
        }

        if (subtype == 8) {
            return OF_BSN_SHELL_STATUS;
        }

        if (subtype == 10) {
            return OF_BSN_GET_INTERFACES_REPLY;
        }

        if (subtype == 24) {
            return OF_BSN_SET_L2_TABLE_REPLY;
        }

        if (subtype == 2) {
            return OF_BSN_GET_IP_MASK_REPLY;
        }

        if (subtype == 21) {
            return OF_BSN_BW_CLEAR_DATA_REQUEST;
        }

        if (subtype == 0) {
            return OF_BSN_SET_IP_MASK;
        }

        if (subtype == 35) {
            return OF_BSN_PDU_RX_TIMEOUT;
        }

        if (subtype == 33) {
            return OF_BSN_PDU_RX_REQUEST;
        }

        if (subtype == 15) {
            return OF_BSN_VIRTUAL_PORT_CREATE_REQUEST;
        }

        if (subtype == 3) {
            return OF_BSN_SET_MIRRORING;
        }

        if (subtype == 31) {
            return OF_BSN_PDU_TX_REQUEST;
        }

        if (subtype == 16) {
            return OF_BSN_VIRTUAL_PORT_CREATE_REPLY;
        }

        if (subtype == 18) {
            return OF_BSN_BW_ENABLE_SET_REQUEST;
        }

        if (subtype == 4) {
            return OF_BSN_GET_MIRRORING_REQUEST;
        }

        if (subtype == 19) {
            return OF_BSN_BW_ENABLE_GET_REQUEST;
        }

        if (subtype == 12) {
            return OF_BSN_SET_L2_TABLE_REQUEST;
        }

        if (subtype == 27) {
            return OF_BSN_HYBRID_GET_REQUEST;
        }

    }

    if ((experimenter_id == OF_EXPERIMENTER_ID_BSN) &&
            (version == OF_VERSION_1_1)) {

        if (subtype == 9) {
            return OF_BSN_GET_INTERFACES_REQUEST;
        }

        if (subtype == 34) {
            return OF_BSN_PDU_RX_REPLY;
        }

        if (subtype == 22) {
            return OF_BSN_BW_CLEAR_DATA_REPLY;
        }

        if (subtype == 25) {
            return OF_BSN_SET_PKTIN_SUPPRESSION_REPLY;
        }

        if (subtype == 16) {
            return OF_BSN_VIRTUAL_PORT_CREATE_REPLY;
        }

        if (subtype == 11) {
            return OF_BSN_SET_PKTIN_SUPPRESSION_REQUEST;
        }

        if (subtype == 5) {
            return OF_BSN_GET_MIRRORING_REPLY;
        }

        if (subtype == 32) {
            return OF_BSN_PDU_TX_REPLY;
        }

        if (subtype == 20) {
            return OF_BSN_BW_ENABLE_GET_REPLY;
        }

        if (subtype == 23) {
            return OF_BSN_BW_ENABLE_SET_REPLY;
        }

        if (subtype == 17) {
            return OF_BSN_VIRTUAL_PORT_REMOVE_REQUEST;
        }

        if (subtype == 10) {
            return OF_BSN_GET_INTERFACES_REPLY;
        }

        if (subtype == 3) {
            return OF_BSN_SET_MIRRORING;
        }

        if (subtype == 21) {
            return OF_BSN_BW_CLEAR_DATA_REQUEST;
        }

        if (subtype == 35) {
            return OF_BSN_PDU_RX_TIMEOUT;
        }

        if (subtype == 33) {
            return OF_BSN_PDU_RX_REQUEST;
        }

        if (subtype == 15) {
            return OF_BSN_VIRTUAL_PORT_CREATE_REQUEST;
        }

        if (subtype == 31) {
            return OF_BSN_PDU_TX_REQUEST;
        }

        if (subtype == 26) {
            return OF_BSN_VIRTUAL_PORT_REMOVE_REPLY;
        }

        if (subtype == 18) {
            return OF_BSN_BW_ENABLE_SET_REQUEST;
        }

        if (subtype == 19) {
            return OF_BSN_BW_ENABLE_GET_REQUEST;
        }

        if (subtype == 4) {
            return OF_BSN_GET_MIRRORING_REQUEST;
        }

    }

    if ((experimenter_id == OF_EXPERIMENTER_ID_BSN) &&
            (version == OF_VERSION_1_2)) {

        if (subtype == 9) {
            return OF_BSN_GET_INTERFACES_REQUEST;
        }

        if (subtype == 34) {
            return OF_BSN_PDU_RX_REPLY;
        }

        if (subtype == 22) {
            return OF_BSN_BW_CLEAR_DATA_REPLY;
        }

        if (subtype == 25) {
            return OF_BSN_SET_PKTIN_SUPPRESSION_REPLY;
        }

        if (subtype == 16) {
            return OF_BSN_VIRTUAL_PORT_CREATE_REPLY;
        }

        if (subtype == 11) {
            return OF_BSN_SET_PKTIN_SUPPRESSION_REQUEST;
        }

        if (subtype == 5) {
            return OF_BSN_GET_MIRRORING_REPLY;
        }

        if (subtype == 32) {
            return OF_BSN_PDU_TX_REPLY;
        }

        if (subtype == 20) {
            return OF_BSN_BW_ENABLE_GET_REPLY;
        }

        if (subtype == 23) {
            return OF_BSN_BW_ENABLE_SET_REPLY;
        }

        if (subtype == 17) {
            return OF_BSN_VIRTUAL_PORT_REMOVE_REQUEST;
        }

        if (subtype == 10) {
            return OF_BSN_GET_INTERFACES_REPLY;
        }

        if (subtype == 3) {
            return OF_BSN_SET_MIRRORING;
        }

        if (subtype == 21) {
            return OF_BSN_BW_CLEAR_DATA_REQUEST;
        }

        if (subtype == 35) {
            return OF_BSN_PDU_RX_TIMEOUT;
        }

        if (subtype == 33) {
            return OF_BSN_PDU_RX_REQUEST;
        }

        if (subtype == 15) {
            return OF_BSN_VIRTUAL_PORT_CREATE_REQUEST;
        }

        if (subtype == 31) {
            return OF_BSN_PDU_TX_REQUEST;
        }

        if (subtype == 26) {
            return OF_BSN_VIRTUAL_PORT_REMOVE_REPLY;
        }

        if (subtype == 18) {
            return OF_BSN_BW_ENABLE_SET_REQUEST;
        }

        if (subtype == 19) {
            return OF_BSN_BW_ENABLE_GET_REQUEST;
        }

        if (subtype == 4) {
            return OF_BSN_GET_MIRRORING_REQUEST;
        }

    }

    if ((experimenter_id == OF_EXPERIMENTER_ID_BSN) &&
            (version == OF_VERSION_1_3)) {

        if (subtype == 43) {
            return OF_BSN_LACP_CONVERGENCE_NOTIF;
        }

        if (subtype == 9) {
            return OF_BSN_GET_INTERFACES_REQUEST;
        }

        if (subtype == 26) {
            return OF_BSN_VIRTUAL_PORT_REMOVE_REPLY;
        }

        if (subtype == 17) {
            return OF_BSN_VIRTUAL_PORT_REMOVE_REQUEST;
        }

        if (subtype == 34) {
            return OF_BSN_PDU_RX_REPLY;
        }

        if (subtype == 22) {
            return OF_BSN_BW_CLEAR_DATA_REPLY;
        }

        if (subtype == 25) {
            return OF_BSN_SET_PKTIN_SUPPRESSION_REPLY;
        }

        if (subtype == 45) {
            return OF_BSN_TIME_REPLY;
        }

        if (subtype == 16) {
            return OF_BSN_VIRTUAL_PORT_CREATE_REPLY;
        }

        if (subtype == 41) {
            return OF_BSN_SET_LACP_REQUEST;
        }

        if (subtype == 11) {
            return OF_BSN_SET_PKTIN_SUPPRESSION_REQUEST;
        }

        if (subtype == 5) {
            return OF_BSN_GET_MIRRORING_REPLY;
        }

        if (subtype == 36) {
            return OF_BSN_FLOW_IDLE_ENABLE_SET_REQUEST;
        }

        if (subtype == 32) {
            return OF_BSN_PDU_TX_REPLY;
        }

        if (subtype == 15) {
            return OF_BSN_VIRTUAL_PORT_CREATE_REQUEST;
        }

        if (subtype == 38) {
            return OF_BSN_FLOW_IDLE_ENABLE_GET_REQUEST;
        }

        if (subtype == 20) {
            return OF_BSN_BW_ENABLE_GET_REPLY;
        }

        if (subtype == 23) {
            return OF_BSN_BW_ENABLE_SET_REPLY;
        }

        if (subtype == 44) {
            return OF_BSN_TIME_REQUEST;
        }

        if (subtype == 10) {
            return OF_BSN_GET_INTERFACES_REPLY;
        }

        if (subtype == 3) {
            return OF_BSN_SET_MIRRORING;
        }

        if (subtype == 54) {
            return OF_BSN_SET_SWITCH_PIPELINE_REPLY;
        }

        if (subtype == 21) {
            return OF_BSN_BW_CLEAR_DATA_REQUEST;
        }

        if (subtype == 42) {
            return OF_BSN_SET_LACP_REPLY;
        }

        if (subtype == 53) {
            return OF_BSN_SET_SWITCH_PIPELINE_REQUEST;
        }

        if (subtype == 35) {
            return OF_BSN_PDU_RX_TIMEOUT;
        }

        if (subtype == 33) {
            return OF_BSN_PDU_RX_REQUEST;
        }

        if (subtype == 51) {
            return OF_BSN_GET_SWITCH_PIPELINE_REQUEST;
        }

        if (subtype == 39) {
            return OF_BSN_FLOW_IDLE_ENABLE_GET_REPLY;
        }

        if (subtype == 31) {
            return OF_BSN_PDU_TX_REQUEST;
        }

        if (subtype == 52) {
            return OF_BSN_GET_SWITCH_PIPELINE_REPLY;
        }

        if (subtype == 18) {
            return OF_BSN_BW_ENABLE_SET_REQUEST;
        }

        if (subtype == 37) {
            return OF_BSN_FLOW_IDLE_ENABLE_SET_REPLY;
        }

        if (subtype == 40) {
            return OF_BSN_FLOW_IDLE;
        }

        if (subtype == 19) {
            return OF_BSN_BW_ENABLE_GET_REQUEST;
        }

        if (subtype == 4) {
            return OF_BSN_GET_MIRRORING_REQUEST;
        }

    }

    return OF_EXPERIMENTER;
}

/**
 * message wire type to object ID array.
 * Treat as private; use function accessor below
 */

extern const of_object_id_t *const of_message_type_to_id[OF_VERSION_ARRAY_MAX];

#define OF_MESSAGE_ITEM_COUNT 30


/**
 * Extract the type info from the message and determine its object type
 * @param msg An OF message object (uint8_t *)
 * @param length The number of bytes in the message (for error checking)
 * @returns object ID or OF_OBJECT_INVALID if parse error
 */

static inline of_object_id_t
of_message_to_object_id(of_message_t msg, int length) {
    uint8_t type;
    of_version_t ver;
    of_object_id_t obj_id;
    uint16_t stats_type;
    uint16_t err_type;
    uint8_t flow_mod_cmd;
    uint32_t experimenter, subtype;
    uint16_t group_mod_cmd;

    if (length < OF_MESSAGE_MIN_LENGTH) {
        return OF_OBJECT_INVALID;
    }
    type = of_message_type_get(msg);
    ver = of_message_version_get(msg);
    if (!OF_VERSION_OKAY(ver)) {
        return OF_OBJECT_INVALID;
    }

    if (type >= OF_MESSAGE_ITEM_COUNT) {
        return OF_OBJECT_INVALID;
    }

    obj_id = of_message_type_to_id[ver][type];

    /* Remap to specific message if known */
    if (obj_id == OF_EXPERIMENTER) {
        if (length < OF_MESSAGE_EXPERIMENTER_MIN_LENGTH) {
            return OF_OBJECT_INVALID;
        }
        return of_message_experimenter_to_object_id(msg, ver);
    }

    /* Remap to add/delete/strict version */
    if (obj_id == OF_FLOW_MOD) {
        if (length < OF_MESSAGE_MIN_FLOW_MOD_LENGTH(ver)) {
            return OF_OBJECT_INVALID;
        }
        flow_mod_cmd = of_message_flow_mod_command_get(msg, ver);
        obj_id = of_flow_mod_to_object_id(flow_mod_cmd, ver);
    }

    if ((obj_id == OF_STATS_REQUEST) || (obj_id == OF_STATS_REPLY)) {
        if (length < OF_MESSAGE_MIN_STATS_LENGTH) {
            return OF_OBJECT_INVALID;
        }
        stats_type = of_message_stats_type_get(msg);
        if (stats_type == OF_STATS_TYPE_EXPERIMENTER) {
            if (length < OF_MESSAGE_STATS_EXPERIMENTER_MIN_LENGTH) {
                return OF_OBJECT_INVALID;
            }
            experimenter = of_message_stats_experimenter_id_get(msg);
            subtype = of_message_stats_experimenter_subtype_get(msg);
            if (obj_id == OF_STATS_REQUEST) {
                obj_id = of_experimenter_stats_request_to_object_id(experimenter, subtype, ver);
            } else {
                obj_id = of_experimenter_stats_reply_to_object_id(experimenter, subtype, ver);
            }
        } else {
            if (obj_id == OF_STATS_REQUEST) {
                obj_id = of_stats_request_to_object_id(stats_type, ver);
            } else {
                obj_id = of_stats_reply_to_object_id(stats_type, ver);
            }
        }
    }

    if (obj_id == OF_ERROR_MSG) {
        if (length < OF_MESSAGE_MIN_ERROR_LENGTH) {
            return OF_OBJECT_INVALID;
        }
        err_type = of_message_error_type_get(msg);
        obj_id = of_error_msg_to_object_id(err_type, ver);
    }

    if (obj_id == OF_GROUP_MOD) {
        if (length < OF_MESSAGE_MIN_GROUP_MOD_LENGTH) {
            return OF_OBJECT_INVALID;
        }
        group_mod_cmd = of_message_group_mod_command_get(msg);
        obj_id = of_group_mod_to_object_id(group_mod_cmd, ver);
    }

    return obj_id;
}

extern const int *const of_object_to_type_map[OF_VERSION_ARRAY_MAX];

/**
 * Map an object ID to its primary wire type value
 * @param id An object ID
 * @return For message objects, the type value in the OpenFlow header
 * @return For non-message objects such as actions, instructions, OXMs
 * returns the type value that appears in the respective sub-header
 * @return -1 For improper version or out of bounds input
 *
 * NOTE that for stats request/reply, returns the header type, not the
 * sub-type
 *
 * Also, note that the value is returned as a signed integer.  So -1 is
 * an error code, while 0xffff is the usual "experimenter" code.
 */
static inline int
of_object_to_wire_type(of_object_id_t id, of_version_t version)
{
    if (!OF_VERSION_OKAY(version)) {
        return -1;
    }
    if (id < 0 || id >= OF_OBJECT_COUNT) {
        return -1;
    }
    return of_object_to_type_map[version][id];
}


/**
 * Map from object ID to a triple, (is_extension, experimenter id, subtype)
 */

typedef struct of_experimenter_data_s {
    int is_extension;  /* Boolean indication that this is an extension */
    uint32_t experimenter_id;
    uint32_t subtype;
} of_experimenter_data_t;


extern const of_experimenter_data_t *const of_object_to_extension_data[OF_VERSION_ARRAY_MAX];

/**
 * Map from the object ID of an extension to the experimenter ID
 */
static inline uint32_t
of_extension_to_experimenter_id(of_object_id_t obj_id, of_version_t ver)
{
    if (obj_id < 0 || obj_id > OF_OBJECT_COUNT) {
        return (uint32_t) -1;
    }
    /* @fixme: Verify ver? */
    return of_object_to_extension_data[ver][obj_id].experimenter_id;
}

/**
 * Map from the object ID of an extension to the experimenter subtype
 */
static inline uint32_t
of_extension_to_experimenter_subtype(of_object_id_t obj_id, of_version_t ver)
{
    if (obj_id < 0 || obj_id > OF_OBJECT_COUNT) {
        return (uint32_t) -1;
    }
    /* @fixme: Verify ver? */
    return of_object_to_extension_data[ver][obj_id].subtype;
}

/**
 * Boolean function indicating the the given object ID/version
 * is recognized as a supported (decode-able) extension.
 */
static inline int
of_object_id_is_extension(of_object_id_t obj_id, of_version_t ver)
{
    if (obj_id < 0 || obj_id > OF_OBJECT_COUNT) {
        return (uint32_t) -1;
    }
    /* @fixme: Verify ver? */
    return of_object_to_extension_data[ver][obj_id].is_extension;
}

/**
 * Map an object ID to a stats type
 * @param id An object ID
 * @return The wire value for the stats type
 * @return -1 if not supported for this version
 * @return -1 if id is not a specific stats type ID
 *
 * Note that the value is returned as a signed integer.  So -1 is
 * an error code, while 0xffff is the usual "experimenter" code.
 */

static inline int
of_object_to_stats_type(of_object_id_t id, of_version_t version)
{
    if (!OF_VERSION_OKAY(version)) {
        return -1;
    }
    switch (id) {
    case OF_BSN_LACP_STATS_REPLY:
    case OF_BSN_LACP_STATS_REQUEST:
        if (version == OF_VERSION_1_0) break;
        if (version == OF_VERSION_1_1) break;
        if (version == OF_VERSION_1_2) break;
        return 65535;
    case OF_METER_CONFIG_STATS_REPLY:
    case OF_METER_CONFIG_STATS_REQUEST:
        if (version == OF_VERSION_1_0) break;
        if (version == OF_VERSION_1_1) break;
        if (version == OF_VERSION_1_2) break;
        return 10;
    case OF_GROUP_STATS_REPLY:
    case OF_GROUP_STATS_REQUEST:
        if (version == OF_VERSION_1_0) break;
        return 6;
    case OF_BSN_VLAN_COUNTER_STATS_REPLY:
    case OF_BSN_VLAN_COUNTER_STATS_REQUEST:
        if (version == OF_VERSION_1_0) break;
        if (version == OF_VERSION_1_1) break;
        if (version == OF_VERSION_1_2) break;
        return 65535;
    case OF_TABLE_FEATURES_STATS_REPLY:
    case OF_TABLE_FEATURES_STATS_REQUEST:
        if (version == OF_VERSION_1_0) break;
        if (version == OF_VERSION_1_1) break;
        if (version == OF_VERSION_1_2) break;
        return 12;
    case OF_FLOW_STATS_REPLY:
    case OF_FLOW_STATS_REQUEST:
        return 1;
    case OF_GROUP_DESC_STATS_REPLY:
    case OF_GROUP_DESC_STATS_REQUEST:
        if (version == OF_VERSION_1_0) break;
        return 7;
    case OF_METER_STATS_REPLY:
    case OF_METER_STATS_REQUEST:
        if (version == OF_VERSION_1_0) break;
        if (version == OF_VERSION_1_1) break;
        if (version == OF_VERSION_1_2) break;
        return 9;
    case OF_QUEUE_STATS_REPLY:
    case OF_QUEUE_STATS_REQUEST:
        return 5;
    case OF_METER_FEATURES_STATS_REPLY:
    case OF_METER_FEATURES_STATS_REQUEST:
        if (version == OF_VERSION_1_0) break;
        if (version == OF_VERSION_1_1) break;
        if (version == OF_VERSION_1_2) break;
        return 11;
    case OF_EXPERIMENTER_STATS_REPLY:
    case OF_EXPERIMENTER_STATS_REQUEST:
        return 65535;
    case OF_PORT_DESC_STATS_REPLY:
    case OF_PORT_DESC_STATS_REQUEST:
        if (version == OF_VERSION_1_0) break;
        if (version == OF_VERSION_1_1) break;
        if (version == OF_VERSION_1_2) break;
        return 13;
    case OF_AGGREGATE_STATS_REPLY:
    case OF_AGGREGATE_STATS_REQUEST:
        return 2;
    case OF_TABLE_STATS_REPLY:
    case OF_TABLE_STATS_REQUEST:
        return 3;
    case OF_BSN_SWITCH_PIPELINE_STATS_REPLY:
    case OF_BSN_SWITCH_PIPELINE_STATS_REQUEST:
        if (version == OF_VERSION_1_0) break;
        if (version == OF_VERSION_1_1) break;
        if (version == OF_VERSION_1_2) break;
        return 65535;
    case OF_GROUP_FEATURES_STATS_REPLY:
    case OF_GROUP_FEATURES_STATS_REQUEST:
        if (version == OF_VERSION_1_0) break;
        if (version == OF_VERSION_1_1) break;
        return 8;
    case OF_BSN_PORT_COUNTER_STATS_REPLY:
    case OF_BSN_PORT_COUNTER_STATS_REQUEST:
        if (version == OF_VERSION_1_0) break;
        if (version == OF_VERSION_1_1) break;
        if (version == OF_VERSION_1_2) break;
        return 65535;
    case OF_PORT_STATS_REPLY:
    case OF_PORT_STATS_REQUEST:
        return 4;
    case OF_DESC_STATS_REPLY:
    case OF_DESC_STATS_REQUEST:
        return 0;

    default:
        break;
    }
    return -1; /* Not recognized as stats type object for this version */
}

/**
 * Map an object ID to an error type
 * @param id An object ID
 * @return The wire value for the error type
 * @return -1 if not supported for this version
 * @return -1 if id is not a specific error type ID
 *
 * Note that the value is returned as a signed integer.  So -1 is
 * an error code, while 0xffff is the usual "experimenter" code.
 */

static inline int
of_object_to_error_type(of_object_id_t id, of_version_t version)
{
    if (!OF_VERSION_OKAY(version)) {
        return -1;
    }
    switch (id) {
    case OF_HELLO_FAILED_ERROR_MSG:
        if (OF_ERROR_TYPE_HELLO_FAILED_SUPPORTED(version))
            return OF_ERROR_TYPE_HELLO_FAILED_BY_VERSION(version);
        break;
    case OF_BAD_MATCH_ERROR_MSG:
        if (OF_ERROR_TYPE_BAD_MATCH_SUPPORTED(version))
            return OF_ERROR_TYPE_BAD_MATCH_BY_VERSION(version);
        break;
    case OF_BAD_ACTION_ERROR_MSG:
        if (OF_ERROR_TYPE_BAD_ACTION_SUPPORTED(version))
            return OF_ERROR_TYPE_BAD_ACTION_BY_VERSION(version);
        break;
    case OF_GROUP_MOD_FAILED_ERROR_MSG:
        if (OF_ERROR_TYPE_GROUP_MOD_FAILED_SUPPORTED(version))
            return OF_ERROR_TYPE_GROUP_MOD_FAILED_BY_VERSION(version);
        break;
    case OF_PORT_MOD_FAILED_ERROR_MSG:
        if (OF_ERROR_TYPE_PORT_MOD_FAILED_SUPPORTED(version))
            return OF_ERROR_TYPE_PORT_MOD_FAILED_BY_VERSION(version);
        break;
    case OF_FLOW_MOD_FAILED_ERROR_MSG:
        if (OF_ERROR_TYPE_FLOW_MOD_FAILED_SUPPORTED(version))
            return OF_ERROR_TYPE_FLOW_MOD_FAILED_BY_VERSION(version);
        break;
    case OF_SWITCH_CONFIG_FAILED_ERROR_MSG:
        if (OF_ERROR_TYPE_SWITCH_CONFIG_FAILED_SUPPORTED(version))
            return OF_ERROR_TYPE_SWITCH_CONFIG_FAILED_BY_VERSION(version);
        break;
    case OF_QUEUE_OP_FAILED_ERROR_MSG:
        if (OF_ERROR_TYPE_QUEUE_OP_FAILED_SUPPORTED(version))
            return OF_ERROR_TYPE_QUEUE_OP_FAILED_BY_VERSION(version);
        break;
    case OF_TABLE_FEATURES_FAILED_ERROR_MSG:
        if (OF_ERROR_TYPE_TABLE_FEATURES_FAILED_SUPPORTED(version))
            return OF_ERROR_TYPE_TABLE_FEATURES_FAILED_BY_VERSION(version);
        break;
    case OF_BAD_REQUEST_ERROR_MSG:
        if (OF_ERROR_TYPE_BAD_REQUEST_SUPPORTED(version))
            return OF_ERROR_TYPE_BAD_REQUEST_BY_VERSION(version);
        break;
    case OF_TABLE_MOD_FAILED_ERROR_MSG:
        if (OF_ERROR_TYPE_TABLE_MOD_FAILED_SUPPORTED(version))
            return OF_ERROR_TYPE_TABLE_MOD_FAILED_BY_VERSION(version);
        break;
    case OF_EXPERIMENTER_ERROR_MSG:
        if (OF_ERROR_TYPE_EXPERIMENTER_SUPPORTED(version))
            return OF_ERROR_TYPE_EXPERIMENTER_BY_VERSION(version);
        break;
    case OF_METER_MOD_FAILED_ERROR_MSG:
        if (OF_ERROR_TYPE_METER_MOD_FAILED_SUPPORTED(version))
            return OF_ERROR_TYPE_METER_MOD_FAILED_BY_VERSION(version);
        break;
    case OF_BAD_INSTRUCTION_ERROR_MSG:
        if (OF_ERROR_TYPE_BAD_INSTRUCTION_SUPPORTED(version))
            return OF_ERROR_TYPE_BAD_INSTRUCTION_BY_VERSION(version);
        break;
    case OF_ROLE_REQUEST_FAILED_ERROR_MSG:
        if (OF_ERROR_TYPE_ROLE_REQUEST_FAILED_SUPPORTED(version))
            return OF_ERROR_TYPE_ROLE_REQUEST_FAILED_BY_VERSION(version);
        break;
    default:
        break;
    }
    return -1; /* Not recognized as error type object for this version */
}

/**
 * Map an object ID to a flow-mod command value
 * @param id An object ID
 * @return The wire value for the flow-mod command
 * @return -1 if not supported for this version
 * @return -1 if id is not a specific stats type ID
 *
 * Note that the value is returned as a signed integer.  So -1 is
 * an error code, while 0xffff is the usual "experimenter" code.
 */

static inline int
of_object_to_flow_mod_command(of_object_id_t id, of_version_t version)
{
    if (!OF_VERSION_OKAY(version)) {
        return -1;
    }
    switch (id) {
    case OF_FLOW_ADD:
        return 0;
    case OF_FLOW_MODIFY_STRICT:
        return 2;
    case OF_FLOW_MODIFY:
        return 1;
    case OF_FLOW_DELETE_STRICT:
        return 4;
    case OF_FLOW_DELETE:
        return 3;

    default:
        break;
    }
    return -1; /* Not recognized as flow mod type object for this version */
}


/**
 * Map an object ID to a group-mod command value
 * @param id An object ID
 * @return The wire value for the group-mod command
 * @return -1 if not supported for this version
 * @return -1 if id is not a specific stats type ID
 *
 * Note that the value is returned as a signed integer.  So -1 is
 * an error code, while 0xffff is the usual "experimenter" code.
 */

static inline int
of_object_to_group_mod_command(of_object_id_t id, of_version_t version)
{
    if (!OF_VERSION_OKAY(version)) {
        return -1;
    }
    switch (id) {
    case OF_GROUP_ADD:
        if (OF_GROUP_MOD_COMMAND_ADD_SUPPORTED(version))
            return OF_GROUP_MOD_COMMAND_ADD_BY_VERSION(version);
        break;
    case OF_GROUP_MODIFY:
        if (OF_GROUP_MOD_COMMAND_MODIFY_SUPPORTED(version))
            return OF_GROUP_MOD_COMMAND_MODIFY_BY_VERSION(version);
        break;
    case OF_GROUP_DELETE:
        if (OF_GROUP_MOD_COMMAND_DELETE_SUPPORTED(version))
            return OF_GROUP_MOD_COMMAND_DELETE_BY_VERSION(version);
        break;
    default:
        break;
    }
    return -1; /* Not recognized as group mod type object for this version */
}

extern const int *const of_object_fixed_len[OF_VERSION_ARRAY_MAX];
extern const int *const of_object_extra_len[OF_VERSION_ARRAY_MAX];

/**
 * Map a message in a wire buffer object to its OF object id.
 * @param wbuf Pointer to a wire buffer object, populated with an OF message
 * @returns The object ID of the message
 * @returns OF_OBJECT_INVALID if unable to parse the message type
 */

static inline of_object_id_t
of_wire_object_id_get(of_wire_buffer_t *wbuf)
{
    of_message_t msg;

    msg = (of_message_t)WBUF_BUF(wbuf);
    return of_message_to_object_id(msg, WBUF_CURRENT_BYTES(wbuf));
}

/**
 * Use the type/length from the wire buffer and init the object
 * @param obj The object being initialized
 * @param base_object_id If > 0, this indicates the base object
 * @param max_len If > 0, the max length to expect for the obj
 * type for inheritance checking
 * @return OF_ERROR_
 *
 * Used for inheritance type objects such as actions and OXMs
 * The type is checked and if valid, the object is initialized.
 * Then the length is taken from the buffer.
 *
 * Note that the object version must already be properly set.
 */
static inline int
of_object_wire_init(of_object_t *obj, of_object_id_t base_object_id,
                    int max_len)
{
    if (obj->wire_type_get != NULL) {
        of_object_id_t id;
        obj->wire_type_get(obj, &id);
        if (!of_wire_id_valid(id, base_object_id)) {
            return OF_ERROR_PARSE;
        }
        obj->object_id = id;
        /* Call the init function for this object type; do not push to wire */
        of_object_init_map[id]((of_object_t *)(obj), obj->version, -1, 0);
    }
    if (obj->wire_length_get != NULL) {
        int length;
        obj->wire_length_get(obj, &length);
        if (length < 0 || (max_len > 0 && length > max_len)) {
            return OF_ERROR_PARSE;
        }
        obj->length = length;
    } else {
        /* @fixme Does this cover everything else? */
        obj->length = of_object_fixed_len[obj->version][base_object_id];
    }

    return OF_ERROR_NONE;
}


/****************************************************************
 *
 * The following declarations are for type and length calculations.
 * Implementations may be found in of_type_maps.c
 *
 ****************************************************************/
/*
 * Special case length functions for objects with
 */

/**
 * Special length calculation for of_packet_out->data.
 * @param obj An object of type of_packet_out to check for
 * length of data
 * @param bytes[out] Where to store the calculated length
 *
 * Preceding data member is actions.
 */
extern int of_length_packet_out_data_get(
    of_packet_out_t *obj, int *bytes);

/**
 * Special offset calculation for of_packet_out->data.
 * @param obj An object of type of_packet_out to check for
 * length of data
 * @param offset[out] Where to store the calculated length
 *
 * Preceding data member is actions.
 */
extern int of_offset_packet_out_data_get(
    of_packet_out_t *obj, int *offset);

/**
 * Special length calculation for of_flow_delete_strict->instructions.
 * @param obj An object of type of_flow_delete_strict to check for
 * length of instructions
 * @param bytes[out] Where to store the calculated length
 *
 * Preceding data member is match.
 */
extern int of_length_flow_delete_strict_instructions_get(
    of_flow_delete_strict_t *obj, int *bytes);

/**
 * Special offset calculation for of_flow_delete_strict->instructions.
 * @param obj An object of type of_flow_delete_strict to check for
 * length of instructions
 * @param offset[out] Where to store the calculated length
 *
 * Preceding data member is match.
 */
extern int of_offset_flow_delete_strict_instructions_get(
    of_flow_delete_strict_t *obj, int *offset);

/**
 * Special length calculation for of_flow_stats_entry->instructions.
 * @param obj An object of type of_flow_stats_entry to check for
 * length of instructions
 * @param bytes[out] Where to store the calculated length
 *
 * Preceding data member is match.
 */
extern int of_length_flow_stats_entry_instructions_get(
    of_flow_stats_entry_t *obj, int *bytes);

/**
 * Special offset calculation for of_flow_stats_entry->instructions.
 * @param obj An object of type of_flow_stats_entry to check for
 * length of instructions
 * @param offset[out] Where to store the calculated length
 *
 * Preceding data member is match.
 */
extern int of_offset_flow_stats_entry_instructions_get(
    of_flow_stats_entry_t *obj, int *offset);

/**
 * Special length calculation for of_packet_in->data.
 * @param obj An object of type of_packet_in to check for
 * length of data
 * @param bytes[out] Where to store the calculated length
 *
 * Preceding data member is pad.
 */
extern int of_length_packet_in_data_get(
    of_packet_in_t *obj, int *bytes);

/**
 * Special offset calculation for of_packet_in->data.
 * @param obj An object of type of_packet_in to check for
 * length of data
 * @param offset[out] Where to store the calculated length
 *
 * Preceding data member is pad.
 */
extern int of_offset_packet_in_data_get(
    of_packet_in_t *obj, int *offset);

/**
 * Special length calculation for of_flow_modify_strict->instructions.
 * @param obj An object of type of_flow_modify_strict to check for
 * length of instructions
 * @param bytes[out] Where to store the calculated length
 *
 * Preceding data member is match.
 */
extern int of_length_flow_modify_strict_instructions_get(
    of_flow_modify_strict_t *obj, int *bytes);

/**
 * Special offset calculation for of_flow_modify_strict->instructions.
 * @param obj An object of type of_flow_modify_strict to check for
 * length of instructions
 * @param offset[out] Where to store the calculated length
 *
 * Preceding data member is match.
 */
extern int of_offset_flow_modify_strict_instructions_get(
    of_flow_modify_strict_t *obj, int *offset);

/**
 * Special length calculation for of_flow_modify->instructions.
 * @param obj An object of type of_flow_modify to check for
 * length of instructions
 * @param bytes[out] Where to store the calculated length
 *
 * Preceding data member is match.
 */
extern int of_length_flow_modify_instructions_get(
    of_flow_modify_t *obj, int *bytes);

/**
 * Special offset calculation for of_flow_modify->instructions.
 * @param obj An object of type of_flow_modify to check for
 * length of instructions
 * @param offset[out] Where to store the calculated length
 *
 * Preceding data member is match.
 */
extern int of_offset_flow_modify_instructions_get(
    of_flow_modify_t *obj, int *offset);

/**
 * Special length calculation for of_flow_delete->instructions.
 * @param obj An object of type of_flow_delete to check for
 * length of instructions
 * @param bytes[out] Where to store the calculated length
 *
 * Preceding data member is match.
 */
extern int of_length_flow_delete_instructions_get(
    of_flow_delete_t *obj, int *bytes);

/**
 * Special offset calculation for of_flow_delete->instructions.
 * @param obj An object of type of_flow_delete to check for
 * length of instructions
 * @param offset[out] Where to store the calculated length
 *
 * Preceding data member is match.
 */
extern int of_offset_flow_delete_instructions_get(
    of_flow_delete_t *obj, int *offset);

/**
 * Special length calculation for of_flow_mod->instructions.
 * @param obj An object of type of_flow_mod to check for
 * length of instructions
 * @param bytes[out] Where to store the calculated length
 *
 * Preceding data member is match.
 */
extern int of_length_flow_mod_instructions_get(
    of_flow_mod_t *obj, int *bytes);

/**
 * Special offset calculation for of_flow_mod->instructions.
 * @param obj An object of type of_flow_mod to check for
 * length of instructions
 * @param offset[out] Where to store the calculated length
 *
 * Preceding data member is match.
 */
extern int of_offset_flow_mod_instructions_get(
    of_flow_mod_t *obj, int *offset);

/**
 * Special length calculation for of_flow_add->instructions.
 * @param obj An object of type of_flow_add to check for
 * length of instructions
 * @param bytes[out] Where to store the calculated length
 *
 * Preceding data member is match.
 */
extern int of_length_flow_add_instructions_get(
    of_flow_add_t *obj, int *bytes);

/**
 * Special offset calculation for of_flow_add->instructions.
 * @param obj An object of type of_flow_add to check for
 * length of instructions
 * @param offset[out] Where to store the calculated length
 *
 * Preceding data member is match.
 */
extern int of_offset_flow_add_instructions_get(
    of_flow_add_t *obj, int *offset);

/****************************************************************
 * Wire type/length functions.
 ****************************************************************/

extern void of_object_message_wire_length_get(of_object_t *obj, int *bytes);
extern void of_object_message_wire_length_set(of_object_t *obj, int bytes);

extern void of_oxm_wire_length_get(of_object_t *obj, int *bytes);
extern void of_oxm_wire_object_id_get(of_object_t *obj, of_object_id_t *id);

extern void of_tlv16_wire_length_get(of_object_t *obj, int *bytes);
extern void of_tlv16_wire_length_set(of_object_t *obj, int bytes);

/* Wire length is uint16 at front of structure */
extern void of_u16_len_wire_length_get(of_object_t *obj, int *bytes);
extern void of_u16_len_wire_length_set(of_object_t *obj, int bytes);

extern void of_action_wire_object_id_get(of_object_t *obj, of_object_id_t *id);
extern void of_action_id_wire_object_id_get(of_object_t *obj, of_object_id_t *id);
extern void of_instruction_wire_object_id_get(of_object_t *obj,
    of_object_id_t *id);
extern void of_queue_prop_wire_object_id_get(of_object_t *obj,
    of_object_id_t *id);
extern void of_table_feature_prop_wire_object_id_get(of_object_t *obj,
    of_object_id_t *id);
extern void of_meter_band_wire_object_id_get(of_object_t *obj,
    of_object_id_t *id);
extern void of_hello_elem_wire_object_id_get(of_object_t *obj,
    of_object_id_t *id);

#define OF_OXM_LENGTH_GET(hdr) (((hdr) & 0xff) + 4)
#define OF_OXM_LENGTH_SET(hdr, val)                         \
    (hdr) = ((hdr) & 0xffffff00) + (((val) - 4) & 0xff)

extern void of_packet_queue_wire_length_get(of_object_t *obj, int *bytes);
extern void of_packet_queue_wire_length_set(of_object_t *obj, int bytes);

extern void of_list_meter_band_stats_wire_length_get(of_object_t *obj,
                                                    int *bytes);
extern void of_meter_stats_wire_length_get(of_object_t *obj, int *bytes);
extern void of_meter_stats_wire_length_set(of_object_t *obj, int bytes);
extern int of_extension_object_wire_push(of_object_t *obj);


/*
 * Match serialize/deserialize declarations
 * Wire match conversion function declarations
 */
extern int of_match_serialize(of_version_t version, of_match_t *match,
                              of_octets_t *octets);
extern int of_match_deserialize(of_version_t version, of_match_t *match,
                                of_octets_t *octets);
extern int of_match_v1_to_match(of_match_v1_t *src, of_match_t *dst);
extern int of_match_v2_to_match(of_match_v2_t *src, of_match_t *dst);
extern int of_match_v3_to_match(of_match_v3_t *src, of_match_t *dst);
extern int of_match_to_wire_match_v1(of_match_t *src, of_match_v1_t *dst);
extern int of_match_to_wire_match_v2(of_match_t *src, of_match_v2_t *dst);
extern int of_match_to_wire_match_v3(of_match_t *src, of_match_v3_t *dst);

/**
 * Macro to check consistency of length for top level objects
 *
 * If the object has no parent then its length should match the
 * underlying wire buffer's current bytes.
 */
#define OF_LENGTH_CHECK_ASSERT(obj) \
    ASSERT(((obj)->parent != NULL) || \
     ((obj)->wire_object.wbuf == NULL) || \
     (WBUF_CURRENT_BYTES((obj)->wire_object.wbuf) == (obj)->length))

#define OF_DEBUG_DUMP
#if defined(OF_DEBUG_DUMP)
extern void dump_match(of_match_t *match);
#endif /* OF_DEBUG_DUMP */

#endif /* Top header file */
