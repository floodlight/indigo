/* Copyright (c) 2008 The Board of Trustees of The Leland Stanford Junior University */
/* Copyright (c) 2011, 2012 Open Networking Foundation */
/* Copyright (c) 2012, 2013 Big Switch Networks, Inc. */
/* See the file LICENSE.loci which should have been included in the source distribution */

/****************************************************************
 * File: loci_idents.h
 *
 * DO NOT EDIT
 *
 * This file is automatically generated
 *
 ****************************************************************/


#if !defined(_LOCI_IDENTS_H_)
#define _LOCI_IDENTS_H_


/**
 * For each identifier from an OpenFlow header file, a Loxi version
 * of the identifier is generated.  For example, ofp_port_flood becomes
 * OF_PORT_DEST_FLOOD.  Loxi provides the following macros related to
 * OpenFlow identifiers (using OF_IDENT_ as an example below):
 *     OF_IDENT_BY_VERSION(version) Get the value for the specific version
 *     OF_IDENT_SUPPORTED(version) Boolean: Is OF_IDENT defined for version
 *     OF_IDENT The common value across all versions if defined
 *     OF_IDENT_GENERIC A unique value across all OF identifiers
 *
 * For identifiers marked as flags, the following are also defined
 *     OF_IDENT_SET(flags, version)
 *     OF_IDENT_CLEAR(flags, version)
 *     OF_IDENT_TEST(flags, version)
 *
 * Notes:
 *
 *     OF_IDENT_BY_VERSION(version) returns an undefined value
 * if the passed version does not define OF_IDENT.  It does not generate an
 * error, nor record anything to the log file.  If the value is the same
 * across all defined versions, the version is ignored.
 *
 *     OF_IDENT is only defined if the value is the same across all
 * target LOXI versions FOR WHICH IT IS DEFINED.  No error checking is
 * done.  This allows code to be written without requiring the version
 * to be known or referenced when it doesn't matter.  It does mean
 * that when porting to a new version of OpenFlow, compile errors may
 * occur.  However, this is an indication that the existing code must
 * be updated to account for a change in the semantics with the newly
 * supported OpenFlow version.
 *
 * @fixme Currently we do not handle multi-bit flags or field values; for
 * example, OF_TABLE_CONFIG_TABLE_MISS_CONTROLLER is the meaning for
 * a zero value in the bits indicated by OF_TABLE_CONFIG_TABLE_MISS_MASK.
 *
 * @fixme Need to decide (or make a code gen option) on the requirement
 * for defining OF_IDENT:  Is it that all target versions define it and
 * the agree?  Or only that the versions which define it agree?
 */

/**
 * @brief True for the special case of all versions supported
 */
#define OF_IDENT_IN_ALL_VERSIONS 1 /* Indicates identifier in all versions */

/**
 * @brief General macro to map version to value where values given as params
 *
 * If unknown version is passed, use the latest version's value
 */
#define OF_VALUE_BY_VERSION(version, value_OF_1_0, value_OF_1_1, value_OF_1_2, value_OF_1_3) \
    (((version) == OF_VERSION_1_0) ? (value_OF_1_0) : \
     ((version) == OF_VERSION_1_1) ? (value_OF_1_1) : \
     ((version) == OF_VERSION_1_2) ? (value_OF_1_2) : \
     ((version) == OF_VERSION_1_3) ? (value_OF_1_3) : (value_OF_1_3))

/**
 * @brief Generic set a flag
 */
#define OF_FLAG_SET(flags, mask) (flags) = (flags) | (mask)

/**
 * @brief Generic test if a flag is set
 */
#define OF_FLAG_CLEAR(flags, mask) (flags) = (flags) & ~(mask)

/**
 * @brief Generic test if a flag is set
 */
#define OF_FLAG_TEST(flags, mask) ((flags) & (mask) ? 1 : 0)

/**
 * @brief Set a flag where the value is an enum indication of bit shift
 */
#define OF_FLAG_ENUM_SET(flags, e_val) OF_FLAG_SET(flags, 1 << (e_val))

/**
 * @brief Clear a flag where the value is an enum indication of bit shift
 */
#define OF_FLAG_ENUM_CLEAR(flags, e_val) OF_FLAG_CLEAR(flags, 1 << (e_val))

/**
 * @brief Test a flag where the value is an enum indication of bit shift
 */
#define OF_FLAG_ENUM_TEST(flags, e_val) OF_FLAG_TEST(flags, 1 << (e_val))

/****************************************************************
 * Identifiers from macro_definitions
 *****************************************************************/

/*
 * Defines for OF_BUFFER_ID_NO_BUFFER
 * Original name OFP_NO_BUFFER
 */
#define OF_BUFFER_ID_NO_BUFFER_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_BUFFER_ID_NO_BUFFER (0xffffffff)
#define OF_BUFFER_ID_NO_BUFFER_BY_VERSION(version) (0xffffffff)
#define OF_BUFFER_ID_NO_BUFFER_GENERIC 1

/*
 * Defines for OF_DEFAULT_MISS_SEND_LEN
 * Original name OFP_DEFAULT_MISS_SEND_LEN
 */
#define OF_DEFAULT_MISS_SEND_LEN_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_DEFAULT_MISS_SEND_LEN (0x80)
#define OF_DEFAULT_MISS_SEND_LEN_BY_VERSION(version) (0x80)
#define OF_DEFAULT_MISS_SEND_LEN_GENERIC 2

/*
 * Defines for OF_DEFAULT_PRIORITY
 * Original name OFP_DEFAULT_PRIORITY
 */
#define OF_DEFAULT_PRIORITY_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_DEFAULT_PRIORITY (0x8000)
#define OF_DEFAULT_PRIORITY_BY_VERSION(version) (0x8000)
#define OF_DEFAULT_PRIORITY_GENERIC 3

/*
 * Defines for OF_DESC_STR_LEN
 * Original name DESC_STR_LEN
 */
#define OF_DESC_STR_LEN_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_DESC_STR_LEN (0x100)
#define OF_DESC_STR_LEN_BY_VERSION(version) (0x100)
#define OF_DESC_STR_LEN_GENERIC 4

/*
 * Defines for OF_DL_TYPE_ETH2_CUTOFF
 * Original name OFP_DL_TYPE_ETH2_CUTOFF
 */
#define OF_DL_TYPE_ETH2_CUTOFF_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1))
#define OF_DL_TYPE_ETH2_CUTOFF (0x600)
#define OF_DL_TYPE_ETH2_CUTOFF_BY_VERSION(version) (0x600)
#define OF_DL_TYPE_ETH2_CUTOFF_GENERIC 5

/*
 * Defines for OF_DL_TYPE_NOT_ETH_TYPE
 * Original name OFP_DL_TYPE_NOT_ETH_TYPE
 */
#define OF_DL_TYPE_NOT_ETH_TYPE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1))
#define OF_DL_TYPE_NOT_ETH_TYPE (0x5ff)
#define OF_DL_TYPE_NOT_ETH_TYPE_BY_VERSION(version) (0x5ff)
#define OF_DL_TYPE_NOT_ETH_TYPE_GENERIC 6

/*
 * Defines for OF_ETH_ALEN
 * Original name OFP_ETH_ALEN
 */
#define OF_ETH_ALEN_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_ETH_ALEN (0x6)
#define OF_ETH_ALEN_BY_VERSION(version) (0x6)
#define OF_ETH_ALEN_GENERIC 7

/*
 * Defines for OF_FLOW_PERMANENT
 * Original name OFP_FLOW_PERMANENT
 */
#define OF_FLOW_PERMANENT_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_FLOW_PERMANENT (0x0)
#define OF_FLOW_PERMANENT_BY_VERSION(version) (0x0)
#define OF_FLOW_PERMANENT_GENERIC 8

/*
 * Defines for OF_FLOW_WC_V1_ICMP_CODE
 * Original name OFPFW_ICMP_CODE
 */
#define OF_FLOW_WC_V1_ICMP_CODE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1))
#define OF_FLOW_WC_V1_ICMP_CODE (0x80)
#define OF_FLOW_WC_V1_ICMP_CODE_BY_VERSION(version) (0x80)
#define OF_FLOW_WC_V1_ICMP_CODE_GENERIC 9

/*
 * Defines for OF_FLOW_WC_V1_ICMP_TYPE
 * Original name OFPFW_ICMP_TYPE
 */
#define OF_FLOW_WC_V1_ICMP_TYPE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1))
#define OF_FLOW_WC_V1_ICMP_TYPE (0x40)
#define OF_FLOW_WC_V1_ICMP_TYPE_BY_VERSION(version) (0x40)
#define OF_FLOW_WC_V1_ICMP_TYPE_GENERIC 10

/*
 * Defines for OF_MATCH_TYPE_STANDARD_LENGTH
 * Original name OFPMT_STANDARD_LENGTH
 */
#define OF_MATCH_TYPE_STANDARD_LENGTH_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1))
#define OF_MATCH_TYPE_STANDARD_LENGTH (0x58)
#define OF_MATCH_TYPE_STANDARD_LENGTH_BY_VERSION(version) (0x58)
#define OF_MATCH_TYPE_STANDARD_LENGTH_GENERIC 11

/*
 * Defines for OF_MAX_PORT_NAME_LEN
 * Original name OFP_MAX_PORT_NAME_LEN
 */
#define OF_MAX_PORT_NAME_LEN_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_MAX_PORT_NAME_LEN (0x10)
#define OF_MAX_PORT_NAME_LEN_BY_VERSION(version) (0x10)
#define OF_MAX_PORT_NAME_LEN_GENERIC 12

/*
 * Defines for OF_MAX_TABLE_NAME_LEN
 * Original name OFP_MAX_TABLE_NAME_LEN
 */
#define OF_MAX_TABLE_NAME_LEN_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_MAX_TABLE_NAME_LEN (0x20)
#define OF_MAX_TABLE_NAME_LEN_BY_VERSION(version) (0x20)
#define OF_MAX_TABLE_NAME_LEN_GENERIC 13

/*
 * Defines for OF_QUEUE_ALL
 * Original name OFPQ_ALL
 */
#define OF_QUEUE_ALL_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_QUEUE_ALL (0xffffffff)
#define OF_QUEUE_ALL_BY_VERSION(version) (0xffffffff)
#define OF_QUEUE_ALL_GENERIC 14

/*
 * Defines for OF_QUEUE_MAX_RATE_UNCFG
 * Original name OFPQ_MAX_RATE_UNCFG
 */
#define OF_QUEUE_MAX_RATE_UNCFG_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_QUEUE_MAX_RATE_UNCFG (0xffff)
#define OF_QUEUE_MAX_RATE_UNCFG_BY_VERSION(version) (0xffff)
#define OF_QUEUE_MAX_RATE_UNCFG_GENERIC 15

/*
 * Defines for OF_QUEUE_MIN_RATE_UNCFG
 * Original name OFPQ_MIN_RATE_UNCFG
 */
#define OF_QUEUE_MIN_RATE_UNCFG_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_QUEUE_MIN_RATE_UNCFG (0xffff)
#define OF_QUEUE_MIN_RATE_UNCFG_BY_VERSION(version) (0xffff)
#define OF_QUEUE_MIN_RATE_UNCFG_GENERIC 16

/*
 * Defines for OF_SERIAL_NUM_LEN
 * Original name SERIAL_NUM_LEN
 */
#define OF_SERIAL_NUM_LEN_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_SERIAL_NUM_LEN (0x20)
#define OF_SERIAL_NUM_LEN_BY_VERSION(version) (0x20)
#define OF_SERIAL_NUM_LEN_GENERIC 17

/*
 * Defines for OF_SSL_PORT
 * Original name OFP_SSL_PORT
 */
#define OF_SSL_PORT_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_SSL_PORT (0x19fd)
#define OF_SSL_PORT_BY_VERSION(version) (0x19fd)
#define OF_SSL_PORT_GENERIC 18

/*
 * Defines for OF_TCP_PORT
 * Original name OFP_TCP_PORT
 */
#define OF_TCP_PORT_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_TCP_PORT (0x19fd)
#define OF_TCP_PORT_BY_VERSION(version) (0x19fd)
#define OF_TCP_PORT_GENERIC 19

/*
 * Defines for OF_VLAN_UNTAGGED
 * Original name OFP_VLAN_NONE
 */
#define OF_VLAN_UNTAGGED_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_VLAN_UNTAGGED_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0xffff, 0x0, 0x0, 0x0)
#define OF_VLAN_UNTAGGED_GENERIC 20

/****************************************************************
 * Identifiers from of_bsn_pdu_slot_num_t
 *****************************************************************/

/*
 * Defines for BSN_PDU_SLOT_NUM_ANY
 * Original name BSN_PDU_SLOT_NUM_ANY
 */
#define BSN_PDU_SLOT_NUM_ANY_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define BSN_PDU_SLOT_NUM_ANY (0xff)
#define BSN_PDU_SLOT_NUM_ANY_BY_VERSION(version) (0xff)
#define BSN_PDU_SLOT_NUM_ANY_GENERIC 21

/****************************************************************
 * Identifiers from ofp_action_type
 *****************************************************************/

/*
 * Defines for OF_ACTION_TYPE_COPY_TTL_IN
 * Original name OFPAT_COPY_TTL_IN
 */
#define OF_ACTION_TYPE_COPY_TTL_IN_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_ACTION_TYPE_COPY_TTL_IN (0xc)
#define OF_ACTION_TYPE_COPY_TTL_IN_BY_VERSION(version) (0xc)
#define OF_ACTION_TYPE_COPY_TTL_IN_GENERIC 22

/*
 * Defines for OF_ACTION_TYPE_COPY_TTL_OUT
 * Original name OFPAT_COPY_TTL_OUT
 */
#define OF_ACTION_TYPE_COPY_TTL_OUT_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_ACTION_TYPE_COPY_TTL_OUT (0xb)
#define OF_ACTION_TYPE_COPY_TTL_OUT_BY_VERSION(version) (0xb)
#define OF_ACTION_TYPE_COPY_TTL_OUT_GENERIC 23

/*
 * Defines for OF_ACTION_TYPE_DEC_MPLS_TTL
 * Original name OFPAT_DEC_MPLS_TTL
 */
#define OF_ACTION_TYPE_DEC_MPLS_TTL_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_ACTION_TYPE_DEC_MPLS_TTL (0x10)
#define OF_ACTION_TYPE_DEC_MPLS_TTL_BY_VERSION(version) (0x10)
#define OF_ACTION_TYPE_DEC_MPLS_TTL_GENERIC 24

/*
 * Defines for OF_ACTION_TYPE_DEC_NW_TTL
 * Original name OFPAT_DEC_NW_TTL
 */
#define OF_ACTION_TYPE_DEC_NW_TTL_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_ACTION_TYPE_DEC_NW_TTL (0x18)
#define OF_ACTION_TYPE_DEC_NW_TTL_BY_VERSION(version) (0x18)
#define OF_ACTION_TYPE_DEC_NW_TTL_GENERIC 25

/*
 * Defines for OF_ACTION_TYPE_ENQUEUE
 * Original name OFPAT_ENQUEUE
 */
#define OF_ACTION_TYPE_ENQUEUE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_ACTION_TYPE_ENQUEUE (0xb)
#define OF_ACTION_TYPE_ENQUEUE_BY_VERSION(version) (0xb)
#define OF_ACTION_TYPE_ENQUEUE_GENERIC 26

/*
 * Defines for OF_ACTION_TYPE_EXPERIMENTER
 * Original name OFPAT_EXPERIMENTER
 */
#define OF_ACTION_TYPE_EXPERIMENTER_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_ACTION_TYPE_EXPERIMENTER (0xffff)
#define OF_ACTION_TYPE_EXPERIMENTER_BY_VERSION(version) (0xffff)
#define OF_ACTION_TYPE_EXPERIMENTER_GENERIC 27

/*
 * Defines for OF_ACTION_TYPE_GROUP
 * Original name OFPAT_GROUP
 */
#define OF_ACTION_TYPE_GROUP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_ACTION_TYPE_GROUP (0x16)
#define OF_ACTION_TYPE_GROUP_BY_VERSION(version) (0x16)
#define OF_ACTION_TYPE_GROUP_GENERIC 28

/*
 * Defines for OF_ACTION_TYPE_OUTPUT
 * Original name OFPAT_OUTPUT
 */
#define OF_ACTION_TYPE_OUTPUT_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_ACTION_TYPE_OUTPUT (0x0)
#define OF_ACTION_TYPE_OUTPUT_BY_VERSION(version) (0x0)
#define OF_ACTION_TYPE_OUTPUT_GENERIC 29

/*
 * Defines for OF_ACTION_TYPE_POP_MPLS
 * Original name OFPAT_POP_MPLS
 */
#define OF_ACTION_TYPE_POP_MPLS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_ACTION_TYPE_POP_MPLS (0x14)
#define OF_ACTION_TYPE_POP_MPLS_BY_VERSION(version) (0x14)
#define OF_ACTION_TYPE_POP_MPLS_GENERIC 30

/*
 * Defines for OF_ACTION_TYPE_POP_PBB
 * Original name OFPAT_POP_PBB
 */
#define OF_ACTION_TYPE_POP_PBB_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_ACTION_TYPE_POP_PBB (0x1b)
#define OF_ACTION_TYPE_POP_PBB_BY_VERSION(version) (0x1b)
#define OF_ACTION_TYPE_POP_PBB_GENERIC 31

/*
 * Defines for OF_ACTION_TYPE_POP_VLAN
 * Original name OFPAT_POP_VLAN
 */
#define OF_ACTION_TYPE_POP_VLAN_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_ACTION_TYPE_POP_VLAN (0x12)
#define OF_ACTION_TYPE_POP_VLAN_BY_VERSION(version) (0x12)
#define OF_ACTION_TYPE_POP_VLAN_GENERIC 32

/*
 * Defines for OF_ACTION_TYPE_PUSH_MPLS
 * Original name OFPAT_PUSH_MPLS
 */
#define OF_ACTION_TYPE_PUSH_MPLS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_ACTION_TYPE_PUSH_MPLS (0x13)
#define OF_ACTION_TYPE_PUSH_MPLS_BY_VERSION(version) (0x13)
#define OF_ACTION_TYPE_PUSH_MPLS_GENERIC 33

/*
 * Defines for OF_ACTION_TYPE_PUSH_PBB
 * Original name OFPAT_PUSH_PBB
 */
#define OF_ACTION_TYPE_PUSH_PBB_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_ACTION_TYPE_PUSH_PBB (0x1a)
#define OF_ACTION_TYPE_PUSH_PBB_BY_VERSION(version) (0x1a)
#define OF_ACTION_TYPE_PUSH_PBB_GENERIC 34

/*
 * Defines for OF_ACTION_TYPE_PUSH_VLAN
 * Original name OFPAT_PUSH_VLAN
 */
#define OF_ACTION_TYPE_PUSH_VLAN_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_ACTION_TYPE_PUSH_VLAN (0x11)
#define OF_ACTION_TYPE_PUSH_VLAN_BY_VERSION(version) (0x11)
#define OF_ACTION_TYPE_PUSH_VLAN_GENERIC 35

/*
 * Defines for OF_ACTION_TYPE_SET_DL_DST
 * Original name OFPAT_SET_DL_DST
 */
#define OF_ACTION_TYPE_SET_DL_DST_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1))
#define OF_ACTION_TYPE_SET_DL_DST_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x5, 0x4, 0x0, 0x0)
#define OF_ACTION_TYPE_SET_DL_DST_GENERIC 36

/*
 * Defines for OF_ACTION_TYPE_SET_DL_SRC
 * Original name OFPAT_SET_DL_SRC
 */
#define OF_ACTION_TYPE_SET_DL_SRC_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1))
#define OF_ACTION_TYPE_SET_DL_SRC_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x4, 0x3, 0x0, 0x0)
#define OF_ACTION_TYPE_SET_DL_SRC_GENERIC 37

/*
 * Defines for OF_ACTION_TYPE_SET_FIELD
 * Original name OFPAT_SET_FIELD
 */
#define OF_ACTION_TYPE_SET_FIELD_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_ACTION_TYPE_SET_FIELD (0x19)
#define OF_ACTION_TYPE_SET_FIELD_BY_VERSION(version) (0x19)
#define OF_ACTION_TYPE_SET_FIELD_GENERIC 38

/*
 * Defines for OF_ACTION_TYPE_SET_MPLS_LABEL
 * Original name OFPAT_SET_MPLS_LABEL
 */
#define OF_ACTION_TYPE_SET_MPLS_LABEL_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1))
#define OF_ACTION_TYPE_SET_MPLS_LABEL (0xd)
#define OF_ACTION_TYPE_SET_MPLS_LABEL_BY_VERSION(version) (0xd)
#define OF_ACTION_TYPE_SET_MPLS_LABEL_GENERIC 39

/*
 * Defines for OF_ACTION_TYPE_SET_MPLS_TC
 * Original name OFPAT_SET_MPLS_TC
 */
#define OF_ACTION_TYPE_SET_MPLS_TC_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1))
#define OF_ACTION_TYPE_SET_MPLS_TC (0xe)
#define OF_ACTION_TYPE_SET_MPLS_TC_BY_VERSION(version) (0xe)
#define OF_ACTION_TYPE_SET_MPLS_TC_GENERIC 40

/*
 * Defines for OF_ACTION_TYPE_SET_MPLS_TTL
 * Original name OFPAT_SET_MPLS_TTL
 */
#define OF_ACTION_TYPE_SET_MPLS_TTL_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_ACTION_TYPE_SET_MPLS_TTL (0xf)
#define OF_ACTION_TYPE_SET_MPLS_TTL_BY_VERSION(version) (0xf)
#define OF_ACTION_TYPE_SET_MPLS_TTL_GENERIC 41

/*
 * Defines for OF_ACTION_TYPE_SET_NW_DST
 * Original name OFPAT_SET_NW_DST
 */
#define OF_ACTION_TYPE_SET_NW_DST_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1))
#define OF_ACTION_TYPE_SET_NW_DST_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x7, 0x6, 0x0, 0x0)
#define OF_ACTION_TYPE_SET_NW_DST_GENERIC 42

/*
 * Defines for OF_ACTION_TYPE_SET_NW_ECN
 * Original name OFPAT_SET_NW_ECN
 */
#define OF_ACTION_TYPE_SET_NW_ECN_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1))
#define OF_ACTION_TYPE_SET_NW_ECN (0x8)
#define OF_ACTION_TYPE_SET_NW_ECN_BY_VERSION(version) (0x8)
#define OF_ACTION_TYPE_SET_NW_ECN_GENERIC 43

/*
 * Defines for OF_ACTION_TYPE_SET_NW_SRC
 * Original name OFPAT_SET_NW_SRC
 */
#define OF_ACTION_TYPE_SET_NW_SRC_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1))
#define OF_ACTION_TYPE_SET_NW_SRC_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x6, 0x5, 0x0, 0x0)
#define OF_ACTION_TYPE_SET_NW_SRC_GENERIC 44

/*
 * Defines for OF_ACTION_TYPE_SET_NW_TOS
 * Original name OFPAT_SET_NW_TOS
 */
#define OF_ACTION_TYPE_SET_NW_TOS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1))
#define OF_ACTION_TYPE_SET_NW_TOS_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x8, 0x7, 0x0, 0x0)
#define OF_ACTION_TYPE_SET_NW_TOS_GENERIC 45

/*
 * Defines for OF_ACTION_TYPE_SET_NW_TTL
 * Original name OFPAT_SET_NW_TTL
 */
#define OF_ACTION_TYPE_SET_NW_TTL_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_ACTION_TYPE_SET_NW_TTL (0x17)
#define OF_ACTION_TYPE_SET_NW_TTL_BY_VERSION(version) (0x17)
#define OF_ACTION_TYPE_SET_NW_TTL_GENERIC 46

/*
 * Defines for OF_ACTION_TYPE_SET_QUEUE
 * Original name OFPAT_SET_QUEUE
 */
#define OF_ACTION_TYPE_SET_QUEUE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_ACTION_TYPE_SET_QUEUE (0x15)
#define OF_ACTION_TYPE_SET_QUEUE_BY_VERSION(version) (0x15)
#define OF_ACTION_TYPE_SET_QUEUE_GENERIC 47

/*
 * Defines for OF_ACTION_TYPE_SET_TP_DST
 * Original name OFPAT_SET_TP_DST
 */
#define OF_ACTION_TYPE_SET_TP_DST_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1))
#define OF_ACTION_TYPE_SET_TP_DST (0xa)
#define OF_ACTION_TYPE_SET_TP_DST_BY_VERSION(version) (0xa)
#define OF_ACTION_TYPE_SET_TP_DST_GENERIC 48

/*
 * Defines for OF_ACTION_TYPE_SET_TP_SRC
 * Original name OFPAT_SET_TP_SRC
 */
#define OF_ACTION_TYPE_SET_TP_SRC_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1))
#define OF_ACTION_TYPE_SET_TP_SRC (0x9)
#define OF_ACTION_TYPE_SET_TP_SRC_BY_VERSION(version) (0x9)
#define OF_ACTION_TYPE_SET_TP_SRC_GENERIC 49

/*
 * Defines for OF_ACTION_TYPE_SET_VLAN_PCP
 * Original name OFPAT_SET_VLAN_PCP
 */
#define OF_ACTION_TYPE_SET_VLAN_PCP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1))
#define OF_ACTION_TYPE_SET_VLAN_PCP (0x2)
#define OF_ACTION_TYPE_SET_VLAN_PCP_BY_VERSION(version) (0x2)
#define OF_ACTION_TYPE_SET_VLAN_PCP_GENERIC 50

/*
 * Defines for OF_ACTION_TYPE_SET_VLAN_VID
 * Original name OFPAT_SET_VLAN_VID
 */
#define OF_ACTION_TYPE_SET_VLAN_VID_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1))
#define OF_ACTION_TYPE_SET_VLAN_VID (0x1)
#define OF_ACTION_TYPE_SET_VLAN_VID_BY_VERSION(version) (0x1)
#define OF_ACTION_TYPE_SET_VLAN_VID_GENERIC 51

/*
 * Defines for OF_ACTION_TYPE_STRIP_VLAN
 * Original name OFPAT_STRIP_VLAN
 */
#define OF_ACTION_TYPE_STRIP_VLAN_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_ACTION_TYPE_STRIP_VLAN (0x3)
#define OF_ACTION_TYPE_STRIP_VLAN_BY_VERSION(version) (0x3)
#define OF_ACTION_TYPE_STRIP_VLAN_GENERIC 52

/****************************************************************
 * Identifiers from ofp_bad_action_code
 *****************************************************************/

/*
 * Defines for OF_ACTION_FAILED_BAD_ARGUMENT
 * Original name OFPBAC_BAD_ARGUMENT
 */
#define OF_ACTION_FAILED_BAD_ARGUMENT_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_ACTION_FAILED_BAD_ARGUMENT (0x5)
#define OF_ACTION_FAILED_BAD_ARGUMENT_BY_VERSION(version) (0x5)
#define OF_ACTION_FAILED_BAD_ARGUMENT_GENERIC 53

/*
 * Defines for OF_ACTION_FAILED_BAD_EXPERIMENTER
 * Original name OFPBAC_BAD_EXPERIMENTER
 */
#define OF_ACTION_FAILED_BAD_EXPERIMENTER_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_ACTION_FAILED_BAD_EXPERIMENTER (0x2)
#define OF_ACTION_FAILED_BAD_EXPERIMENTER_BY_VERSION(version) (0x2)
#define OF_ACTION_FAILED_BAD_EXPERIMENTER_GENERIC 54

/*
 * Defines for OF_ACTION_FAILED_BAD_EXPERIMENTER_TYPE
 * Original name OFPBAC_BAD_EXPERIMENTER_TYPE
 */
#define OF_ACTION_FAILED_BAD_EXPERIMENTER_TYPE_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_ACTION_FAILED_BAD_EXPERIMENTER_TYPE (0x3)
#define OF_ACTION_FAILED_BAD_EXPERIMENTER_TYPE_BY_VERSION(version) (0x3)
#define OF_ACTION_FAILED_BAD_EXPERIMENTER_TYPE_GENERIC 55

/*
 * Defines for OF_ACTION_FAILED_BAD_LEN
 * Original name OFPBAC_BAD_LEN
 */
#define OF_ACTION_FAILED_BAD_LEN_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_ACTION_FAILED_BAD_LEN (0x1)
#define OF_ACTION_FAILED_BAD_LEN_BY_VERSION(version) (0x1)
#define OF_ACTION_FAILED_BAD_LEN_GENERIC 56

/*
 * Defines for OF_ACTION_FAILED_BAD_OUT_GROUP
 * Original name OFPBAC_BAD_OUT_GROUP
 */
#define OF_ACTION_FAILED_BAD_OUT_GROUP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_ACTION_FAILED_BAD_OUT_GROUP (0x9)
#define OF_ACTION_FAILED_BAD_OUT_GROUP_BY_VERSION(version) (0x9)
#define OF_ACTION_FAILED_BAD_OUT_GROUP_GENERIC 57

/*
 * Defines for OF_ACTION_FAILED_BAD_OUT_PORT
 * Original name OFPBAC_BAD_OUT_PORT
 */
#define OF_ACTION_FAILED_BAD_OUT_PORT_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_ACTION_FAILED_BAD_OUT_PORT (0x4)
#define OF_ACTION_FAILED_BAD_OUT_PORT_BY_VERSION(version) (0x4)
#define OF_ACTION_FAILED_BAD_OUT_PORT_GENERIC 58

/*
 * Defines for OF_ACTION_FAILED_BAD_QUEUE
 * Original name OFPBAC_BAD_QUEUE
 */
#define OF_ACTION_FAILED_BAD_QUEUE_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_ACTION_FAILED_BAD_QUEUE (0x8)
#define OF_ACTION_FAILED_BAD_QUEUE_BY_VERSION(version) (0x8)
#define OF_ACTION_FAILED_BAD_QUEUE_GENERIC 59

/*
 * Defines for OF_ACTION_FAILED_BAD_SET_ARGUMENT
 * Original name OFPBAC_BAD_SET_ARGUMENT
 */
#define OF_ACTION_FAILED_BAD_SET_ARGUMENT_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_ACTION_FAILED_BAD_SET_ARGUMENT (0xf)
#define OF_ACTION_FAILED_BAD_SET_ARGUMENT_BY_VERSION(version) (0xf)
#define OF_ACTION_FAILED_BAD_SET_ARGUMENT_GENERIC 60

/*
 * Defines for OF_ACTION_FAILED_BAD_SET_LEN
 * Original name OFPBAC_BAD_SET_LEN
 */
#define OF_ACTION_FAILED_BAD_SET_LEN_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_ACTION_FAILED_BAD_SET_LEN (0xe)
#define OF_ACTION_FAILED_BAD_SET_LEN_BY_VERSION(version) (0xe)
#define OF_ACTION_FAILED_BAD_SET_LEN_GENERIC 61

/*
 * Defines for OF_ACTION_FAILED_BAD_SET_TYPE
 * Original name OFPBAC_BAD_SET_TYPE
 */
#define OF_ACTION_FAILED_BAD_SET_TYPE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_ACTION_FAILED_BAD_SET_TYPE (0xd)
#define OF_ACTION_FAILED_BAD_SET_TYPE_BY_VERSION(version) (0xd)
#define OF_ACTION_FAILED_BAD_SET_TYPE_GENERIC 62

/*
 * Defines for OF_ACTION_FAILED_BAD_TAG
 * Original name OFPBAC_BAD_TAG
 */
#define OF_ACTION_FAILED_BAD_TAG_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_ACTION_FAILED_BAD_TAG (0xc)
#define OF_ACTION_FAILED_BAD_TAG_BY_VERSION(version) (0xc)
#define OF_ACTION_FAILED_BAD_TAG_GENERIC 63

/*
 * Defines for OF_ACTION_FAILED_BAD_TYPE
 * Original name OFPBAC_BAD_TYPE
 */
#define OF_ACTION_FAILED_BAD_TYPE_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_ACTION_FAILED_BAD_TYPE (0x0)
#define OF_ACTION_FAILED_BAD_TYPE_BY_VERSION(version) (0x0)
#define OF_ACTION_FAILED_BAD_TYPE_GENERIC 64

/*
 * Defines for OF_ACTION_FAILED_EPERM
 * Original name OFPBAC_EPERM
 */
#define OF_ACTION_FAILED_EPERM_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_ACTION_FAILED_EPERM (0x6)
#define OF_ACTION_FAILED_EPERM_BY_VERSION(version) (0x6)
#define OF_ACTION_FAILED_EPERM_GENERIC 65

/*
 * Defines for OF_ACTION_FAILED_MATCH_INCONSISTENT
 * Original name OFPBAC_MATCH_INCONSISTENT
 */
#define OF_ACTION_FAILED_MATCH_INCONSISTENT_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_ACTION_FAILED_MATCH_INCONSISTENT (0xa)
#define OF_ACTION_FAILED_MATCH_INCONSISTENT_BY_VERSION(version) (0xa)
#define OF_ACTION_FAILED_MATCH_INCONSISTENT_GENERIC 66

/*
 * Defines for OF_ACTION_FAILED_TOO_MANY
 * Original name OFPBAC_TOO_MANY
 */
#define OF_ACTION_FAILED_TOO_MANY_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_ACTION_FAILED_TOO_MANY (0x7)
#define OF_ACTION_FAILED_TOO_MANY_BY_VERSION(version) (0x7)
#define OF_ACTION_FAILED_TOO_MANY_GENERIC 67

/*
 * Defines for OF_ACTION_FAILED_UNSUPPORTED_ORDER
 * Original name OFPBAC_UNSUPPORTED_ORDER
 */
#define OF_ACTION_FAILED_UNSUPPORTED_ORDER_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_ACTION_FAILED_UNSUPPORTED_ORDER (0xb)
#define OF_ACTION_FAILED_UNSUPPORTED_ORDER_BY_VERSION(version) (0xb)
#define OF_ACTION_FAILED_UNSUPPORTED_ORDER_GENERIC 68

/****************************************************************
 * Identifiers from ofp_bad_instruction_code
 *****************************************************************/

/*
 * Defines for OF_INSTRUCTION_FAILED_BAD_EXPERIMENTER
 * Original name OFPBIC_BAD_EXPERIMENTER
 */
#define OF_INSTRUCTION_FAILED_BAD_EXPERIMENTER_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_INSTRUCTION_FAILED_BAD_EXPERIMENTER (0x5)
#define OF_INSTRUCTION_FAILED_BAD_EXPERIMENTER_BY_VERSION(version) (0x5)
#define OF_INSTRUCTION_FAILED_BAD_EXPERIMENTER_GENERIC 69

/*
 * Defines for OF_INSTRUCTION_FAILED_BAD_EXPERIMENTER_TYPE
 * Original name OFPBIC_BAD_EXPERIMENTER_TYPE
 */
#define OF_INSTRUCTION_FAILED_BAD_EXPERIMENTER_TYPE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_INSTRUCTION_FAILED_BAD_EXPERIMENTER_TYPE (0x6)
#define OF_INSTRUCTION_FAILED_BAD_EXPERIMENTER_TYPE_BY_VERSION(version) (0x6)
#define OF_INSTRUCTION_FAILED_BAD_EXPERIMENTER_TYPE_GENERIC 70

/*
 * Defines for OF_INSTRUCTION_FAILED_BAD_LEN
 * Original name OFPBIC_BAD_LEN
 */
#define OF_INSTRUCTION_FAILED_BAD_LEN_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_INSTRUCTION_FAILED_BAD_LEN (0x7)
#define OF_INSTRUCTION_FAILED_BAD_LEN_BY_VERSION(version) (0x7)
#define OF_INSTRUCTION_FAILED_BAD_LEN_GENERIC 71

/*
 * Defines for OF_INSTRUCTION_FAILED_BAD_TABLE_ID
 * Original name OFPBIC_BAD_TABLE_ID
 */
#define OF_INSTRUCTION_FAILED_BAD_TABLE_ID_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_INSTRUCTION_FAILED_BAD_TABLE_ID (0x2)
#define OF_INSTRUCTION_FAILED_BAD_TABLE_ID_BY_VERSION(version) (0x2)
#define OF_INSTRUCTION_FAILED_BAD_TABLE_ID_GENERIC 72

/*
 * Defines for OF_INSTRUCTION_FAILED_EPERM
 * Original name OFPBIC_EPERM
 */
#define OF_INSTRUCTION_FAILED_EPERM_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_INSTRUCTION_FAILED_EPERM (0x8)
#define OF_INSTRUCTION_FAILED_EPERM_BY_VERSION(version) (0x8)
#define OF_INSTRUCTION_FAILED_EPERM_GENERIC 73

/*
 * Defines for OF_INSTRUCTION_FAILED_UNKNOWN_INST
 * Original name OFPBIC_UNKNOWN_INST
 */
#define OF_INSTRUCTION_FAILED_UNKNOWN_INST_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_INSTRUCTION_FAILED_UNKNOWN_INST (0x0)
#define OF_INSTRUCTION_FAILED_UNKNOWN_INST_BY_VERSION(version) (0x0)
#define OF_INSTRUCTION_FAILED_UNKNOWN_INST_GENERIC 74

/*
 * Defines for OF_INSTRUCTION_FAILED_UNSUP_EXP_INST
 * Original name OFPBIC_UNSUP_EXP_INST
 */
#define OF_INSTRUCTION_FAILED_UNSUP_EXP_INST_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1))
#define OF_INSTRUCTION_FAILED_UNSUP_EXP_INST (0x5)
#define OF_INSTRUCTION_FAILED_UNSUP_EXP_INST_BY_VERSION(version) (0x5)
#define OF_INSTRUCTION_FAILED_UNSUP_EXP_INST_GENERIC 75

/*
 * Defines for OF_INSTRUCTION_FAILED_UNSUP_INST
 * Original name OFPBIC_UNSUP_INST
 */
#define OF_INSTRUCTION_FAILED_UNSUP_INST_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_INSTRUCTION_FAILED_UNSUP_INST (0x1)
#define OF_INSTRUCTION_FAILED_UNSUP_INST_BY_VERSION(version) (0x1)
#define OF_INSTRUCTION_FAILED_UNSUP_INST_GENERIC 76

/*
 * Defines for OF_INSTRUCTION_FAILED_UNSUP_METADATA
 * Original name OFPBIC_UNSUP_METADATA
 */
#define OF_INSTRUCTION_FAILED_UNSUP_METADATA_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_INSTRUCTION_FAILED_UNSUP_METADATA (0x3)
#define OF_INSTRUCTION_FAILED_UNSUP_METADATA_BY_VERSION(version) (0x3)
#define OF_INSTRUCTION_FAILED_UNSUP_METADATA_GENERIC 77

/*
 * Defines for OF_INSTRUCTION_FAILED_UNSUP_METADATA_MASK
 * Original name OFPBIC_UNSUP_METADATA_MASK
 */
#define OF_INSTRUCTION_FAILED_UNSUP_METADATA_MASK_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_INSTRUCTION_FAILED_UNSUP_METADATA_MASK (0x4)
#define OF_INSTRUCTION_FAILED_UNSUP_METADATA_MASK_BY_VERSION(version) (0x4)
#define OF_INSTRUCTION_FAILED_UNSUP_METADATA_MASK_GENERIC 78

/****************************************************************
 * Identifiers from ofp_bad_match_code
 *****************************************************************/

/*
 * Defines for OF_MATCH_FAILED_BAD_DL_ADDR_MASK
 * Original name OFPBMC_BAD_DL_ADDR_MASK
 */
#define OF_MATCH_FAILED_BAD_DL_ADDR_MASK_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_MATCH_FAILED_BAD_DL_ADDR_MASK (0x3)
#define OF_MATCH_FAILED_BAD_DL_ADDR_MASK_BY_VERSION(version) (0x3)
#define OF_MATCH_FAILED_BAD_DL_ADDR_MASK_GENERIC 79

/*
 * Defines for OF_MATCH_FAILED_BAD_FIELD
 * Original name OFPBMC_BAD_FIELD
 */
#define OF_MATCH_FAILED_BAD_FIELD_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_MATCH_FAILED_BAD_FIELD (0x6)
#define OF_MATCH_FAILED_BAD_FIELD_BY_VERSION(version) (0x6)
#define OF_MATCH_FAILED_BAD_FIELD_GENERIC 80

/*
 * Defines for OF_MATCH_FAILED_BAD_LEN
 * Original name OFPBMC_BAD_LEN
 */
#define OF_MATCH_FAILED_BAD_LEN_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_MATCH_FAILED_BAD_LEN (0x1)
#define OF_MATCH_FAILED_BAD_LEN_BY_VERSION(version) (0x1)
#define OF_MATCH_FAILED_BAD_LEN_GENERIC 81

/*
 * Defines for OF_MATCH_FAILED_BAD_MASK
 * Original name OFPBMC_BAD_MASK
 */
#define OF_MATCH_FAILED_BAD_MASK_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_MATCH_FAILED_BAD_MASK (0x8)
#define OF_MATCH_FAILED_BAD_MASK_BY_VERSION(version) (0x8)
#define OF_MATCH_FAILED_BAD_MASK_GENERIC 82

/*
 * Defines for OF_MATCH_FAILED_BAD_NW_ADDR_MASK
 * Original name OFPBMC_BAD_NW_ADDR_MASK
 */
#define OF_MATCH_FAILED_BAD_NW_ADDR_MASK_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_MATCH_FAILED_BAD_NW_ADDR_MASK (0x4)
#define OF_MATCH_FAILED_BAD_NW_ADDR_MASK_BY_VERSION(version) (0x4)
#define OF_MATCH_FAILED_BAD_NW_ADDR_MASK_GENERIC 83

/*
 * Defines for OF_MATCH_FAILED_BAD_PREREQ
 * Original name OFPBMC_BAD_PREREQ
 */
#define OF_MATCH_FAILED_BAD_PREREQ_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_MATCH_FAILED_BAD_PREREQ (0x9)
#define OF_MATCH_FAILED_BAD_PREREQ_BY_VERSION(version) (0x9)
#define OF_MATCH_FAILED_BAD_PREREQ_GENERIC 84

/*
 * Defines for OF_MATCH_FAILED_BAD_TAG
 * Original name OFPBMC_BAD_TAG
 */
#define OF_MATCH_FAILED_BAD_TAG_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_MATCH_FAILED_BAD_TAG (0x2)
#define OF_MATCH_FAILED_BAD_TAG_BY_VERSION(version) (0x2)
#define OF_MATCH_FAILED_BAD_TAG_GENERIC 85

/*
 * Defines for OF_MATCH_FAILED_BAD_TYPE
 * Original name OFPBMC_BAD_TYPE
 */
#define OF_MATCH_FAILED_BAD_TYPE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_MATCH_FAILED_BAD_TYPE (0x0)
#define OF_MATCH_FAILED_BAD_TYPE_BY_VERSION(version) (0x0)
#define OF_MATCH_FAILED_BAD_TYPE_GENERIC 86

/*
 * Defines for OF_MATCH_FAILED_BAD_VALUE
 * Original name OFPBMC_BAD_VALUE
 */
#define OF_MATCH_FAILED_BAD_VALUE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_MATCH_FAILED_BAD_VALUE (0x7)
#define OF_MATCH_FAILED_BAD_VALUE_BY_VERSION(version) (0x7)
#define OF_MATCH_FAILED_BAD_VALUE_GENERIC 87

/*
 * Defines for OF_MATCH_FAILED_BAD_WILDCARDS
 * Original name OFPBMC_BAD_WILDCARDS
 */
#define OF_MATCH_FAILED_BAD_WILDCARDS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_MATCH_FAILED_BAD_WILDCARDS (0x5)
#define OF_MATCH_FAILED_BAD_WILDCARDS_BY_VERSION(version) (0x5)
#define OF_MATCH_FAILED_BAD_WILDCARDS_GENERIC 88

/*
 * Defines for OF_MATCH_FAILED_DUP_FIELD
 * Original name OFPBMC_DUP_FIELD
 */
#define OF_MATCH_FAILED_DUP_FIELD_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_MATCH_FAILED_DUP_FIELD (0xa)
#define OF_MATCH_FAILED_DUP_FIELD_BY_VERSION(version) (0xa)
#define OF_MATCH_FAILED_DUP_FIELD_GENERIC 89

/*
 * Defines for OF_MATCH_FAILED_EPERM
 * Original name OFPBMC_EPERM
 */
#define OF_MATCH_FAILED_EPERM_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_MATCH_FAILED_EPERM (0xb)
#define OF_MATCH_FAILED_EPERM_BY_VERSION(version) (0xb)
#define OF_MATCH_FAILED_EPERM_GENERIC 90

/****************************************************************
 * Identifiers from ofp_bad_request_code
 *****************************************************************/

/*
 * Defines for OF_REQUEST_FAILED_BAD_EXPERIMENTER
 * Original name OFPBRC_BAD_EXPERIMENTER
 */
#define OF_REQUEST_FAILED_BAD_EXPERIMENTER_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_REQUEST_FAILED_BAD_EXPERIMENTER (0x3)
#define OF_REQUEST_FAILED_BAD_EXPERIMENTER_BY_VERSION(version) (0x3)
#define OF_REQUEST_FAILED_BAD_EXPERIMENTER_GENERIC 91

/*
 * Defines for OF_REQUEST_FAILED_BAD_EXPERIMENTER_TYPE
 * Original name OFPBRC_BAD_EXPERIMENTER_TYPE
 */
#define OF_REQUEST_FAILED_BAD_EXPERIMENTER_TYPE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_REQUEST_FAILED_BAD_EXPERIMENTER_TYPE (0x4)
#define OF_REQUEST_FAILED_BAD_EXPERIMENTER_TYPE_BY_VERSION(version) (0x4)
#define OF_REQUEST_FAILED_BAD_EXPERIMENTER_TYPE_GENERIC 92

/*
 * Defines for OF_REQUEST_FAILED_BAD_LEN
 * Original name OFPBRC_BAD_LEN
 */
#define OF_REQUEST_FAILED_BAD_LEN_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_REQUEST_FAILED_BAD_LEN (0x6)
#define OF_REQUEST_FAILED_BAD_LEN_BY_VERSION(version) (0x6)
#define OF_REQUEST_FAILED_BAD_LEN_GENERIC 93

/*
 * Defines for OF_REQUEST_FAILED_BAD_PACKET
 * Original name OFPBRC_BAD_PACKET
 */
#define OF_REQUEST_FAILED_BAD_PACKET_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_REQUEST_FAILED_BAD_PACKET (0xc)
#define OF_REQUEST_FAILED_BAD_PACKET_BY_VERSION(version) (0xc)
#define OF_REQUEST_FAILED_BAD_PACKET_GENERIC 94

/*
 * Defines for OF_REQUEST_FAILED_BAD_PORT
 * Original name OFPBRC_BAD_PORT
 */
#define OF_REQUEST_FAILED_BAD_PORT_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_REQUEST_FAILED_BAD_PORT (0xb)
#define OF_REQUEST_FAILED_BAD_PORT_BY_VERSION(version) (0xb)
#define OF_REQUEST_FAILED_BAD_PORT_GENERIC 95

/*
 * Defines for OF_REQUEST_FAILED_BAD_STAT
 * Original name OFPBRC_BAD_STAT
 */
#define OF_REQUEST_FAILED_BAD_STAT_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_REQUEST_FAILED_BAD_STAT (0x2)
#define OF_REQUEST_FAILED_BAD_STAT_BY_VERSION(version) (0x2)
#define OF_REQUEST_FAILED_BAD_STAT_GENERIC 96

/*
 * Defines for OF_REQUEST_FAILED_BAD_SUBTYPE
 * Original name OFPBRC_BAD_SUBTYPE
 */
#define OF_REQUEST_FAILED_BAD_SUBTYPE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1))
#define OF_REQUEST_FAILED_BAD_SUBTYPE (0x4)
#define OF_REQUEST_FAILED_BAD_SUBTYPE_BY_VERSION(version) (0x4)
#define OF_REQUEST_FAILED_BAD_SUBTYPE_GENERIC 97

/*
 * Defines for OF_REQUEST_FAILED_BAD_TABLE_ID
 * Original name OFPBRC_BAD_TABLE_ID
 */
#define OF_REQUEST_FAILED_BAD_TABLE_ID_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_REQUEST_FAILED_BAD_TABLE_ID (0x9)
#define OF_REQUEST_FAILED_BAD_TABLE_ID_BY_VERSION(version) (0x9)
#define OF_REQUEST_FAILED_BAD_TABLE_ID_GENERIC 98

/*
 * Defines for OF_REQUEST_FAILED_BAD_TYPE
 * Original name OFPBRC_BAD_TYPE
 */
#define OF_REQUEST_FAILED_BAD_TYPE_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_REQUEST_FAILED_BAD_TYPE (0x1)
#define OF_REQUEST_FAILED_BAD_TYPE_BY_VERSION(version) (0x1)
#define OF_REQUEST_FAILED_BAD_TYPE_GENERIC 99

/*
 * Defines for OF_REQUEST_FAILED_BAD_VERSION
 * Original name OFPBRC_BAD_VERSION
 */
#define OF_REQUEST_FAILED_BAD_VERSION_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_REQUEST_FAILED_BAD_VERSION (0x0)
#define OF_REQUEST_FAILED_BAD_VERSION_BY_VERSION(version) (0x0)
#define OF_REQUEST_FAILED_BAD_VERSION_GENERIC 100

/*
 * Defines for OF_REQUEST_FAILED_BUFFER_EMPTY
 * Original name OFPBRC_BUFFER_EMPTY
 */
#define OF_REQUEST_FAILED_BUFFER_EMPTY_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_REQUEST_FAILED_BUFFER_EMPTY (0x7)
#define OF_REQUEST_FAILED_BUFFER_EMPTY_BY_VERSION(version) (0x7)
#define OF_REQUEST_FAILED_BUFFER_EMPTY_GENERIC 101

/*
 * Defines for OF_REQUEST_FAILED_BUFFER_UNKNOWN
 * Original name OFPBRC_BUFFER_UNKNOWN
 */
#define OF_REQUEST_FAILED_BUFFER_UNKNOWN_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_REQUEST_FAILED_BUFFER_UNKNOWN (0x8)
#define OF_REQUEST_FAILED_BUFFER_UNKNOWN_BY_VERSION(version) (0x8)
#define OF_REQUEST_FAILED_BUFFER_UNKNOWN_GENERIC 102

/*
 * Defines for OF_REQUEST_FAILED_EPERM
 * Original name OFPBRC_EPERM
 */
#define OF_REQUEST_FAILED_EPERM_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_REQUEST_FAILED_EPERM (0x5)
#define OF_REQUEST_FAILED_EPERM_BY_VERSION(version) (0x5)
#define OF_REQUEST_FAILED_EPERM_GENERIC 103

/*
 * Defines for OF_REQUEST_FAILED_IS_SLAVE
 * Original name OFPBRC_IS_SLAVE
 */
#define OF_REQUEST_FAILED_IS_SLAVE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_REQUEST_FAILED_IS_SLAVE (0xa)
#define OF_REQUEST_FAILED_IS_SLAVE_BY_VERSION(version) (0xa)
#define OF_REQUEST_FAILED_IS_SLAVE_GENERIC 104

/*
 * Defines for OF_REQUEST_FAILED_MULTIPART_BUFFER_OVERFLOW
 * Original name OFPBRC_MULTIPART_BUFFER_OVERFLOW
 */
#define OF_REQUEST_FAILED_MULTIPART_BUFFER_OVERFLOW_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_REQUEST_FAILED_MULTIPART_BUFFER_OVERFLOW (0xd)
#define OF_REQUEST_FAILED_MULTIPART_BUFFER_OVERFLOW_BY_VERSION(version) (0xd)
#define OF_REQUEST_FAILED_MULTIPART_BUFFER_OVERFLOW_GENERIC 105

/****************************************************************
 * Identifiers from ofp_bsn_vport_q_in_q_untagged
 *****************************************************************/

/*
 * Defines for OF_BSN_VPORT_Q_IN_Q_UNTAGGED
 * Original name OF_BSN_VPORT_Q_IN_Q_UNTAGGED
 */
#define OF_BSN_VPORT_Q_IN_Q_UNTAGGED_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_BSN_VPORT_Q_IN_Q_UNTAGGED (0xffff)
#define OF_BSN_VPORT_Q_IN_Q_UNTAGGED_BY_VERSION(version) (0xffff)
#define OF_BSN_VPORT_Q_IN_Q_UNTAGGED_GENERIC 106

/****************************************************************
 * Identifiers from ofp_bsn_vport_status
 *****************************************************************/

/*
 * Defines for OF_BSN_VPORT_STATUS_FAILED
 * Original name OF_BSN_VPORT_STATUS_FAILED
 */
#define OF_BSN_VPORT_STATUS_FAILED_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_BSN_VPORT_STATUS_FAILED (0x1)
#define OF_BSN_VPORT_STATUS_FAILED_BY_VERSION(version) (0x1)
#define OF_BSN_VPORT_STATUS_FAILED_GENERIC 107

/*
 * Defines for OF_BSN_VPORT_STATUS_OK
 * Original name OF_BSN_VPORT_STATUS_OK
 */
#define OF_BSN_VPORT_STATUS_OK_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_BSN_VPORT_STATUS_OK (0x0)
#define OF_BSN_VPORT_STATUS_OK_BY_VERSION(version) (0x0)
#define OF_BSN_VPORT_STATUS_OK_GENERIC 108

/****************************************************************
 * Identifiers from ofp_capabilities
 *****************************************************************/

/*
 * Defines for OF_CAPABILITIES_FLAG_ARP_MATCH_IP
 * Original name OFPC_ARP_MATCH_IP
 */
#define OF_CAPABILITIES_FLAG_ARP_MATCH_IP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1))
#define OF_CAPABILITIES_FLAG_ARP_MATCH_IP (0x80)
#define OF_CAPABILITIES_FLAG_ARP_MATCH_IP_BY_VERSION(version) (0x80)

#define OF_CAPABILITIES_FLAG_ARP_MATCH_IP_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_CAPABILITIES_FLAG_ARP_MATCH_IP_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_ARP_MATCH_IP_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_CAPABILITIES_FLAG_ARP_MATCH_IP_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_ARP_MATCH_IP_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_CAPABILITIES_FLAG_ARP_MATCH_IP_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_ARP_MATCH_IP_GENERIC 109

/*
 * Defines for OF_CAPABILITIES_FLAG_FLOW_STATS
 * Original name OFPC_FLOW_STATS
 */
#define OF_CAPABILITIES_FLAG_FLOW_STATS_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_CAPABILITIES_FLAG_FLOW_STATS (0x1)
#define OF_CAPABILITIES_FLAG_FLOW_STATS_BY_VERSION(version) (0x1)

#define OF_CAPABILITIES_FLAG_FLOW_STATS_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_CAPABILITIES_FLAG_FLOW_STATS_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_FLOW_STATS_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_CAPABILITIES_FLAG_FLOW_STATS_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_FLOW_STATS_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_CAPABILITIES_FLAG_FLOW_STATS_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_FLOW_STATS_GENERIC 110

/*
 * Defines for OF_CAPABILITIES_FLAG_GROUP_STATS
 * Original name OFPC_GROUP_STATS
 */
#define OF_CAPABILITIES_FLAG_GROUP_STATS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_CAPABILITIES_FLAG_GROUP_STATS (0x8)
#define OF_CAPABILITIES_FLAG_GROUP_STATS_BY_VERSION(version) (0x8)

#define OF_CAPABILITIES_FLAG_GROUP_STATS_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_CAPABILITIES_FLAG_GROUP_STATS_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_GROUP_STATS_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_CAPABILITIES_FLAG_GROUP_STATS_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_GROUP_STATS_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_CAPABILITIES_FLAG_GROUP_STATS_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_GROUP_STATS_GENERIC 111

/*
 * Defines for OF_CAPABILITIES_FLAG_IP_REASM
 * Original name OFPC_IP_REASM
 */
#define OF_CAPABILITIES_FLAG_IP_REASM_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_CAPABILITIES_FLAG_IP_REASM (0x20)
#define OF_CAPABILITIES_FLAG_IP_REASM_BY_VERSION(version) (0x20)

#define OF_CAPABILITIES_FLAG_IP_REASM_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_CAPABILITIES_FLAG_IP_REASM_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_IP_REASM_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_CAPABILITIES_FLAG_IP_REASM_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_IP_REASM_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_CAPABILITIES_FLAG_IP_REASM_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_IP_REASM_GENERIC 112

/*
 * Defines for OF_CAPABILITIES_FLAG_PORT_BLOCKED
 * Original name OFPC_PORT_BLOCKED
 */
#define OF_CAPABILITIES_FLAG_PORT_BLOCKED_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_CAPABILITIES_FLAG_PORT_BLOCKED (0x100)
#define OF_CAPABILITIES_FLAG_PORT_BLOCKED_BY_VERSION(version) (0x100)

#define OF_CAPABILITIES_FLAG_PORT_BLOCKED_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_CAPABILITIES_FLAG_PORT_BLOCKED_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_PORT_BLOCKED_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_CAPABILITIES_FLAG_PORT_BLOCKED_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_PORT_BLOCKED_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_CAPABILITIES_FLAG_PORT_BLOCKED_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_PORT_BLOCKED_GENERIC 113

/*
 * Defines for OF_CAPABILITIES_FLAG_PORT_STATS
 * Original name OFPC_PORT_STATS
 */
#define OF_CAPABILITIES_FLAG_PORT_STATS_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_CAPABILITIES_FLAG_PORT_STATS (0x4)
#define OF_CAPABILITIES_FLAG_PORT_STATS_BY_VERSION(version) (0x4)

#define OF_CAPABILITIES_FLAG_PORT_STATS_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_CAPABILITIES_FLAG_PORT_STATS_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_PORT_STATS_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_CAPABILITIES_FLAG_PORT_STATS_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_PORT_STATS_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_CAPABILITIES_FLAG_PORT_STATS_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_PORT_STATS_GENERIC 114

/*
 * Defines for OF_CAPABILITIES_FLAG_QUEUE_STATS
 * Original name OFPC_QUEUE_STATS
 */
#define OF_CAPABILITIES_FLAG_QUEUE_STATS_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_CAPABILITIES_FLAG_QUEUE_STATS (0x40)
#define OF_CAPABILITIES_FLAG_QUEUE_STATS_BY_VERSION(version) (0x40)

#define OF_CAPABILITIES_FLAG_QUEUE_STATS_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_CAPABILITIES_FLAG_QUEUE_STATS_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_QUEUE_STATS_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_CAPABILITIES_FLAG_QUEUE_STATS_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_QUEUE_STATS_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_CAPABILITIES_FLAG_QUEUE_STATS_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_QUEUE_STATS_GENERIC 115

/*
 * Defines for OF_CAPABILITIES_FLAG_RESERVED
 * Original name OFPC_RESERVED
 */
#define OF_CAPABILITIES_FLAG_RESERVED_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_CAPABILITIES_FLAG_RESERVED (0x10)
#define OF_CAPABILITIES_FLAG_RESERVED_BY_VERSION(version) (0x10)

#define OF_CAPABILITIES_FLAG_RESERVED_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_CAPABILITIES_FLAG_RESERVED_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_RESERVED_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_CAPABILITIES_FLAG_RESERVED_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_RESERVED_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_CAPABILITIES_FLAG_RESERVED_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_RESERVED_GENERIC 116

/*
 * Defines for OF_CAPABILITIES_FLAG_STP
 * Original name OFPC_STP
 */
#define OF_CAPABILITIES_FLAG_STP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_CAPABILITIES_FLAG_STP (0x8)
#define OF_CAPABILITIES_FLAG_STP_BY_VERSION(version) (0x8)

#define OF_CAPABILITIES_FLAG_STP_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_CAPABILITIES_FLAG_STP_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_STP_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_CAPABILITIES_FLAG_STP_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_STP_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_CAPABILITIES_FLAG_STP_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_STP_GENERIC 117

/*
 * Defines for OF_CAPABILITIES_FLAG_TABLE_STATS
 * Original name OFPC_TABLE_STATS
 */
#define OF_CAPABILITIES_FLAG_TABLE_STATS_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_CAPABILITIES_FLAG_TABLE_STATS (0x2)
#define OF_CAPABILITIES_FLAG_TABLE_STATS_BY_VERSION(version) (0x2)

#define OF_CAPABILITIES_FLAG_TABLE_STATS_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_CAPABILITIES_FLAG_TABLE_STATS_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_TABLE_STATS_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_CAPABILITIES_FLAG_TABLE_STATS_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_TABLE_STATS_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_CAPABILITIES_FLAG_TABLE_STATS_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_TABLE_STATS_GENERIC 118

/****************************************************************
 * Identifiers from ofp_config_flags
 *****************************************************************/

/*
 * Defines for OF_CONFIG_FRAG_DROP
 * Original name OFPC_FRAG_DROP
 */
#define OF_CONFIG_FRAG_DROP_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_CONFIG_FRAG_DROP (0x1)
#define OF_CONFIG_FRAG_DROP_BY_VERSION(version) (0x1)

#define OF_CONFIG_FRAG_DROP_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_CONFIG_FRAG_DROP_BY_VERSION(version))
#define OF_CONFIG_FRAG_DROP_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_CONFIG_FRAG_DROP_BY_VERSION(version))
#define OF_CONFIG_FRAG_DROP_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_CONFIG_FRAG_DROP_BY_VERSION(version))
#define OF_CONFIG_FRAG_DROP_GENERIC 119

/*
 * Defines for OF_CONFIG_FRAG_MASK
 * Original name OFPC_FRAG_MASK
 */
#define OF_CONFIG_FRAG_MASK_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_CONFIG_FRAG_MASK (0x3)
#define OF_CONFIG_FRAG_MASK_BY_VERSION(version) (0x3)

#define OF_CONFIG_FRAG_MASK_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_CONFIG_FRAG_MASK_BY_VERSION(version))
#define OF_CONFIG_FRAG_MASK_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_CONFIG_FRAG_MASK_BY_VERSION(version))
#define OF_CONFIG_FRAG_MASK_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_CONFIG_FRAG_MASK_BY_VERSION(version))
#define OF_CONFIG_FRAG_MASK_GENERIC 120

/*
 * Defines for OF_CONFIG_FRAG_NORMAL
 * Original name OFPC_FRAG_NORMAL
 */
#define OF_CONFIG_FRAG_NORMAL_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_CONFIG_FRAG_NORMAL (0x0)
#define OF_CONFIG_FRAG_NORMAL_BY_VERSION(version) (0x0)
#define OF_CONFIG_FRAG_NORMAL_GENERIC 121

/*
 * Defines for OF_CONFIG_FRAG_REASM
 * Original name OFPC_FRAG_REASM
 */
#define OF_CONFIG_FRAG_REASM_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_CONFIG_FRAG_REASM (0x2)
#define OF_CONFIG_FRAG_REASM_BY_VERSION(version) (0x2)

#define OF_CONFIG_FRAG_REASM_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_CONFIG_FRAG_REASM_BY_VERSION(version))
#define OF_CONFIG_FRAG_REASM_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_CONFIG_FRAG_REASM_BY_VERSION(version))
#define OF_CONFIG_FRAG_REASM_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_CONFIG_FRAG_REASM_BY_VERSION(version))
#define OF_CONFIG_FRAG_REASM_GENERIC 122

/*
 * Defines for OF_CONFIG_INVALID_TTL_TO_CONTROLLER
 * Original name OFPC_INVALID_TTL_TO_CONTROLLER
 */
#define OF_CONFIG_INVALID_TTL_TO_CONTROLLER_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2))
#define OF_CONFIG_INVALID_TTL_TO_CONTROLLER (0x4)
#define OF_CONFIG_INVALID_TTL_TO_CONTROLLER_BY_VERSION(version) (0x4)

#define OF_CONFIG_INVALID_TTL_TO_CONTROLLER_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_CONFIG_INVALID_TTL_TO_CONTROLLER_BY_VERSION(version))
#define OF_CONFIG_INVALID_TTL_TO_CONTROLLER_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_CONFIG_INVALID_TTL_TO_CONTROLLER_BY_VERSION(version))
#define OF_CONFIG_INVALID_TTL_TO_CONTROLLER_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_CONFIG_INVALID_TTL_TO_CONTROLLER_BY_VERSION(version))
#define OF_CONFIG_INVALID_TTL_TO_CONTROLLER_GENERIC 123

/****************************************************************
 * Identifiers from ofp_controller_max_len
 *****************************************************************/

/*
 * Defines for OF_CONTROLLER_PKT_MAX
 * Original name OFPCML_MAX
 */
#define OF_CONTROLLER_PKT_MAX_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_CONTROLLER_PKT_MAX (0xffe5)
#define OF_CONTROLLER_PKT_MAX_BY_VERSION(version) (0xffe5)
#define OF_CONTROLLER_PKT_MAX_GENERIC 124

/*
 * Defines for OF_CONTROLLER_PKT_NO_BUFFER
 * Original name OFPCML_NO_BUFFER
 */
#define OF_CONTROLLER_PKT_NO_BUFFER_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_CONTROLLER_PKT_NO_BUFFER (0xffff)
#define OF_CONTROLLER_PKT_NO_BUFFER_BY_VERSION(version) (0xffff)
#define OF_CONTROLLER_PKT_NO_BUFFER_GENERIC 125

/****************************************************************
 * Identifiers from ofp_controller_role
 *****************************************************************/

/*
 * Defines for OF_CONTROLLER_ROLE_EQUAL
 * Original name OFPCR_ROLE_EQUAL
 */
#define OF_CONTROLLER_ROLE_EQUAL_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_CONTROLLER_ROLE_EQUAL (0x1)
#define OF_CONTROLLER_ROLE_EQUAL_BY_VERSION(version) (0x1)
#define OF_CONTROLLER_ROLE_EQUAL_GENERIC 126

/*
 * Defines for OF_CONTROLLER_ROLE_MASTER
 * Original name OFPCR_ROLE_MASTER
 */
#define OF_CONTROLLER_ROLE_MASTER_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_CONTROLLER_ROLE_MASTER (0x2)
#define OF_CONTROLLER_ROLE_MASTER_BY_VERSION(version) (0x2)
#define OF_CONTROLLER_ROLE_MASTER_GENERIC 127

/*
 * Defines for OF_CONTROLLER_ROLE_NOCHANGE
 * Original name OFPCR_ROLE_NOCHANGE
 */
#define OF_CONTROLLER_ROLE_NOCHANGE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_CONTROLLER_ROLE_NOCHANGE (0x0)
#define OF_CONTROLLER_ROLE_NOCHANGE_BY_VERSION(version) (0x0)
#define OF_CONTROLLER_ROLE_NOCHANGE_GENERIC 128

/*
 * Defines for OF_CONTROLLER_ROLE_SLAVE
 * Original name OFPCR_ROLE_SLAVE
 */
#define OF_CONTROLLER_ROLE_SLAVE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_CONTROLLER_ROLE_SLAVE (0x3)
#define OF_CONTROLLER_ROLE_SLAVE_BY_VERSION(version) (0x3)
#define OF_CONTROLLER_ROLE_SLAVE_GENERIC 129

/****************************************************************
 * Identifiers from ofp_error_type
 *****************************************************************/

/*
 * Defines for OF_ERROR_TYPE_BAD_ACTION
 * Original name OFPET_BAD_ACTION
 */
#define OF_ERROR_TYPE_BAD_ACTION_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_ERROR_TYPE_BAD_ACTION (0x2)
#define OF_ERROR_TYPE_BAD_ACTION_BY_VERSION(version) (0x2)
#define OF_ERROR_TYPE_BAD_ACTION_GENERIC 130

/*
 * Defines for OF_ERROR_TYPE_BAD_INSTRUCTION
 * Original name OFPET_BAD_INSTRUCTION
 */
#define OF_ERROR_TYPE_BAD_INSTRUCTION_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_ERROR_TYPE_BAD_INSTRUCTION (0x3)
#define OF_ERROR_TYPE_BAD_INSTRUCTION_BY_VERSION(version) (0x3)
#define OF_ERROR_TYPE_BAD_INSTRUCTION_GENERIC 131

/*
 * Defines for OF_ERROR_TYPE_BAD_MATCH
 * Original name OFPET_BAD_MATCH
 */
#define OF_ERROR_TYPE_BAD_MATCH_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_ERROR_TYPE_BAD_MATCH (0x4)
#define OF_ERROR_TYPE_BAD_MATCH_BY_VERSION(version) (0x4)
#define OF_ERROR_TYPE_BAD_MATCH_GENERIC 132

/*
 * Defines for OF_ERROR_TYPE_BAD_REQUEST
 * Original name OFPET_BAD_REQUEST
 */
#define OF_ERROR_TYPE_BAD_REQUEST_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_ERROR_TYPE_BAD_REQUEST (0x1)
#define OF_ERROR_TYPE_BAD_REQUEST_BY_VERSION(version) (0x1)
#define OF_ERROR_TYPE_BAD_REQUEST_GENERIC 133

/*
 * Defines for OF_ERROR_TYPE_EXPERIMENTER
 * Original name OFPET_EXPERIMENTER
 */
#define OF_ERROR_TYPE_EXPERIMENTER_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_ERROR_TYPE_EXPERIMENTER (0xffff)
#define OF_ERROR_TYPE_EXPERIMENTER_BY_VERSION(version) (0xffff)
#define OF_ERROR_TYPE_EXPERIMENTER_GENERIC 134

/*
 * Defines for OF_ERROR_TYPE_FLOW_MOD_FAILED
 * Original name OFPET_FLOW_MOD_FAILED
 */
#define OF_ERROR_TYPE_FLOW_MOD_FAILED_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_ERROR_TYPE_FLOW_MOD_FAILED_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x3, 0x5, 0x5, 0x5)
#define OF_ERROR_TYPE_FLOW_MOD_FAILED_GENERIC 135

/*
 * Defines for OF_ERROR_TYPE_GROUP_MOD_FAILED
 * Original name OFPET_GROUP_MOD_FAILED
 */
#define OF_ERROR_TYPE_GROUP_MOD_FAILED_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_ERROR_TYPE_GROUP_MOD_FAILED (0x6)
#define OF_ERROR_TYPE_GROUP_MOD_FAILED_BY_VERSION(version) (0x6)
#define OF_ERROR_TYPE_GROUP_MOD_FAILED_GENERIC 136

/*
 * Defines for OF_ERROR_TYPE_HELLO_FAILED
 * Original name OFPET_HELLO_FAILED
 */
#define OF_ERROR_TYPE_HELLO_FAILED_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_ERROR_TYPE_HELLO_FAILED (0x0)
#define OF_ERROR_TYPE_HELLO_FAILED_BY_VERSION(version) (0x0)
#define OF_ERROR_TYPE_HELLO_FAILED_GENERIC 137

/*
 * Defines for OF_ERROR_TYPE_METER_MOD_FAILED
 * Original name OFPET_METER_MOD_FAILED
 */
#define OF_ERROR_TYPE_METER_MOD_FAILED_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_ERROR_TYPE_METER_MOD_FAILED (0xc)
#define OF_ERROR_TYPE_METER_MOD_FAILED_BY_VERSION(version) (0xc)
#define OF_ERROR_TYPE_METER_MOD_FAILED_GENERIC 138

/*
 * Defines for OF_ERROR_TYPE_PORT_MOD_FAILED
 * Original name OFPET_PORT_MOD_FAILED
 */
#define OF_ERROR_TYPE_PORT_MOD_FAILED_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_ERROR_TYPE_PORT_MOD_FAILED_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x4, 0x7, 0x7, 0x7)
#define OF_ERROR_TYPE_PORT_MOD_FAILED_GENERIC 139

/*
 * Defines for OF_ERROR_TYPE_QUEUE_OP_FAILED
 * Original name OFPET_QUEUE_OP_FAILED
 */
#define OF_ERROR_TYPE_QUEUE_OP_FAILED_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_ERROR_TYPE_QUEUE_OP_FAILED_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x5, 0x9, 0x9, 0x9)
#define OF_ERROR_TYPE_QUEUE_OP_FAILED_GENERIC 140

/*
 * Defines for OF_ERROR_TYPE_ROLE_REQUEST_FAILED
 * Original name OFPET_ROLE_REQUEST_FAILED
 */
#define OF_ERROR_TYPE_ROLE_REQUEST_FAILED_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_ERROR_TYPE_ROLE_REQUEST_FAILED (0xb)
#define OF_ERROR_TYPE_ROLE_REQUEST_FAILED_BY_VERSION(version) (0xb)
#define OF_ERROR_TYPE_ROLE_REQUEST_FAILED_GENERIC 141

/*
 * Defines for OF_ERROR_TYPE_SWITCH_CONFIG_FAILED
 * Original name OFPET_SWITCH_CONFIG_FAILED
 */
#define OF_ERROR_TYPE_SWITCH_CONFIG_FAILED_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_ERROR_TYPE_SWITCH_CONFIG_FAILED (0xa)
#define OF_ERROR_TYPE_SWITCH_CONFIG_FAILED_BY_VERSION(version) (0xa)
#define OF_ERROR_TYPE_SWITCH_CONFIG_FAILED_GENERIC 142

/*
 * Defines for OF_ERROR_TYPE_TABLE_FEATURES_FAILED
 * Original name OFPET_TABLE_FEATURES_FAILED
 */
#define OF_ERROR_TYPE_TABLE_FEATURES_FAILED_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_ERROR_TYPE_TABLE_FEATURES_FAILED (0xd)
#define OF_ERROR_TYPE_TABLE_FEATURES_FAILED_BY_VERSION(version) (0xd)
#define OF_ERROR_TYPE_TABLE_FEATURES_FAILED_GENERIC 143

/*
 * Defines for OF_ERROR_TYPE_TABLE_MOD_FAILED
 * Original name OFPET_TABLE_MOD_FAILED
 */
#define OF_ERROR_TYPE_TABLE_MOD_FAILED_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_ERROR_TYPE_TABLE_MOD_FAILED (0x8)
#define OF_ERROR_TYPE_TABLE_MOD_FAILED_BY_VERSION(version) (0x8)
#define OF_ERROR_TYPE_TABLE_MOD_FAILED_GENERIC 144

/****************************************************************
 * Identifiers from ofp_flow_mod_command
 *****************************************************************/

/*
 * Defines for OF_FLOW_MOD_COMMAND_ADD
 * Original name OFPFC_ADD
 */
#define OF_FLOW_MOD_COMMAND_ADD_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_FLOW_MOD_COMMAND_ADD (0x0)
#define OF_FLOW_MOD_COMMAND_ADD_BY_VERSION(version) (0x0)
#define OF_FLOW_MOD_COMMAND_ADD_GENERIC 145

/*
 * Defines for OF_FLOW_MOD_COMMAND_DELETE
 * Original name OFPFC_DELETE
 */
#define OF_FLOW_MOD_COMMAND_DELETE_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_FLOW_MOD_COMMAND_DELETE (0x3)
#define OF_FLOW_MOD_COMMAND_DELETE_BY_VERSION(version) (0x3)
#define OF_FLOW_MOD_COMMAND_DELETE_GENERIC 146

/*
 * Defines for OF_FLOW_MOD_COMMAND_DELETE_STRICT
 * Original name OFPFC_DELETE_STRICT
 */
#define OF_FLOW_MOD_COMMAND_DELETE_STRICT_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_FLOW_MOD_COMMAND_DELETE_STRICT (0x4)
#define OF_FLOW_MOD_COMMAND_DELETE_STRICT_BY_VERSION(version) (0x4)
#define OF_FLOW_MOD_COMMAND_DELETE_STRICT_GENERIC 147

/*
 * Defines for OF_FLOW_MOD_COMMAND_MODIFY
 * Original name OFPFC_MODIFY
 */
#define OF_FLOW_MOD_COMMAND_MODIFY_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_FLOW_MOD_COMMAND_MODIFY (0x1)
#define OF_FLOW_MOD_COMMAND_MODIFY_BY_VERSION(version) (0x1)
#define OF_FLOW_MOD_COMMAND_MODIFY_GENERIC 148

/*
 * Defines for OF_FLOW_MOD_COMMAND_MODIFY_STRICT
 * Original name OFPFC_MODIFY_STRICT
 */
#define OF_FLOW_MOD_COMMAND_MODIFY_STRICT_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_FLOW_MOD_COMMAND_MODIFY_STRICT (0x2)
#define OF_FLOW_MOD_COMMAND_MODIFY_STRICT_BY_VERSION(version) (0x2)
#define OF_FLOW_MOD_COMMAND_MODIFY_STRICT_GENERIC 149

/****************************************************************
 * Identifiers from ofp_flow_mod_failed_code
 *****************************************************************/

/*
 * Defines for OF_FLOW_MOD_FAILED_ALL_TABLES_FULL
 * Original name OFPFMFC_ALL_TABLES_FULL
 */
#define OF_FLOW_MOD_FAILED_ALL_TABLES_FULL_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_FLOW_MOD_FAILED_ALL_TABLES_FULL (0x0)
#define OF_FLOW_MOD_FAILED_ALL_TABLES_FULL_BY_VERSION(version) (0x0)
#define OF_FLOW_MOD_FAILED_ALL_TABLES_FULL_GENERIC 150

/*
 * Defines for OF_FLOW_MOD_FAILED_BAD_COMMAND
 * Original name OFPFMFC_BAD_COMMAND
 */
#define OF_FLOW_MOD_FAILED_BAD_COMMAND_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_FLOW_MOD_FAILED_BAD_COMMAND_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x4, 0x6, 0x6, 0x6)
#define OF_FLOW_MOD_FAILED_BAD_COMMAND_GENERIC 151

/*
 * Defines for OF_FLOW_MOD_FAILED_BAD_EMERG_TIMEOUT
 * Original name OFPFMFC_BAD_EMERG_TIMEOUT
 */
#define OF_FLOW_MOD_FAILED_BAD_EMERG_TIMEOUT_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_FLOW_MOD_FAILED_BAD_EMERG_TIMEOUT (0x3)
#define OF_FLOW_MOD_FAILED_BAD_EMERG_TIMEOUT_BY_VERSION(version) (0x3)
#define OF_FLOW_MOD_FAILED_BAD_EMERG_TIMEOUT_GENERIC 152

/*
 * Defines for OF_FLOW_MOD_FAILED_BAD_FLAGS
 * Original name OFPFMFC_BAD_FLAGS
 */
#define OF_FLOW_MOD_FAILED_BAD_FLAGS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_FLOW_MOD_FAILED_BAD_FLAGS (0x7)
#define OF_FLOW_MOD_FAILED_BAD_FLAGS_BY_VERSION(version) (0x7)
#define OF_FLOW_MOD_FAILED_BAD_FLAGS_GENERIC 153

/*
 * Defines for OF_FLOW_MOD_FAILED_BAD_TABLE_ID
 * Original name OFPFMFC_BAD_TABLE_ID
 */
#define OF_FLOW_MOD_FAILED_BAD_TABLE_ID_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_FLOW_MOD_FAILED_BAD_TABLE_ID (0x2)
#define OF_FLOW_MOD_FAILED_BAD_TABLE_ID_BY_VERSION(version) (0x2)
#define OF_FLOW_MOD_FAILED_BAD_TABLE_ID_GENERIC 154

/*
 * Defines for OF_FLOW_MOD_FAILED_BAD_TIMEOUT
 * Original name OFPFMFC_BAD_TIMEOUT
 */
#define OF_FLOW_MOD_FAILED_BAD_TIMEOUT_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_FLOW_MOD_FAILED_BAD_TIMEOUT (0x5)
#define OF_FLOW_MOD_FAILED_BAD_TIMEOUT_BY_VERSION(version) (0x5)
#define OF_FLOW_MOD_FAILED_BAD_TIMEOUT_GENERIC 155

/*
 * Defines for OF_FLOW_MOD_FAILED_EPERM
 * Original name OFPFMFC_EPERM
 */
#define OF_FLOW_MOD_FAILED_EPERM_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_FLOW_MOD_FAILED_EPERM_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x2, 0x4, 0x4, 0x4)
#define OF_FLOW_MOD_FAILED_EPERM_GENERIC 156

/*
 * Defines for OF_FLOW_MOD_FAILED_OVERLAP
 * Original name OFPFMFC_OVERLAP
 */
#define OF_FLOW_MOD_FAILED_OVERLAP_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_FLOW_MOD_FAILED_OVERLAP_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x1, 0x3, 0x3, 0x3)
#define OF_FLOW_MOD_FAILED_OVERLAP_GENERIC 157

/*
 * Defines for OF_FLOW_MOD_FAILED_TABLE_FULL
 * Original name OFPFMFC_TABLE_FULL
 */
#define OF_FLOW_MOD_FAILED_TABLE_FULL_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_FLOW_MOD_FAILED_TABLE_FULL (0x1)
#define OF_FLOW_MOD_FAILED_TABLE_FULL_BY_VERSION(version) (0x1)
#define OF_FLOW_MOD_FAILED_TABLE_FULL_GENERIC 158

/*
 * Defines for OF_FLOW_MOD_FAILED_UNKNOWN
 * Original name OFPFMFC_UNKNOWN
 */
#define OF_FLOW_MOD_FAILED_UNKNOWN_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_FLOW_MOD_FAILED_UNKNOWN (0x0)
#define OF_FLOW_MOD_FAILED_UNKNOWN_BY_VERSION(version) (0x0)
#define OF_FLOW_MOD_FAILED_UNKNOWN_GENERIC 159

/*
 * Defines for OF_FLOW_MOD_FAILED_UNSUPPORTED
 * Original name OFPFMFC_UNSUPPORTED
 */
#define OF_FLOW_MOD_FAILED_UNSUPPORTED_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_FLOW_MOD_FAILED_UNSUPPORTED (0x5)
#define OF_FLOW_MOD_FAILED_UNSUPPORTED_BY_VERSION(version) (0x5)
#define OF_FLOW_MOD_FAILED_UNSUPPORTED_GENERIC 160

/****************************************************************
 * Identifiers from ofp_flow_mod_flags
 *****************************************************************/

/*
 * Defines for OF_FLOW_MOD_FLAG_BSN_SEND_IDLE
 * Original name OFPFF_BSN_SEND_IDLE
 */
#define OF_FLOW_MOD_FLAG_BSN_SEND_IDLE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_FLOW_MOD_FLAG_BSN_SEND_IDLE (0x80)
#define OF_FLOW_MOD_FLAG_BSN_SEND_IDLE_BY_VERSION(version) (0x80)

#define OF_FLOW_MOD_FLAG_BSN_SEND_IDLE_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_FLOW_MOD_FLAG_BSN_SEND_IDLE_BY_VERSION(version))
#define OF_FLOW_MOD_FLAG_BSN_SEND_IDLE_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_FLOW_MOD_FLAG_BSN_SEND_IDLE_BY_VERSION(version))
#define OF_FLOW_MOD_FLAG_BSN_SEND_IDLE_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_FLOW_MOD_FLAG_BSN_SEND_IDLE_BY_VERSION(version))
#define OF_FLOW_MOD_FLAG_BSN_SEND_IDLE_GENERIC 161

/*
 * Defines for OF_FLOW_MOD_FLAG_CHECK_OVERLAP
 * Original name OFPFF_CHECK_OVERLAP
 */
#define OF_FLOW_MOD_FLAG_CHECK_OVERLAP_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_FLOW_MOD_FLAG_CHECK_OVERLAP (0x2)
#define OF_FLOW_MOD_FLAG_CHECK_OVERLAP_BY_VERSION(version) (0x2)

#define OF_FLOW_MOD_FLAG_CHECK_OVERLAP_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_FLOW_MOD_FLAG_CHECK_OVERLAP_BY_VERSION(version))
#define OF_FLOW_MOD_FLAG_CHECK_OVERLAP_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_FLOW_MOD_FLAG_CHECK_OVERLAP_BY_VERSION(version))
#define OF_FLOW_MOD_FLAG_CHECK_OVERLAP_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_FLOW_MOD_FLAG_CHECK_OVERLAP_BY_VERSION(version))
#define OF_FLOW_MOD_FLAG_CHECK_OVERLAP_GENERIC 162

/*
 * Defines for OF_FLOW_MOD_FLAG_EMERG
 * Original name OFPFF_EMERG
 */
#define OF_FLOW_MOD_FLAG_EMERG_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_FLOW_MOD_FLAG_EMERG (0x4)
#define OF_FLOW_MOD_FLAG_EMERG_BY_VERSION(version) (0x4)

#define OF_FLOW_MOD_FLAG_EMERG_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_FLOW_MOD_FLAG_EMERG_BY_VERSION(version))
#define OF_FLOW_MOD_FLAG_EMERG_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_FLOW_MOD_FLAG_EMERG_BY_VERSION(version))
#define OF_FLOW_MOD_FLAG_EMERG_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_FLOW_MOD_FLAG_EMERG_BY_VERSION(version))
#define OF_FLOW_MOD_FLAG_EMERG_GENERIC 163

/*
 * Defines for OF_FLOW_MOD_FLAG_NO_BYT_COUNTS
 * Original name OFPFF_NO_BYT_COUNTS
 */
#define OF_FLOW_MOD_FLAG_NO_BYT_COUNTS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_FLOW_MOD_FLAG_NO_BYT_COUNTS (0x10)
#define OF_FLOW_MOD_FLAG_NO_BYT_COUNTS_BY_VERSION(version) (0x10)

#define OF_FLOW_MOD_FLAG_NO_BYT_COUNTS_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_FLOW_MOD_FLAG_NO_BYT_COUNTS_BY_VERSION(version))
#define OF_FLOW_MOD_FLAG_NO_BYT_COUNTS_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_FLOW_MOD_FLAG_NO_BYT_COUNTS_BY_VERSION(version))
#define OF_FLOW_MOD_FLAG_NO_BYT_COUNTS_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_FLOW_MOD_FLAG_NO_BYT_COUNTS_BY_VERSION(version))
#define OF_FLOW_MOD_FLAG_NO_BYT_COUNTS_GENERIC 164

/*
 * Defines for OF_FLOW_MOD_FLAG_NO_PKT_COUNTS
 * Original name OFPFF_NO_PKT_COUNTS
 */
#define OF_FLOW_MOD_FLAG_NO_PKT_COUNTS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_FLOW_MOD_FLAG_NO_PKT_COUNTS (0x8)
#define OF_FLOW_MOD_FLAG_NO_PKT_COUNTS_BY_VERSION(version) (0x8)

#define OF_FLOW_MOD_FLAG_NO_PKT_COUNTS_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_FLOW_MOD_FLAG_NO_PKT_COUNTS_BY_VERSION(version))
#define OF_FLOW_MOD_FLAG_NO_PKT_COUNTS_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_FLOW_MOD_FLAG_NO_PKT_COUNTS_BY_VERSION(version))
#define OF_FLOW_MOD_FLAG_NO_PKT_COUNTS_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_FLOW_MOD_FLAG_NO_PKT_COUNTS_BY_VERSION(version))
#define OF_FLOW_MOD_FLAG_NO_PKT_COUNTS_GENERIC 165

/*
 * Defines for OF_FLOW_MOD_FLAG_RESET_COUNTS
 * Original name OFPFF_RESET_COUNTS
 */
#define OF_FLOW_MOD_FLAG_RESET_COUNTS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_FLOW_MOD_FLAG_RESET_COUNTS (0x4)
#define OF_FLOW_MOD_FLAG_RESET_COUNTS_BY_VERSION(version) (0x4)

#define OF_FLOW_MOD_FLAG_RESET_COUNTS_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_FLOW_MOD_FLAG_RESET_COUNTS_BY_VERSION(version))
#define OF_FLOW_MOD_FLAG_RESET_COUNTS_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_FLOW_MOD_FLAG_RESET_COUNTS_BY_VERSION(version))
#define OF_FLOW_MOD_FLAG_RESET_COUNTS_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_FLOW_MOD_FLAG_RESET_COUNTS_BY_VERSION(version))
#define OF_FLOW_MOD_FLAG_RESET_COUNTS_GENERIC 166

/*
 * Defines for OF_FLOW_MOD_FLAG_SEND_FLOW_REM
 * Original name OFPFF_SEND_FLOW_REM
 */
#define OF_FLOW_MOD_FLAG_SEND_FLOW_REM_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_FLOW_MOD_FLAG_SEND_FLOW_REM (0x1)
#define OF_FLOW_MOD_FLAG_SEND_FLOW_REM_BY_VERSION(version) (0x1)

#define OF_FLOW_MOD_FLAG_SEND_FLOW_REM_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_FLOW_MOD_FLAG_SEND_FLOW_REM_BY_VERSION(version))
#define OF_FLOW_MOD_FLAG_SEND_FLOW_REM_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_FLOW_MOD_FLAG_SEND_FLOW_REM_BY_VERSION(version))
#define OF_FLOW_MOD_FLAG_SEND_FLOW_REM_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_FLOW_MOD_FLAG_SEND_FLOW_REM_BY_VERSION(version))
#define OF_FLOW_MOD_FLAG_SEND_FLOW_REM_GENERIC 167

/****************************************************************
 * Identifiers from ofp_flow_removed_reason
 *****************************************************************/

/*
 * Defines for OF_FLOW_REMOVED_REASON_DELETE
 * Original name OFPRR_DELETE
 */
#define OF_FLOW_REMOVED_REASON_DELETE_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_FLOW_REMOVED_REASON_DELETE (0x2)
#define OF_FLOW_REMOVED_REASON_DELETE_BY_VERSION(version) (0x2)
#define OF_FLOW_REMOVED_REASON_DELETE_GENERIC 168

/*
 * Defines for OF_FLOW_REMOVED_REASON_GROUP_DELETE
 * Original name OFPRR_GROUP_DELETE
 */
#define OF_FLOW_REMOVED_REASON_GROUP_DELETE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_FLOW_REMOVED_REASON_GROUP_DELETE (0x3)
#define OF_FLOW_REMOVED_REASON_GROUP_DELETE_BY_VERSION(version) (0x3)
#define OF_FLOW_REMOVED_REASON_GROUP_DELETE_GENERIC 169

/*
 * Defines for OF_FLOW_REMOVED_REASON_HARD_TIMEOUT
 * Original name OFPRR_HARD_TIMEOUT
 */
#define OF_FLOW_REMOVED_REASON_HARD_TIMEOUT_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_FLOW_REMOVED_REASON_HARD_TIMEOUT (0x1)
#define OF_FLOW_REMOVED_REASON_HARD_TIMEOUT_BY_VERSION(version) (0x1)
#define OF_FLOW_REMOVED_REASON_HARD_TIMEOUT_GENERIC 170

/*
 * Defines for OF_FLOW_REMOVED_REASON_IDLE_TIMEOUT
 * Original name OFPRR_IDLE_TIMEOUT
 */
#define OF_FLOW_REMOVED_REASON_IDLE_TIMEOUT_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_FLOW_REMOVED_REASON_IDLE_TIMEOUT (0x0)
#define OF_FLOW_REMOVED_REASON_IDLE_TIMEOUT_BY_VERSION(version) (0x0)
#define OF_FLOW_REMOVED_REASON_IDLE_TIMEOUT_GENERIC 171

/****************************************************************
 * Identifiers from ofp_flow_wildcards
 *****************************************************************/

/*
 * Defines for OF_FLOW_WC_V1_ALL
 * Original name OFPFW_ALL
 */
#define OF_FLOW_WC_V1_ALL_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1))
#define OF_FLOW_WC_V1_ALL_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x3fffff, 0x3ff, 0x0, 0x0)
#define OF_FLOW_WC_V1_ALL_GENERIC 172

/*
 * Defines for OF_FLOW_WC_V1_DL_DST
 * Original name OFPFW_DL_DST
 */
#define OF_FLOW_WC_V1_DL_DST_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_FLOW_WC_V1_DL_DST (0x8)
#define OF_FLOW_WC_V1_DL_DST_BY_VERSION(version) (0x8)
#define OF_FLOW_WC_V1_DL_DST_GENERIC 173

/*
 * Defines for OF_FLOW_WC_V1_DL_SRC
 * Original name OFPFW_DL_SRC
 */
#define OF_FLOW_WC_V1_DL_SRC_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_FLOW_WC_V1_DL_SRC (0x4)
#define OF_FLOW_WC_V1_DL_SRC_BY_VERSION(version) (0x4)
#define OF_FLOW_WC_V1_DL_SRC_GENERIC 174

/*
 * Defines for OF_FLOW_WC_V1_DL_TYPE
 * Original name OFPFW_DL_TYPE
 */
#define OF_FLOW_WC_V1_DL_TYPE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1))
#define OF_FLOW_WC_V1_DL_TYPE_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x10, 0x8, 0x0, 0x0)
#define OF_FLOW_WC_V1_DL_TYPE_GENERIC 175

/*
 * Defines for OF_FLOW_WC_V1_DL_VLAN
 * Original name OFPFW_DL_VLAN
 */
#define OF_FLOW_WC_V1_DL_VLAN_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1))
#define OF_FLOW_WC_V1_DL_VLAN (0x2)
#define OF_FLOW_WC_V1_DL_VLAN_BY_VERSION(version) (0x2)
#define OF_FLOW_WC_V1_DL_VLAN_GENERIC 176

/*
 * Defines for OF_FLOW_WC_V1_DL_VLAN_PCP
 * Original name OFPFW_DL_VLAN_PCP
 */
#define OF_FLOW_WC_V1_DL_VLAN_PCP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1))
#define OF_FLOW_WC_V1_DL_VLAN_PCP_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x100000, 0x4, 0x0, 0x0)
#define OF_FLOW_WC_V1_DL_VLAN_PCP_GENERIC 177

/*
 * Defines for OF_FLOW_WC_V1_IN_PORT
 * Original name OFPFW_IN_PORT
 */
#define OF_FLOW_WC_V1_IN_PORT_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1))
#define OF_FLOW_WC_V1_IN_PORT (0x1)
#define OF_FLOW_WC_V1_IN_PORT_BY_VERSION(version) (0x1)
#define OF_FLOW_WC_V1_IN_PORT_GENERIC 178

/*
 * Defines for OF_FLOW_WC_V1_MPLS_LABEL
 * Original name OFPFW_MPLS_LABEL
 */
#define OF_FLOW_WC_V1_MPLS_LABEL_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1))
#define OF_FLOW_WC_V1_MPLS_LABEL (0x100)
#define OF_FLOW_WC_V1_MPLS_LABEL_BY_VERSION(version) (0x100)
#define OF_FLOW_WC_V1_MPLS_LABEL_GENERIC 179

/*
 * Defines for OF_FLOW_WC_V1_MPLS_TC
 * Original name OFPFW_MPLS_TC
 */
#define OF_FLOW_WC_V1_MPLS_TC_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1))
#define OF_FLOW_WC_V1_MPLS_TC (0x200)
#define OF_FLOW_WC_V1_MPLS_TC_BY_VERSION(version) (0x200)
#define OF_FLOW_WC_V1_MPLS_TC_GENERIC 180

/*
 * Defines for OF_FLOW_WC_V1_NW_DST_ALL
 * Original name OFPFW_NW_DST_ALL
 */
#define OF_FLOW_WC_V1_NW_DST_ALL_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_FLOW_WC_V1_NW_DST_ALL (0x80000)
#define OF_FLOW_WC_V1_NW_DST_ALL_BY_VERSION(version) (0x80000)
#define OF_FLOW_WC_V1_NW_DST_ALL_GENERIC 181

/*
 * Defines for OF_FLOW_WC_V1_NW_DST_BITS
 * Original name OFPFW_NW_DST_BITS
 */
#define OF_FLOW_WC_V1_NW_DST_BITS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_FLOW_WC_V1_NW_DST_BITS (0x6)
#define OF_FLOW_WC_V1_NW_DST_BITS_BY_VERSION(version) (0x6)
#define OF_FLOW_WC_V1_NW_DST_BITS_GENERIC 182

/*
 * Defines for OF_FLOW_WC_V1_NW_DST_MASK
 * Original name OFPFW_NW_DST_MASK
 */
#define OF_FLOW_WC_V1_NW_DST_MASK_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_FLOW_WC_V1_NW_DST_MASK (0xfc000)
#define OF_FLOW_WC_V1_NW_DST_MASK_BY_VERSION(version) (0xfc000)
#define OF_FLOW_WC_V1_NW_DST_MASK_GENERIC 183

/*
 * Defines for OF_FLOW_WC_V1_NW_DST_SHIFT
 * Original name OFPFW_NW_DST_SHIFT
 */
#define OF_FLOW_WC_V1_NW_DST_SHIFT_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_FLOW_WC_V1_NW_DST_SHIFT (0xe)
#define OF_FLOW_WC_V1_NW_DST_SHIFT_BY_VERSION(version) (0xe)
#define OF_FLOW_WC_V1_NW_DST_SHIFT_GENERIC 184

/*
 * Defines for OF_FLOW_WC_V1_NW_PROTO
 * Original name OFPFW_NW_PROTO
 */
#define OF_FLOW_WC_V1_NW_PROTO_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1))
#define OF_FLOW_WC_V1_NW_PROTO (0x20)
#define OF_FLOW_WC_V1_NW_PROTO_BY_VERSION(version) (0x20)
#define OF_FLOW_WC_V1_NW_PROTO_GENERIC 185

/*
 * Defines for OF_FLOW_WC_V1_NW_SRC_ALL
 * Original name OFPFW_NW_SRC_ALL
 */
#define OF_FLOW_WC_V1_NW_SRC_ALL_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_FLOW_WC_V1_NW_SRC_ALL (0x2000)
#define OF_FLOW_WC_V1_NW_SRC_ALL_BY_VERSION(version) (0x2000)
#define OF_FLOW_WC_V1_NW_SRC_ALL_GENERIC 186

/*
 * Defines for OF_FLOW_WC_V1_NW_SRC_BITS
 * Original name OFPFW_NW_SRC_BITS
 */
#define OF_FLOW_WC_V1_NW_SRC_BITS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_FLOW_WC_V1_NW_SRC_BITS (0x6)
#define OF_FLOW_WC_V1_NW_SRC_BITS_BY_VERSION(version) (0x6)
#define OF_FLOW_WC_V1_NW_SRC_BITS_GENERIC 187

/*
 * Defines for OF_FLOW_WC_V1_NW_SRC_MASK
 * Original name OFPFW_NW_SRC_MASK
 */
#define OF_FLOW_WC_V1_NW_SRC_MASK_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_FLOW_WC_V1_NW_SRC_MASK (0x3f00)
#define OF_FLOW_WC_V1_NW_SRC_MASK_BY_VERSION(version) (0x3f00)
#define OF_FLOW_WC_V1_NW_SRC_MASK_GENERIC 188

/*
 * Defines for OF_FLOW_WC_V1_NW_SRC_SHIFT
 * Original name OFPFW_NW_SRC_SHIFT
 */
#define OF_FLOW_WC_V1_NW_SRC_SHIFT_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_FLOW_WC_V1_NW_SRC_SHIFT (0x8)
#define OF_FLOW_WC_V1_NW_SRC_SHIFT_BY_VERSION(version) (0x8)
#define OF_FLOW_WC_V1_NW_SRC_SHIFT_GENERIC 189

/*
 * Defines for OF_FLOW_WC_V1_NW_TOS
 * Original name OFPFW_NW_TOS
 */
#define OF_FLOW_WC_V1_NW_TOS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1))
#define OF_FLOW_WC_V1_NW_TOS_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x200000, 0x10, 0x0, 0x0)
#define OF_FLOW_WC_V1_NW_TOS_GENERIC 190

/*
 * Defines for OF_FLOW_WC_V1_TP_DST
 * Original name OFPFW_TP_DST
 */
#define OF_FLOW_WC_V1_TP_DST_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1))
#define OF_FLOW_WC_V1_TP_DST (0x80)
#define OF_FLOW_WC_V1_TP_DST_BY_VERSION(version) (0x80)
#define OF_FLOW_WC_V1_TP_DST_GENERIC 191

/*
 * Defines for OF_FLOW_WC_V1_TP_SRC
 * Original name OFPFW_TP_SRC
 */
#define OF_FLOW_WC_V1_TP_SRC_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1))
#define OF_FLOW_WC_V1_TP_SRC (0x40)
#define OF_FLOW_WC_V1_TP_SRC_BY_VERSION(version) (0x40)
#define OF_FLOW_WC_V1_TP_SRC_GENERIC 192

/****************************************************************
 * Identifiers from ofp_group
 *****************************************************************/

/*
 * Defines for OF_GROUP_ALL
 * Original name OFPG_ALL
 */
#define OF_GROUP_ALL_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_GROUP_ALL (0xfffffffc)
#define OF_GROUP_ALL_BY_VERSION(version) (0xfffffffc)
#define OF_GROUP_ALL_GENERIC 193

/*
 * Defines for OF_GROUP_ANY
 * Original name OFPG_ANY
 */
#define OF_GROUP_ANY_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_GROUP_ANY (0xffffffff)
#define OF_GROUP_ANY_BY_VERSION(version) (0xffffffff)
#define OF_GROUP_ANY_GENERIC 194

/*
 * Defines for OF_GROUP_MAX
 * Original name OFPG_MAX
 */
#define OF_GROUP_MAX_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_GROUP_MAX (0xffffff00)
#define OF_GROUP_MAX_BY_VERSION(version) (0xffffff00)
#define OF_GROUP_MAX_GENERIC 195

/****************************************************************
 * Identifiers from ofp_group_capabilities
 *****************************************************************/

/*
 * Defines for OF_GROUP_CAPABILITIES_CHAINING
 * Original name OFPGFC_CHAINING
 */
#define OF_GROUP_CAPABILITIES_CHAINING_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_GROUP_CAPABILITIES_CHAINING (0x4)
#define OF_GROUP_CAPABILITIES_CHAINING_BY_VERSION(version) (0x4)
#define OF_GROUP_CAPABILITIES_CHAINING_GENERIC 196

/*
 * Defines for OF_GROUP_CAPABILITIES_CHAINING_CHECKS
 * Original name OFPGFC_CHAINING_CHECKS
 */
#define OF_GROUP_CAPABILITIES_CHAINING_CHECKS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_GROUP_CAPABILITIES_CHAINING_CHECKS (0x8)
#define OF_GROUP_CAPABILITIES_CHAINING_CHECKS_BY_VERSION(version) (0x8)
#define OF_GROUP_CAPABILITIES_CHAINING_CHECKS_GENERIC 197

/*
 * Defines for OF_GROUP_CAPABILITIES_SELECT_LIVENESS
 * Original name OFPGFC_SELECT_LIVENESS
 */
#define OF_GROUP_CAPABILITIES_SELECT_LIVENESS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_GROUP_CAPABILITIES_SELECT_LIVENESS (0x2)
#define OF_GROUP_CAPABILITIES_SELECT_LIVENESS_BY_VERSION(version) (0x2)
#define OF_GROUP_CAPABILITIES_SELECT_LIVENESS_GENERIC 198

/*
 * Defines for OF_GROUP_CAPABILITIES_SELECT_WEIGHT
 * Original name OFPGFC_SELECT_WEIGHT
 */
#define OF_GROUP_CAPABILITIES_SELECT_WEIGHT_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_GROUP_CAPABILITIES_SELECT_WEIGHT (0x1)
#define OF_GROUP_CAPABILITIES_SELECT_WEIGHT_BY_VERSION(version) (0x1)
#define OF_GROUP_CAPABILITIES_SELECT_WEIGHT_GENERIC 199

/****************************************************************
 * Identifiers from ofp_group_mod_command
 *****************************************************************/

/*
 * Defines for OF_GROUP_ADD
 * Original name OFPGC_ADD
 */
#define OF_GROUP_ADD_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_GROUP_ADD (0x0)
#define OF_GROUP_ADD_BY_VERSION(version) (0x0)
#define OF_GROUP_ADD_GENERIC 200

/*
 * Defines for OF_GROUP_DELETE
 * Original name OFPGC_DELETE
 */
#define OF_GROUP_DELETE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_GROUP_DELETE (0x2)
#define OF_GROUP_DELETE_BY_VERSION(version) (0x2)
#define OF_GROUP_DELETE_GENERIC 201

/*
 * Defines for OF_GROUP_MODIFY
 * Original name OFPGC_MODIFY
 */
#define OF_GROUP_MODIFY_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_GROUP_MODIFY (0x1)
#define OF_GROUP_MODIFY_BY_VERSION(version) (0x1)
#define OF_GROUP_MODIFY_GENERIC 202

/****************************************************************
 * Identifiers from ofp_group_mod_failed_code
 *****************************************************************/

/*
 * Defines for OF_GROUP_MOD_FAILED_BAD_BUCKET
 * Original name OFPGMFC_BAD_BUCKET
 */
#define OF_GROUP_MOD_FAILED_BAD_BUCKET_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_GROUP_MOD_FAILED_BAD_BUCKET (0xc)
#define OF_GROUP_MOD_FAILED_BAD_BUCKET_BY_VERSION(version) (0xc)
#define OF_GROUP_MOD_FAILED_BAD_BUCKET_GENERIC 203

/*
 * Defines for OF_GROUP_MOD_FAILED_BAD_COMMAND
 * Original name OFPGMFC_BAD_COMMAND
 */
#define OF_GROUP_MOD_FAILED_BAD_COMMAND_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_GROUP_MOD_FAILED_BAD_COMMAND (0xb)
#define OF_GROUP_MOD_FAILED_BAD_COMMAND_BY_VERSION(version) (0xb)
#define OF_GROUP_MOD_FAILED_BAD_COMMAND_GENERIC 204

/*
 * Defines for OF_GROUP_MOD_FAILED_BAD_TYPE
 * Original name OFPGMFC_BAD_TYPE
 */
#define OF_GROUP_MOD_FAILED_BAD_TYPE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_GROUP_MOD_FAILED_BAD_TYPE (0xa)
#define OF_GROUP_MOD_FAILED_BAD_TYPE_BY_VERSION(version) (0xa)
#define OF_GROUP_MOD_FAILED_BAD_TYPE_GENERIC 205

/*
 * Defines for OF_GROUP_MOD_FAILED_BAD_WATCH
 * Original name OFPGMFC_BAD_WATCH
 */
#define OF_GROUP_MOD_FAILED_BAD_WATCH_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_GROUP_MOD_FAILED_BAD_WATCH (0xd)
#define OF_GROUP_MOD_FAILED_BAD_WATCH_BY_VERSION(version) (0xd)
#define OF_GROUP_MOD_FAILED_BAD_WATCH_GENERIC 206

/*
 * Defines for OF_GROUP_MOD_FAILED_CHAINED_GROUP
 * Original name OFPGMFC_CHAINED_GROUP
 */
#define OF_GROUP_MOD_FAILED_CHAINED_GROUP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_GROUP_MOD_FAILED_CHAINED_GROUP (0x9)
#define OF_GROUP_MOD_FAILED_CHAINED_GROUP_BY_VERSION(version) (0x9)
#define OF_GROUP_MOD_FAILED_CHAINED_GROUP_GENERIC 207

/*
 * Defines for OF_GROUP_MOD_FAILED_CHAINING_UNSUPPORTED
 * Original name OFPGMFC_CHAINING_UNSUPPORTED
 */
#define OF_GROUP_MOD_FAILED_CHAINING_UNSUPPORTED_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_GROUP_MOD_FAILED_CHAINING_UNSUPPORTED (0x5)
#define OF_GROUP_MOD_FAILED_CHAINING_UNSUPPORTED_BY_VERSION(version) (0x5)
#define OF_GROUP_MOD_FAILED_CHAINING_UNSUPPORTED_GENERIC 208

/*
 * Defines for OF_GROUP_MOD_FAILED_EPERM
 * Original name OFPGMFC_EPERM
 */
#define OF_GROUP_MOD_FAILED_EPERM_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_GROUP_MOD_FAILED_EPERM (0xe)
#define OF_GROUP_MOD_FAILED_EPERM_BY_VERSION(version) (0xe)
#define OF_GROUP_MOD_FAILED_EPERM_GENERIC 209

/*
 * Defines for OF_GROUP_MOD_FAILED_GROUP_EXISTS
 * Original name OFPGMFC_GROUP_EXISTS
 */
#define OF_GROUP_MOD_FAILED_GROUP_EXISTS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_GROUP_MOD_FAILED_GROUP_EXISTS (0x0)
#define OF_GROUP_MOD_FAILED_GROUP_EXISTS_BY_VERSION(version) (0x0)
#define OF_GROUP_MOD_FAILED_GROUP_EXISTS_GENERIC 210

/*
 * Defines for OF_GROUP_MOD_FAILED_INVALID_GROUP
 * Original name OFPGMFC_INVALID_GROUP
 */
#define OF_GROUP_MOD_FAILED_INVALID_GROUP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_GROUP_MOD_FAILED_INVALID_GROUP (0x1)
#define OF_GROUP_MOD_FAILED_INVALID_GROUP_BY_VERSION(version) (0x1)
#define OF_GROUP_MOD_FAILED_INVALID_GROUP_GENERIC 211

/*
 * Defines for OF_GROUP_MOD_FAILED_LOOP
 * Original name OFPGMFC_LOOP
 */
#define OF_GROUP_MOD_FAILED_LOOP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_GROUP_MOD_FAILED_LOOP (0x7)
#define OF_GROUP_MOD_FAILED_LOOP_BY_VERSION(version) (0x7)
#define OF_GROUP_MOD_FAILED_LOOP_GENERIC 212

/*
 * Defines for OF_GROUP_MOD_FAILED_OUT_OF_BUCKETS
 * Original name OFPGMFC_OUT_OF_BUCKETS
 */
#define OF_GROUP_MOD_FAILED_OUT_OF_BUCKETS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_GROUP_MOD_FAILED_OUT_OF_BUCKETS (0x4)
#define OF_GROUP_MOD_FAILED_OUT_OF_BUCKETS_BY_VERSION(version) (0x4)
#define OF_GROUP_MOD_FAILED_OUT_OF_BUCKETS_GENERIC 213

/*
 * Defines for OF_GROUP_MOD_FAILED_OUT_OF_GROUPS
 * Original name OFPGMFC_OUT_OF_GROUPS
 */
#define OF_GROUP_MOD_FAILED_OUT_OF_GROUPS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_GROUP_MOD_FAILED_OUT_OF_GROUPS (0x3)
#define OF_GROUP_MOD_FAILED_OUT_OF_GROUPS_BY_VERSION(version) (0x3)
#define OF_GROUP_MOD_FAILED_OUT_OF_GROUPS_GENERIC 214

/*
 * Defines for OF_GROUP_MOD_FAILED_UNKNOWN_GROUP
 * Original name OFPGMFC_UNKNOWN_GROUP
 */
#define OF_GROUP_MOD_FAILED_UNKNOWN_GROUP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_GROUP_MOD_FAILED_UNKNOWN_GROUP (0x8)
#define OF_GROUP_MOD_FAILED_UNKNOWN_GROUP_BY_VERSION(version) (0x8)
#define OF_GROUP_MOD_FAILED_UNKNOWN_GROUP_GENERIC 215

/*
 * Defines for OF_GROUP_MOD_FAILED_WATCH_UNSUPPORTED
 * Original name OFPGMFC_WATCH_UNSUPPORTED
 */
#define OF_GROUP_MOD_FAILED_WATCH_UNSUPPORTED_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_GROUP_MOD_FAILED_WATCH_UNSUPPORTED (0x6)
#define OF_GROUP_MOD_FAILED_WATCH_UNSUPPORTED_BY_VERSION(version) (0x6)
#define OF_GROUP_MOD_FAILED_WATCH_UNSUPPORTED_GENERIC 216

/*
 * Defines for OF_GROUP_MOD_FAILED_WEIGHT_UNSUPPORTED
 * Original name OFPGMFC_WEIGHT_UNSUPPORTED
 */
#define OF_GROUP_MOD_FAILED_WEIGHT_UNSUPPORTED_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_GROUP_MOD_FAILED_WEIGHT_UNSUPPORTED (0x2)
#define OF_GROUP_MOD_FAILED_WEIGHT_UNSUPPORTED_BY_VERSION(version) (0x2)
#define OF_GROUP_MOD_FAILED_WEIGHT_UNSUPPORTED_GENERIC 217

/****************************************************************
 * Identifiers from ofp_group_type
 *****************************************************************/

/*
 * Defines for OF_GROUP_TYPE_ALL
 * Original name OFPGT_ALL
 */
#define OF_GROUP_TYPE_ALL_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_GROUP_TYPE_ALL (0x0)
#define OF_GROUP_TYPE_ALL_BY_VERSION(version) (0x0)
#define OF_GROUP_TYPE_ALL_GENERIC 218

/*
 * Defines for OF_GROUP_TYPE_FF
 * Original name OFPGT_FF
 */
#define OF_GROUP_TYPE_FF_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_GROUP_TYPE_FF (0x3)
#define OF_GROUP_TYPE_FF_BY_VERSION(version) (0x3)
#define OF_GROUP_TYPE_FF_GENERIC 219

/*
 * Defines for OF_GROUP_TYPE_INDIRECT
 * Original name OFPGT_INDIRECT
 */
#define OF_GROUP_TYPE_INDIRECT_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_GROUP_TYPE_INDIRECT (0x2)
#define OF_GROUP_TYPE_INDIRECT_BY_VERSION(version) (0x2)
#define OF_GROUP_TYPE_INDIRECT_GENERIC 220

/*
 * Defines for OF_GROUP_TYPE_SELECT
 * Original name OFPGT_SELECT
 */
#define OF_GROUP_TYPE_SELECT_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_GROUP_TYPE_SELECT (0x1)
#define OF_GROUP_TYPE_SELECT_BY_VERSION(version) (0x1)
#define OF_GROUP_TYPE_SELECT_GENERIC 221

/****************************************************************
 * Identifiers from ofp_hello_elem_type
 *****************************************************************/

/*
 * Defines for OF_HELLO_ELEM_TYPE__VERSIONBITMAP
 * Original name OFPHET_VERSIONBITMAP
 */
#define OF_HELLO_ELEM_TYPE__VERSIONBITMAP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_HELLO_ELEM_TYPE__VERSIONBITMAP (0x1)
#define OF_HELLO_ELEM_TYPE__VERSIONBITMAP_BY_VERSION(version) (0x1)
#define OF_HELLO_ELEM_TYPE__VERSIONBITMAP_GENERIC 222

/****************************************************************
 * Identifiers from ofp_hello_failed_code
 *****************************************************************/

/*
 * Defines for OF_HELLO_FAILED_EPERM
 * Original name OFPHFC_EPERM
 */
#define OF_HELLO_FAILED_EPERM_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_HELLO_FAILED_EPERM (0x1)
#define OF_HELLO_FAILED_EPERM_BY_VERSION(version) (0x1)
#define OF_HELLO_FAILED_EPERM_GENERIC 223

/*
 * Defines for OF_HELLO_FAILED_INCOMPATIBLE
 * Original name OFPHFC_INCOMPATIBLE
 */
#define OF_HELLO_FAILED_INCOMPATIBLE_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_HELLO_FAILED_INCOMPATIBLE (0x0)
#define OF_HELLO_FAILED_INCOMPATIBLE_BY_VERSION(version) (0x0)
#define OF_HELLO_FAILED_INCOMPATIBLE_GENERIC 224

/****************************************************************
 * Identifiers from ofp_instruction_type
 *****************************************************************/

/*
 * Defines for OF_INSTRUCTION_TYPE_APPLY_ACTIONS
 * Original name OFPIT_APPLY_ACTIONS
 */
#define OF_INSTRUCTION_TYPE_APPLY_ACTIONS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_INSTRUCTION_TYPE_APPLY_ACTIONS (0x4)
#define OF_INSTRUCTION_TYPE_APPLY_ACTIONS_BY_VERSION(version) (0x4)
#define OF_INSTRUCTION_TYPE_APPLY_ACTIONS_GENERIC 225

/*
 * Defines for OF_INSTRUCTION_TYPE_CLEAR_ACTIONS
 * Original name OFPIT_CLEAR_ACTIONS
 */
#define OF_INSTRUCTION_TYPE_CLEAR_ACTIONS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_INSTRUCTION_TYPE_CLEAR_ACTIONS (0x5)
#define OF_INSTRUCTION_TYPE_CLEAR_ACTIONS_BY_VERSION(version) (0x5)
#define OF_INSTRUCTION_TYPE_CLEAR_ACTIONS_GENERIC 226

/*
 * Defines for OF_INSTRUCTION_TYPE_EXPERIMENTER
 * Original name OFPIT_EXPERIMENTER
 */
#define OF_INSTRUCTION_TYPE_EXPERIMENTER_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_INSTRUCTION_TYPE_EXPERIMENTER (0xffff)
#define OF_INSTRUCTION_TYPE_EXPERIMENTER_BY_VERSION(version) (0xffff)
#define OF_INSTRUCTION_TYPE_EXPERIMENTER_GENERIC 227

/*
 * Defines for OF_INSTRUCTION_TYPE_GOTO_TABLE
 * Original name OFPIT_GOTO_TABLE
 */
#define OF_INSTRUCTION_TYPE_GOTO_TABLE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_INSTRUCTION_TYPE_GOTO_TABLE (0x1)
#define OF_INSTRUCTION_TYPE_GOTO_TABLE_BY_VERSION(version) (0x1)
#define OF_INSTRUCTION_TYPE_GOTO_TABLE_GENERIC 228

/*
 * Defines for OF_INSTRUCTION_TYPE_METER
 * Original name OFPIT_METER
 */
#define OF_INSTRUCTION_TYPE_METER_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_INSTRUCTION_TYPE_METER (0x6)
#define OF_INSTRUCTION_TYPE_METER_BY_VERSION(version) (0x6)
#define OF_INSTRUCTION_TYPE_METER_GENERIC 229

/*
 * Defines for OF_INSTRUCTION_TYPE_WRITE_ACTIONS
 * Original name OFPIT_WRITE_ACTIONS
 */
#define OF_INSTRUCTION_TYPE_WRITE_ACTIONS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_INSTRUCTION_TYPE_WRITE_ACTIONS (0x3)
#define OF_INSTRUCTION_TYPE_WRITE_ACTIONS_BY_VERSION(version) (0x3)
#define OF_INSTRUCTION_TYPE_WRITE_ACTIONS_GENERIC 230

/*
 * Defines for OF_INSTRUCTION_TYPE_WRITE_METADATA
 * Original name OFPIT_WRITE_METADATA
 */
#define OF_INSTRUCTION_TYPE_WRITE_METADATA_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_INSTRUCTION_TYPE_WRITE_METADATA (0x2)
#define OF_INSTRUCTION_TYPE_WRITE_METADATA_BY_VERSION(version) (0x2)
#define OF_INSTRUCTION_TYPE_WRITE_METADATA_GENERIC 231

/****************************************************************
 * Identifiers from ofp_ipv6exthdr_flags
 *****************************************************************/

/*
 * Defines for OF_IPV6_EXT_HDR_FLAG_AUTH
 * Original name OFPIEH_AUTH
 */
#define OF_IPV6_EXT_HDR_FLAG_AUTH_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_IPV6_EXT_HDR_FLAG_AUTH (0x4)
#define OF_IPV6_EXT_HDR_FLAG_AUTH_BY_VERSION(version) (0x4)

#define OF_IPV6_EXT_HDR_FLAG_AUTH_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_IPV6_EXT_HDR_FLAG_AUTH_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_AUTH_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_IPV6_EXT_HDR_FLAG_AUTH_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_AUTH_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_IPV6_EXT_HDR_FLAG_AUTH_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_AUTH_GENERIC 232

/*
 * Defines for OF_IPV6_EXT_HDR_FLAG_DEST
 * Original name OFPIEH_DEST
 */
#define OF_IPV6_EXT_HDR_FLAG_DEST_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_IPV6_EXT_HDR_FLAG_DEST (0x8)
#define OF_IPV6_EXT_HDR_FLAG_DEST_BY_VERSION(version) (0x8)

#define OF_IPV6_EXT_HDR_FLAG_DEST_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_IPV6_EXT_HDR_FLAG_DEST_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_DEST_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_IPV6_EXT_HDR_FLAG_DEST_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_DEST_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_IPV6_EXT_HDR_FLAG_DEST_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_DEST_GENERIC 233

/*
 * Defines for OF_IPV6_EXT_HDR_FLAG_ESP
 * Original name OFPIEH_ESP
 */
#define OF_IPV6_EXT_HDR_FLAG_ESP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_IPV6_EXT_HDR_FLAG_ESP (0x2)
#define OF_IPV6_EXT_HDR_FLAG_ESP_BY_VERSION(version) (0x2)

#define OF_IPV6_EXT_HDR_FLAG_ESP_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_IPV6_EXT_HDR_FLAG_ESP_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_ESP_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_IPV6_EXT_HDR_FLAG_ESP_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_ESP_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_IPV6_EXT_HDR_FLAG_ESP_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_ESP_GENERIC 234

/*
 * Defines for OF_IPV6_EXT_HDR_FLAG_FRAG
 * Original name OFPIEH_FRAG
 */
#define OF_IPV6_EXT_HDR_FLAG_FRAG_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_IPV6_EXT_HDR_FLAG_FRAG (0x10)
#define OF_IPV6_EXT_HDR_FLAG_FRAG_BY_VERSION(version) (0x10)

#define OF_IPV6_EXT_HDR_FLAG_FRAG_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_IPV6_EXT_HDR_FLAG_FRAG_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_FRAG_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_IPV6_EXT_HDR_FLAG_FRAG_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_FRAG_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_IPV6_EXT_HDR_FLAG_FRAG_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_FRAG_GENERIC 235

/*
 * Defines for OF_IPV6_EXT_HDR_FLAG_HOP
 * Original name OFPIEH_HOP
 */
#define OF_IPV6_EXT_HDR_FLAG_HOP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_IPV6_EXT_HDR_FLAG_HOP (0x40)
#define OF_IPV6_EXT_HDR_FLAG_HOP_BY_VERSION(version) (0x40)

#define OF_IPV6_EXT_HDR_FLAG_HOP_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_IPV6_EXT_HDR_FLAG_HOP_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_HOP_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_IPV6_EXT_HDR_FLAG_HOP_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_HOP_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_IPV6_EXT_HDR_FLAG_HOP_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_HOP_GENERIC 236

/*
 * Defines for OF_IPV6_EXT_HDR_FLAG_NONEXT
 * Original name OFPIEH_NONEXT
 */
#define OF_IPV6_EXT_HDR_FLAG_NONEXT_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_IPV6_EXT_HDR_FLAG_NONEXT (0x1)
#define OF_IPV6_EXT_HDR_FLAG_NONEXT_BY_VERSION(version) (0x1)

#define OF_IPV6_EXT_HDR_FLAG_NONEXT_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_IPV6_EXT_HDR_FLAG_NONEXT_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_NONEXT_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_IPV6_EXT_HDR_FLAG_NONEXT_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_NONEXT_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_IPV6_EXT_HDR_FLAG_NONEXT_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_NONEXT_GENERIC 237

/*
 * Defines for OF_IPV6_EXT_HDR_FLAG_ROUTER
 * Original name OFPIEH_ROUTER
 */
#define OF_IPV6_EXT_HDR_FLAG_ROUTER_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_IPV6_EXT_HDR_FLAG_ROUTER (0x20)
#define OF_IPV6_EXT_HDR_FLAG_ROUTER_BY_VERSION(version) (0x20)

#define OF_IPV6_EXT_HDR_FLAG_ROUTER_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_IPV6_EXT_HDR_FLAG_ROUTER_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_ROUTER_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_IPV6_EXT_HDR_FLAG_ROUTER_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_ROUTER_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_IPV6_EXT_HDR_FLAG_ROUTER_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_ROUTER_GENERIC 238

/*
 * Defines for OF_IPV6_EXT_HDR_FLAG_UNREP
 * Original name OFPIEH_UNREP
 */
#define OF_IPV6_EXT_HDR_FLAG_UNREP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_IPV6_EXT_HDR_FLAG_UNREP (0x80)
#define OF_IPV6_EXT_HDR_FLAG_UNREP_BY_VERSION(version) (0x80)

#define OF_IPV6_EXT_HDR_FLAG_UNREP_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_IPV6_EXT_HDR_FLAG_UNREP_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_UNREP_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_IPV6_EXT_HDR_FLAG_UNREP_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_UNREP_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_IPV6_EXT_HDR_FLAG_UNREP_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_UNREP_GENERIC 239

/*
 * Defines for OF_IPV6_EXT_HDR_FLAG_UNSEQ
 * Original name OFPIEH_UNSEQ
 */
#define OF_IPV6_EXT_HDR_FLAG_UNSEQ_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_IPV6_EXT_HDR_FLAG_UNSEQ (0x100)
#define OF_IPV6_EXT_HDR_FLAG_UNSEQ_BY_VERSION(version) (0x100)

#define OF_IPV6_EXT_HDR_FLAG_UNSEQ_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_IPV6_EXT_HDR_FLAG_UNSEQ_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_UNSEQ_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_IPV6_EXT_HDR_FLAG_UNSEQ_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_UNSEQ_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_IPV6_EXT_HDR_FLAG_UNSEQ_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_UNSEQ_GENERIC 240

/****************************************************************
 * Identifiers from ofp_match_type
 *****************************************************************/

/*
 * Defines for OF_MATCH_TYPE_OXM
 * Original name OFPMT_OXM
 */
#define OF_MATCH_TYPE_OXM_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_MATCH_TYPE_OXM (0x1)
#define OF_MATCH_TYPE_OXM_BY_VERSION(version) (0x1)
#define OF_MATCH_TYPE_OXM_GENERIC 241

/*
 * Defines for OF_MATCH_TYPE_STANDARD
 * Original name OFPMT_STANDARD
 */
#define OF_MATCH_TYPE_STANDARD_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_MATCH_TYPE_STANDARD (0x0)
#define OF_MATCH_TYPE_STANDARD_BY_VERSION(version) (0x0)
#define OF_MATCH_TYPE_STANDARD_GENERIC 242

/****************************************************************
 * Identifiers from ofp_meter
 *****************************************************************/

/*
 * Defines for OF_METER_ALL
 * Original name OFPM_ALL
 */
#define OF_METER_ALL_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_METER_ALL (0xffffffff)
#define OF_METER_ALL_BY_VERSION(version) (0xffffffff)
#define OF_METER_ALL_GENERIC 243

/*
 * Defines for OF_METER_CONTROLLER
 * Original name OFPM_CONTROLLER
 */
#define OF_METER_CONTROLLER_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_METER_CONTROLLER (0xfffffffe)
#define OF_METER_CONTROLLER_BY_VERSION(version) (0xfffffffe)
#define OF_METER_CONTROLLER_GENERIC 244

/*
 * Defines for OF_METER_MAX
 * Original name OFPM_MAX
 */
#define OF_METER_MAX_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_METER_MAX (0xffff0000)
#define OF_METER_MAX_BY_VERSION(version) (0xffff0000)
#define OF_METER_MAX_GENERIC 245

/*
 * Defines for OF_METER_SLOWPATH
 * Original name OFPM_SLOWPATH
 */
#define OF_METER_SLOWPATH_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_METER_SLOWPATH (0xfffffffd)
#define OF_METER_SLOWPATH_BY_VERSION(version) (0xfffffffd)
#define OF_METER_SLOWPATH_GENERIC 246

/****************************************************************
 * Identifiers from ofp_meter_band_type
 *****************************************************************/

/*
 * Defines for OF_METER_BAND_TYPE_DROP
 * Original name OFPMBT_DROP
 */
#define OF_METER_BAND_TYPE_DROP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_METER_BAND_TYPE_DROP (0x1)
#define OF_METER_BAND_TYPE_DROP_BY_VERSION(version) (0x1)
#define OF_METER_BAND_TYPE_DROP_GENERIC 247

/*
 * Defines for OF_METER_BAND_TYPE_DSCP_REMARK
 * Original name OFPMBT_DSCP_REMARK
 */
#define OF_METER_BAND_TYPE_DSCP_REMARK_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_METER_BAND_TYPE_DSCP_REMARK (0x2)
#define OF_METER_BAND_TYPE_DSCP_REMARK_BY_VERSION(version) (0x2)
#define OF_METER_BAND_TYPE_DSCP_REMARK_GENERIC 248

/*
 * Defines for OF_METER_BAND_TYPE_EXPERIMENTER
 * Original name OFPMBT_EXPERIMENTER
 */
#define OF_METER_BAND_TYPE_EXPERIMENTER_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_METER_BAND_TYPE_EXPERIMENTER (0xffff)
#define OF_METER_BAND_TYPE_EXPERIMENTER_BY_VERSION(version) (0xffff)
#define OF_METER_BAND_TYPE_EXPERIMENTER_GENERIC 249

/****************************************************************
 * Identifiers from ofp_meter_flags
 *****************************************************************/

/*
 * Defines for OF_METER_FLAG_BURST
 * Original name OFPMF_BURST
 */
#define OF_METER_FLAG_BURST_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_METER_FLAG_BURST (0x4)
#define OF_METER_FLAG_BURST_BY_VERSION(version) (0x4)

#define OF_METER_FLAG_BURST_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_METER_FLAG_BURST_BY_VERSION(version))
#define OF_METER_FLAG_BURST_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_METER_FLAG_BURST_BY_VERSION(version))
#define OF_METER_FLAG_BURST_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_METER_FLAG_BURST_BY_VERSION(version))
#define OF_METER_FLAG_BURST_GENERIC 250

/*
 * Defines for OF_METER_FLAG_KBPS
 * Original name OFPMF_KBPS
 */
#define OF_METER_FLAG_KBPS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_METER_FLAG_KBPS (0x1)
#define OF_METER_FLAG_KBPS_BY_VERSION(version) (0x1)

#define OF_METER_FLAG_KBPS_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_METER_FLAG_KBPS_BY_VERSION(version))
#define OF_METER_FLAG_KBPS_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_METER_FLAG_KBPS_BY_VERSION(version))
#define OF_METER_FLAG_KBPS_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_METER_FLAG_KBPS_BY_VERSION(version))
#define OF_METER_FLAG_KBPS_GENERIC 251

/*
 * Defines for OF_METER_FLAG_PKTPS
 * Original name OFPMF_PKTPS
 */
#define OF_METER_FLAG_PKTPS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_METER_FLAG_PKTPS (0x2)
#define OF_METER_FLAG_PKTPS_BY_VERSION(version) (0x2)

#define OF_METER_FLAG_PKTPS_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_METER_FLAG_PKTPS_BY_VERSION(version))
#define OF_METER_FLAG_PKTPS_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_METER_FLAG_PKTPS_BY_VERSION(version))
#define OF_METER_FLAG_PKTPS_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_METER_FLAG_PKTPS_BY_VERSION(version))
#define OF_METER_FLAG_PKTPS_GENERIC 252

/*
 * Defines for OF_METER_FLAG_STATS
 * Original name OFPMF_STATS
 */
#define OF_METER_FLAG_STATS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_METER_FLAG_STATS (0x8)
#define OF_METER_FLAG_STATS_BY_VERSION(version) (0x8)

#define OF_METER_FLAG_STATS_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_METER_FLAG_STATS_BY_VERSION(version))
#define OF_METER_FLAG_STATS_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_METER_FLAG_STATS_BY_VERSION(version))
#define OF_METER_FLAG_STATS_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_METER_FLAG_STATS_BY_VERSION(version))
#define OF_METER_FLAG_STATS_GENERIC 253

/****************************************************************
 * Identifiers from ofp_meter_mod_command
 *****************************************************************/

/*
 * Defines for OF_METER_MOD_COMMAND_ADD
 * Original name OFPMC_ADD
 */
#define OF_METER_MOD_COMMAND_ADD_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_METER_MOD_COMMAND_ADD (0x0)
#define OF_METER_MOD_COMMAND_ADD_BY_VERSION(version) (0x0)
#define OF_METER_MOD_COMMAND_ADD_GENERIC 254

/*
 * Defines for OF_METER_MOD_COMMAND_DELETE
 * Original name OFPMC_DELETE
 */
#define OF_METER_MOD_COMMAND_DELETE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_METER_MOD_COMMAND_DELETE (0x2)
#define OF_METER_MOD_COMMAND_DELETE_BY_VERSION(version) (0x2)
#define OF_METER_MOD_COMMAND_DELETE_GENERIC 255

/*
 * Defines for OF_METER_MOD_COMMAND_MODIFY
 * Original name OFPMC_MODIFY
 */
#define OF_METER_MOD_COMMAND_MODIFY_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_METER_MOD_COMMAND_MODIFY (0x1)
#define OF_METER_MOD_COMMAND_MODIFY_BY_VERSION(version) (0x1)
#define OF_METER_MOD_COMMAND_MODIFY_GENERIC 256

/****************************************************************
 * Identifiers from ofp_meter_mod_failed_code
 *****************************************************************/

/*
 * Defines for OF_METER_MOD_FAILED_BAD_BAND
 * Original name OFPMMFC_BAD_BAND
 */
#define OF_METER_MOD_FAILED_BAD_BAND_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_METER_MOD_FAILED_BAD_BAND (0x8)
#define OF_METER_MOD_FAILED_BAD_BAND_BY_VERSION(version) (0x8)
#define OF_METER_MOD_FAILED_BAD_BAND_GENERIC 257

/*
 * Defines for OF_METER_MOD_FAILED_BAD_BAND_VALUE
 * Original name OFPMMFC_BAD_BAND_VALUE
 */
#define OF_METER_MOD_FAILED_BAD_BAND_VALUE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_METER_MOD_FAILED_BAD_BAND_VALUE (0x9)
#define OF_METER_MOD_FAILED_BAD_BAND_VALUE_BY_VERSION(version) (0x9)
#define OF_METER_MOD_FAILED_BAD_BAND_VALUE_GENERIC 258

/*
 * Defines for OF_METER_MOD_FAILED_BAD_BURST
 * Original name OFPMMFC_BAD_BURST
 */
#define OF_METER_MOD_FAILED_BAD_BURST_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_METER_MOD_FAILED_BAD_BURST (0x7)
#define OF_METER_MOD_FAILED_BAD_BURST_BY_VERSION(version) (0x7)
#define OF_METER_MOD_FAILED_BAD_BURST_GENERIC 259

/*
 * Defines for OF_METER_MOD_FAILED_BAD_COMMAND
 * Original name OFPMMFC_BAD_COMMAND
 */
#define OF_METER_MOD_FAILED_BAD_COMMAND_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_METER_MOD_FAILED_BAD_COMMAND (0x4)
#define OF_METER_MOD_FAILED_BAD_COMMAND_BY_VERSION(version) (0x4)
#define OF_METER_MOD_FAILED_BAD_COMMAND_GENERIC 260

/*
 * Defines for OF_METER_MOD_FAILED_BAD_FLAGS
 * Original name OFPMMFC_BAD_FLAGS
 */
#define OF_METER_MOD_FAILED_BAD_FLAGS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_METER_MOD_FAILED_BAD_FLAGS (0x5)
#define OF_METER_MOD_FAILED_BAD_FLAGS_BY_VERSION(version) (0x5)

#define OF_METER_MOD_FAILED_BAD_FLAGS_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_METER_MOD_FAILED_BAD_FLAGS_BY_VERSION(version))
#define OF_METER_MOD_FAILED_BAD_FLAGS_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_METER_MOD_FAILED_BAD_FLAGS_BY_VERSION(version))
#define OF_METER_MOD_FAILED_BAD_FLAGS_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_METER_MOD_FAILED_BAD_FLAGS_BY_VERSION(version))
#define OF_METER_MOD_FAILED_BAD_FLAGS_GENERIC 261

/*
 * Defines for OF_METER_MOD_FAILED_BAD_RATE
 * Original name OFPMMFC_BAD_RATE
 */
#define OF_METER_MOD_FAILED_BAD_RATE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_METER_MOD_FAILED_BAD_RATE (0x6)
#define OF_METER_MOD_FAILED_BAD_RATE_BY_VERSION(version) (0x6)
#define OF_METER_MOD_FAILED_BAD_RATE_GENERIC 262

/*
 * Defines for OF_METER_MOD_FAILED_INVALID_METER
 * Original name OFPMMFC_INVALID_METER
 */
#define OF_METER_MOD_FAILED_INVALID_METER_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_METER_MOD_FAILED_INVALID_METER (0x2)
#define OF_METER_MOD_FAILED_INVALID_METER_BY_VERSION(version) (0x2)
#define OF_METER_MOD_FAILED_INVALID_METER_GENERIC 263

/*
 * Defines for OF_METER_MOD_FAILED_METER_EXISTS
 * Original name OFPMMFC_METER_EXISTS
 */
#define OF_METER_MOD_FAILED_METER_EXISTS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_METER_MOD_FAILED_METER_EXISTS (0x1)
#define OF_METER_MOD_FAILED_METER_EXISTS_BY_VERSION(version) (0x1)
#define OF_METER_MOD_FAILED_METER_EXISTS_GENERIC 264

/*
 * Defines for OF_METER_MOD_FAILED_OUT_OF_BANDS
 * Original name OFPMMFC_OUT_OF_BANDS
 */
#define OF_METER_MOD_FAILED_OUT_OF_BANDS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_METER_MOD_FAILED_OUT_OF_BANDS (0xb)
#define OF_METER_MOD_FAILED_OUT_OF_BANDS_BY_VERSION(version) (0xb)
#define OF_METER_MOD_FAILED_OUT_OF_BANDS_GENERIC 265

/*
 * Defines for OF_METER_MOD_FAILED_OUT_OF_METERS
 * Original name OFPMMFC_OUT_OF_METERS
 */
#define OF_METER_MOD_FAILED_OUT_OF_METERS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_METER_MOD_FAILED_OUT_OF_METERS (0xa)
#define OF_METER_MOD_FAILED_OUT_OF_METERS_BY_VERSION(version) (0xa)
#define OF_METER_MOD_FAILED_OUT_OF_METERS_GENERIC 266

/*
 * Defines for OF_METER_MOD_FAILED_UNKNOWN
 * Original name OFPMMFC_UNKNOWN
 */
#define OF_METER_MOD_FAILED_UNKNOWN_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_METER_MOD_FAILED_UNKNOWN (0x0)
#define OF_METER_MOD_FAILED_UNKNOWN_BY_VERSION(version) (0x0)
#define OF_METER_MOD_FAILED_UNKNOWN_GENERIC 267

/*
 * Defines for OF_METER_MOD_FAILED_UNKNOWN_METER
 * Original name OFPMMFC_UNKNOWN_METER
 */
#define OF_METER_MOD_FAILED_UNKNOWN_METER_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_METER_MOD_FAILED_UNKNOWN_METER (0x3)
#define OF_METER_MOD_FAILED_UNKNOWN_METER_BY_VERSION(version) (0x3)
#define OF_METER_MOD_FAILED_UNKNOWN_METER_GENERIC 268

/****************************************************************
 * Identifiers from ofp_nicira_controller_role
 *****************************************************************/

/*
 * Defines for OF_NICIRA_CONTROLLER_ROLE_MASTER
 * Original name NX_ROLE_MASTER
 */
#define OF_NICIRA_CONTROLLER_ROLE_MASTER_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_NICIRA_CONTROLLER_ROLE_MASTER (0x1)
#define OF_NICIRA_CONTROLLER_ROLE_MASTER_BY_VERSION(version) (0x1)
#define OF_NICIRA_CONTROLLER_ROLE_MASTER_GENERIC 269

/*
 * Defines for OF_NICIRA_CONTROLLER_ROLE_OTHER
 * Original name NX_ROLE_OTHER
 */
#define OF_NICIRA_CONTROLLER_ROLE_OTHER_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_NICIRA_CONTROLLER_ROLE_OTHER (0x0)
#define OF_NICIRA_CONTROLLER_ROLE_OTHER_BY_VERSION(version) (0x0)
#define OF_NICIRA_CONTROLLER_ROLE_OTHER_GENERIC 270

/*
 * Defines for OF_NICIRA_CONTROLLER_ROLE_SLAVE
 * Original name NX_ROLE_SLAVE
 */
#define OF_NICIRA_CONTROLLER_ROLE_SLAVE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_NICIRA_CONTROLLER_ROLE_SLAVE (0x2)
#define OF_NICIRA_CONTROLLER_ROLE_SLAVE_BY_VERSION(version) (0x2)
#define OF_NICIRA_CONTROLLER_ROLE_SLAVE_GENERIC 271

/****************************************************************
 * Identifiers from ofp_oxm_class
 *****************************************************************/

/*
 * Defines for OF_OXM_CLASS_EXPERIMENTER
 * Original name OFPXMC_EXPERIMENTER
 */
#define OF_OXM_CLASS_EXPERIMENTER_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_OXM_CLASS_EXPERIMENTER (0xffff)
#define OF_OXM_CLASS_EXPERIMENTER_BY_VERSION(version) (0xffff)
#define OF_OXM_CLASS_EXPERIMENTER_GENERIC 272

/*
 * Defines for OF_OXM_CLASS_NXM_0
 * Original name OFPXMC_NXM_0
 */
#define OF_OXM_CLASS_NXM_0_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_OXM_CLASS_NXM_0 (0x0)
#define OF_OXM_CLASS_NXM_0_BY_VERSION(version) (0x0)
#define OF_OXM_CLASS_NXM_0_GENERIC 273

/*
 * Defines for OF_OXM_CLASS_NXM_1
 * Original name OFPXMC_NXM_1
 */
#define OF_OXM_CLASS_NXM_1_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_OXM_CLASS_NXM_1 (0x1)
#define OF_OXM_CLASS_NXM_1_BY_VERSION(version) (0x1)
#define OF_OXM_CLASS_NXM_1_GENERIC 274

/*
 * Defines for OF_OXM_CLASS_OPENFLOW_BASIC
 * Original name OFPXMC_OPENFLOW_BASIC
 */
#define OF_OXM_CLASS_OPENFLOW_BASIC_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_OXM_CLASS_OPENFLOW_BASIC (0x8000)
#define OF_OXM_CLASS_OPENFLOW_BASIC_BY_VERSION(version) (0x8000)
#define OF_OXM_CLASS_OPENFLOW_BASIC_GENERIC 275

/****************************************************************
 * Identifiers from ofp_packet_in_reason
 *****************************************************************/

/*
 * Defines for OF_PACKET_IN_REASON_ACTION
 * Original name OFPR_ACTION
 */
#define OF_PACKET_IN_REASON_ACTION_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PACKET_IN_REASON_ACTION (0x1)
#define OF_PACKET_IN_REASON_ACTION_BY_VERSION(version) (0x1)
#define OF_PACKET_IN_REASON_ACTION_GENERIC 276

/*
 * Defines for OF_PACKET_IN_REASON_BSN_BAD_VLAN
 * Original name OFPR_BSN_BAD_VLAN
 */
#define OF_PACKET_IN_REASON_BSN_BAD_VLAN_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_PACKET_IN_REASON_BSN_BAD_VLAN (0x82)
#define OF_PACKET_IN_REASON_BSN_BAD_VLAN_BY_VERSION(version) (0x82)
#define OF_PACKET_IN_REASON_BSN_BAD_VLAN_GENERIC 277

/*
 * Defines for OF_PACKET_IN_REASON_BSN_DESTINATION_LOOKUP_FAILURE
 * Original name OFPR_BSN_DESTINATION_LOOKUP_FAILURE
 */
#define OF_PACKET_IN_REASON_BSN_DESTINATION_LOOKUP_FAILURE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_PACKET_IN_REASON_BSN_DESTINATION_LOOKUP_FAILURE (0x83)
#define OF_PACKET_IN_REASON_BSN_DESTINATION_LOOKUP_FAILURE_BY_VERSION(version) (0x83)
#define OF_PACKET_IN_REASON_BSN_DESTINATION_LOOKUP_FAILURE_GENERIC 278

/*
 * Defines for OF_PACKET_IN_REASON_BSN_NEW_HOST
 * Original name OFPR_BSN_NEW_HOST
 */
#define OF_PACKET_IN_REASON_BSN_NEW_HOST_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_PACKET_IN_REASON_BSN_NEW_HOST (0x80)
#define OF_PACKET_IN_REASON_BSN_NEW_HOST_BY_VERSION(version) (0x80)
#define OF_PACKET_IN_REASON_BSN_NEW_HOST_GENERIC 279

/*
 * Defines for OF_PACKET_IN_REASON_BSN_STATION_MOVE
 * Original name OFPR_BSN_STATION_MOVE
 */
#define OF_PACKET_IN_REASON_BSN_STATION_MOVE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_PACKET_IN_REASON_BSN_STATION_MOVE (0x81)
#define OF_PACKET_IN_REASON_BSN_STATION_MOVE_BY_VERSION(version) (0x81)
#define OF_PACKET_IN_REASON_BSN_STATION_MOVE_GENERIC 280

/*
 * Defines for OF_PACKET_IN_REASON_INVALID_TTL
 * Original name OFPR_INVALID_TTL
 */
#define OF_PACKET_IN_REASON_INVALID_TTL_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_PACKET_IN_REASON_INVALID_TTL (0x2)
#define OF_PACKET_IN_REASON_INVALID_TTL_BY_VERSION(version) (0x2)
#define OF_PACKET_IN_REASON_INVALID_TTL_GENERIC 281

/*
 * Defines for OF_PACKET_IN_REASON_NO_MATCH
 * Original name OFPR_NO_MATCH
 */
#define OF_PACKET_IN_REASON_NO_MATCH_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PACKET_IN_REASON_NO_MATCH (0x0)
#define OF_PACKET_IN_REASON_NO_MATCH_BY_VERSION(version) (0x0)
#define OF_PACKET_IN_REASON_NO_MATCH_GENERIC 282

/****************************************************************
 * Identifiers from ofp_port
 *****************************************************************/

/*
 * Defines for OF_PORT_DEST_ALL
 * Original name OFPP_ALL
 */
#define OF_PORT_DEST_ALL_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_DEST_ALL (0xfffffffc)
#define OF_PORT_DEST_ALL_BY_VERSION(version) (0xfffffffc)
#define OF_PORT_DEST_ALL_GENERIC 283

/*
 * Defines for OF_PORT_DEST_CONTROLLER
 * Original name OFPP_CONTROLLER
 */
#define OF_PORT_DEST_CONTROLLER_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_DEST_CONTROLLER (0xfffffffd)
#define OF_PORT_DEST_CONTROLLER_BY_VERSION(version) (0xfffffffd)
#define OF_PORT_DEST_CONTROLLER_GENERIC 284

/*
 * Defines for OF_PORT_DEST_FLOOD
 * Original name OFPP_FLOOD
 */
#define OF_PORT_DEST_FLOOD_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_DEST_FLOOD (0xfffffffb)
#define OF_PORT_DEST_FLOOD_BY_VERSION(version) (0xfffffffb)
#define OF_PORT_DEST_FLOOD_GENERIC 285

/*
 * Defines for OF_PORT_DEST_IN_PORT
 * Original name OFPP_IN_PORT
 */
#define OF_PORT_DEST_IN_PORT_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_DEST_IN_PORT (0xfffffff8)
#define OF_PORT_DEST_IN_PORT_BY_VERSION(version) (0xfffffff8)
#define OF_PORT_DEST_IN_PORT_GENERIC 286

/*
 * Defines for OF_PORT_DEST_LOCAL
 * Original name OFPP_LOCAL
 */
#define OF_PORT_DEST_LOCAL_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_DEST_LOCAL (0xfffffffe)
#define OF_PORT_DEST_LOCAL_BY_VERSION(version) (0xfffffffe)
#define OF_PORT_DEST_LOCAL_GENERIC 287

/*
 * Defines for OF_PORT_DEST_NONE
 * Original name OFPP_NONE
 */
#define OF_PORT_DEST_NONE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_PORT_DEST_NONE (0xffffffff)
#define OF_PORT_DEST_NONE_BY_VERSION(version) (0xffffffff)
#define OF_PORT_DEST_NONE_GENERIC 288

/*
 * Defines for OF_PORT_DEST_NORMAL
 * Original name OFPP_NORMAL
 */
#define OF_PORT_DEST_NORMAL_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_DEST_NORMAL (0xfffffffa)
#define OF_PORT_DEST_NORMAL_BY_VERSION(version) (0xfffffffa)
#define OF_PORT_DEST_NORMAL_GENERIC 289

/*
 * Defines for OF_PORT_DEST_USE_TABLE
 * Original name OFPP_TABLE
 */
#define OF_PORT_DEST_USE_TABLE_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_DEST_USE_TABLE (0xfffffff9)
#define OF_PORT_DEST_USE_TABLE_BY_VERSION(version) (0xfffffff9)
#define OF_PORT_DEST_USE_TABLE_GENERIC 290

/*
 * Defines for OF_PORT_DEST_WILDCARD
 * Original name OFPP_ANY
 */
#define OF_PORT_DEST_WILDCARD_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_PORT_DEST_WILDCARD (0xffffffff)
#define OF_PORT_DEST_WILDCARD_BY_VERSION(version) (0xffffffff)
#define OF_PORT_DEST_WILDCARD_GENERIC 291

/*
 * Defines for OF_PORT_NUMBER_MAX
 * Original name OFPP_MAX
 */
#define OF_PORT_NUMBER_MAX_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_NUMBER_MAX (0xffffff00)
#define OF_PORT_NUMBER_MAX_BY_VERSION(version) (0xffffff00)
#define OF_PORT_NUMBER_MAX_GENERIC 292

/****************************************************************
 * Identifiers from ofp_port_config
 *****************************************************************/

/*
 * Defines for OF_PORT_CONFIG_FLAG_BSN_MIRROR_DEST
 * Original name OFPPC_BSN_MIRROR_DEST
 */
#define OF_PORT_CONFIG_FLAG_BSN_MIRROR_DEST_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_CONFIG_FLAG_BSN_MIRROR_DEST (0x80000000)
#define OF_PORT_CONFIG_FLAG_BSN_MIRROR_DEST_BY_VERSION(version) (0x80000000)

#define OF_PORT_CONFIG_FLAG_BSN_MIRROR_DEST_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_CONFIG_FLAG_BSN_MIRROR_DEST_BY_VERSION(version))
#define OF_PORT_CONFIG_FLAG_BSN_MIRROR_DEST_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_CONFIG_FLAG_BSN_MIRROR_DEST_BY_VERSION(version))
#define OF_PORT_CONFIG_FLAG_BSN_MIRROR_DEST_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_CONFIG_FLAG_BSN_MIRROR_DEST_BY_VERSION(version))
#define OF_PORT_CONFIG_FLAG_BSN_MIRROR_DEST_GENERIC 293

/*
 * Defines for OF_PORT_CONFIG_FLAG_NO_FLOOD
 * Original name OFPPC_NO_FLOOD
 */
#define OF_PORT_CONFIG_FLAG_NO_FLOOD_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_PORT_CONFIG_FLAG_NO_FLOOD (0x10)
#define OF_PORT_CONFIG_FLAG_NO_FLOOD_BY_VERSION(version) (0x10)

#define OF_PORT_CONFIG_FLAG_NO_FLOOD_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_CONFIG_FLAG_NO_FLOOD_BY_VERSION(version))
#define OF_PORT_CONFIG_FLAG_NO_FLOOD_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_CONFIG_FLAG_NO_FLOOD_BY_VERSION(version))
#define OF_PORT_CONFIG_FLAG_NO_FLOOD_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_CONFIG_FLAG_NO_FLOOD_BY_VERSION(version))
#define OF_PORT_CONFIG_FLAG_NO_FLOOD_GENERIC 294

/*
 * Defines for OF_PORT_CONFIG_FLAG_NO_FWD
 * Original name OFPPC_NO_FWD
 */
#define OF_PORT_CONFIG_FLAG_NO_FWD_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_CONFIG_FLAG_NO_FWD (0x20)
#define OF_PORT_CONFIG_FLAG_NO_FWD_BY_VERSION(version) (0x20)

#define OF_PORT_CONFIG_FLAG_NO_FWD_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_CONFIG_FLAG_NO_FWD_BY_VERSION(version))
#define OF_PORT_CONFIG_FLAG_NO_FWD_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_CONFIG_FLAG_NO_FWD_BY_VERSION(version))
#define OF_PORT_CONFIG_FLAG_NO_FWD_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_CONFIG_FLAG_NO_FWD_BY_VERSION(version))
#define OF_PORT_CONFIG_FLAG_NO_FWD_GENERIC 295

/*
 * Defines for OF_PORT_CONFIG_FLAG_NO_PACKET_IN
 * Original name OFPPC_NO_PACKET_IN
 */
#define OF_PORT_CONFIG_FLAG_NO_PACKET_IN_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_CONFIG_FLAG_NO_PACKET_IN (0x40)
#define OF_PORT_CONFIG_FLAG_NO_PACKET_IN_BY_VERSION(version) (0x40)

#define OF_PORT_CONFIG_FLAG_NO_PACKET_IN_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_CONFIG_FLAG_NO_PACKET_IN_BY_VERSION(version))
#define OF_PORT_CONFIG_FLAG_NO_PACKET_IN_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_CONFIG_FLAG_NO_PACKET_IN_BY_VERSION(version))
#define OF_PORT_CONFIG_FLAG_NO_PACKET_IN_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_CONFIG_FLAG_NO_PACKET_IN_BY_VERSION(version))
#define OF_PORT_CONFIG_FLAG_NO_PACKET_IN_GENERIC 296

/*
 * Defines for OF_PORT_CONFIG_FLAG_NO_RECV
 * Original name OFPPC_NO_RECV
 */
#define OF_PORT_CONFIG_FLAG_NO_RECV_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_CONFIG_FLAG_NO_RECV (0x4)
#define OF_PORT_CONFIG_FLAG_NO_RECV_BY_VERSION(version) (0x4)

#define OF_PORT_CONFIG_FLAG_NO_RECV_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_CONFIG_FLAG_NO_RECV_BY_VERSION(version))
#define OF_PORT_CONFIG_FLAG_NO_RECV_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_CONFIG_FLAG_NO_RECV_BY_VERSION(version))
#define OF_PORT_CONFIG_FLAG_NO_RECV_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_CONFIG_FLAG_NO_RECV_BY_VERSION(version))
#define OF_PORT_CONFIG_FLAG_NO_RECV_GENERIC 297

/*
 * Defines for OF_PORT_CONFIG_FLAG_NO_RECV_STP
 * Original name OFPPC_NO_RECV_STP
 */
#define OF_PORT_CONFIG_FLAG_NO_RECV_STP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_PORT_CONFIG_FLAG_NO_RECV_STP (0x8)
#define OF_PORT_CONFIG_FLAG_NO_RECV_STP_BY_VERSION(version) (0x8)

#define OF_PORT_CONFIG_FLAG_NO_RECV_STP_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_CONFIG_FLAG_NO_RECV_STP_BY_VERSION(version))
#define OF_PORT_CONFIG_FLAG_NO_RECV_STP_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_CONFIG_FLAG_NO_RECV_STP_BY_VERSION(version))
#define OF_PORT_CONFIG_FLAG_NO_RECV_STP_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_CONFIG_FLAG_NO_RECV_STP_BY_VERSION(version))
#define OF_PORT_CONFIG_FLAG_NO_RECV_STP_GENERIC 298

/*
 * Defines for OF_PORT_CONFIG_FLAG_NO_STP
 * Original name OFPPC_NO_STP
 */
#define OF_PORT_CONFIG_FLAG_NO_STP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_PORT_CONFIG_FLAG_NO_STP (0x2)
#define OF_PORT_CONFIG_FLAG_NO_STP_BY_VERSION(version) (0x2)

#define OF_PORT_CONFIG_FLAG_NO_STP_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_CONFIG_FLAG_NO_STP_BY_VERSION(version))
#define OF_PORT_CONFIG_FLAG_NO_STP_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_CONFIG_FLAG_NO_STP_BY_VERSION(version))
#define OF_PORT_CONFIG_FLAG_NO_STP_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_CONFIG_FLAG_NO_STP_BY_VERSION(version))
#define OF_PORT_CONFIG_FLAG_NO_STP_GENERIC 299

/*
 * Defines for OF_PORT_CONFIG_FLAG_PORT_DOWN
 * Original name OFPPC_PORT_DOWN
 */
#define OF_PORT_CONFIG_FLAG_PORT_DOWN_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_CONFIG_FLAG_PORT_DOWN (0x1)
#define OF_PORT_CONFIG_FLAG_PORT_DOWN_BY_VERSION(version) (0x1)

#define OF_PORT_CONFIG_FLAG_PORT_DOWN_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_CONFIG_FLAG_PORT_DOWN_BY_VERSION(version))
#define OF_PORT_CONFIG_FLAG_PORT_DOWN_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_CONFIG_FLAG_PORT_DOWN_BY_VERSION(version))
#define OF_PORT_CONFIG_FLAG_PORT_DOWN_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_CONFIG_FLAG_PORT_DOWN_BY_VERSION(version))
#define OF_PORT_CONFIG_FLAG_PORT_DOWN_GENERIC 300

/****************************************************************
 * Identifiers from ofp_port_features
 *****************************************************************/

/*
 * Defines for OF_PORT_FEATURE_FLAG_100GB_FD
 * Original name OFPPF_100GB_FD
 */
#define OF_PORT_FEATURE_FLAG_100GB_FD_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_PORT_FEATURE_FLAG_100GB_FD (0x100)
#define OF_PORT_FEATURE_FLAG_100GB_FD_BY_VERSION(version) (0x100)

#define OF_PORT_FEATURE_FLAG_100GB_FD_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_FEATURE_FLAG_100GB_FD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_100GB_FD_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_FEATURE_FLAG_100GB_FD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_100GB_FD_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_FEATURE_FLAG_100GB_FD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_100GB_FD_GENERIC 301

/*
 * Defines for OF_PORT_FEATURE_FLAG_100MB_FD
 * Original name OFPPF_100MB_FD
 */
#define OF_PORT_FEATURE_FLAG_100MB_FD_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_FEATURE_FLAG_100MB_FD (0x8)
#define OF_PORT_FEATURE_FLAG_100MB_FD_BY_VERSION(version) (0x8)

#define OF_PORT_FEATURE_FLAG_100MB_FD_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_FEATURE_FLAG_100MB_FD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_100MB_FD_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_FEATURE_FLAG_100MB_FD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_100MB_FD_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_FEATURE_FLAG_100MB_FD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_100MB_FD_GENERIC 302

/*
 * Defines for OF_PORT_FEATURE_FLAG_100MB_HD
 * Original name OFPPF_100MB_HD
 */
#define OF_PORT_FEATURE_FLAG_100MB_HD_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_FEATURE_FLAG_100MB_HD (0x4)
#define OF_PORT_FEATURE_FLAG_100MB_HD_BY_VERSION(version) (0x4)

#define OF_PORT_FEATURE_FLAG_100MB_HD_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_FEATURE_FLAG_100MB_HD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_100MB_HD_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_FEATURE_FLAG_100MB_HD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_100MB_HD_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_FEATURE_FLAG_100MB_HD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_100MB_HD_GENERIC 303

/*
 * Defines for OF_PORT_FEATURE_FLAG_10GB_FD
 * Original name OFPPF_10GB_FD
 */
#define OF_PORT_FEATURE_FLAG_10GB_FD_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_FEATURE_FLAG_10GB_FD (0x40)
#define OF_PORT_FEATURE_FLAG_10GB_FD_BY_VERSION(version) (0x40)

#define OF_PORT_FEATURE_FLAG_10GB_FD_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_FEATURE_FLAG_10GB_FD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_10GB_FD_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_FEATURE_FLAG_10GB_FD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_10GB_FD_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_FEATURE_FLAG_10GB_FD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_10GB_FD_GENERIC 304

/*
 * Defines for OF_PORT_FEATURE_FLAG_10MB_FD
 * Original name OFPPF_10MB_FD
 */
#define OF_PORT_FEATURE_FLAG_10MB_FD_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_FEATURE_FLAG_10MB_FD (0x2)
#define OF_PORT_FEATURE_FLAG_10MB_FD_BY_VERSION(version) (0x2)

#define OF_PORT_FEATURE_FLAG_10MB_FD_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_FEATURE_FLAG_10MB_FD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_10MB_FD_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_FEATURE_FLAG_10MB_FD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_10MB_FD_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_FEATURE_FLAG_10MB_FD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_10MB_FD_GENERIC 305

/*
 * Defines for OF_PORT_FEATURE_FLAG_10MB_HD
 * Original name OFPPF_10MB_HD
 */
#define OF_PORT_FEATURE_FLAG_10MB_HD_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_FEATURE_FLAG_10MB_HD (0x1)
#define OF_PORT_FEATURE_FLAG_10MB_HD_BY_VERSION(version) (0x1)

#define OF_PORT_FEATURE_FLAG_10MB_HD_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_FEATURE_FLAG_10MB_HD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_10MB_HD_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_FEATURE_FLAG_10MB_HD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_10MB_HD_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_FEATURE_FLAG_10MB_HD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_10MB_HD_GENERIC 306

/*
 * Defines for OF_PORT_FEATURE_FLAG_1GB_FD
 * Original name OFPPF_1GB_FD
 */
#define OF_PORT_FEATURE_FLAG_1GB_FD_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_FEATURE_FLAG_1GB_FD (0x20)
#define OF_PORT_FEATURE_FLAG_1GB_FD_BY_VERSION(version) (0x20)

#define OF_PORT_FEATURE_FLAG_1GB_FD_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_FEATURE_FLAG_1GB_FD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_1GB_FD_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_FEATURE_FLAG_1GB_FD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_1GB_FD_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_FEATURE_FLAG_1GB_FD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_1GB_FD_GENERIC 307

/*
 * Defines for OF_PORT_FEATURE_FLAG_1GB_HD
 * Original name OFPPF_1GB_HD
 */
#define OF_PORT_FEATURE_FLAG_1GB_HD_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_FEATURE_FLAG_1GB_HD (0x10)
#define OF_PORT_FEATURE_FLAG_1GB_HD_BY_VERSION(version) (0x10)

#define OF_PORT_FEATURE_FLAG_1GB_HD_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_FEATURE_FLAG_1GB_HD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_1GB_HD_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_FEATURE_FLAG_1GB_HD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_1GB_HD_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_FEATURE_FLAG_1GB_HD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_1GB_HD_GENERIC 308

/*
 * Defines for OF_PORT_FEATURE_FLAG_1TB_FD
 * Original name OFPPF_1TB_FD
 */
#define OF_PORT_FEATURE_FLAG_1TB_FD_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_PORT_FEATURE_FLAG_1TB_FD (0x200)
#define OF_PORT_FEATURE_FLAG_1TB_FD_BY_VERSION(version) (0x200)

#define OF_PORT_FEATURE_FLAG_1TB_FD_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_FEATURE_FLAG_1TB_FD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_1TB_FD_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_FEATURE_FLAG_1TB_FD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_1TB_FD_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_FEATURE_FLAG_1TB_FD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_1TB_FD_GENERIC 309

/*
 * Defines for OF_PORT_FEATURE_FLAG_40GB_FD
 * Original name OFPPF_40GB_FD
 */
#define OF_PORT_FEATURE_FLAG_40GB_FD_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_PORT_FEATURE_FLAG_40GB_FD (0x80)
#define OF_PORT_FEATURE_FLAG_40GB_FD_BY_VERSION(version) (0x80)

#define OF_PORT_FEATURE_FLAG_40GB_FD_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_FEATURE_FLAG_40GB_FD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_40GB_FD_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_FEATURE_FLAG_40GB_FD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_40GB_FD_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_FEATURE_FLAG_40GB_FD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_40GB_FD_GENERIC 310

/*
 * Defines for OF_PORT_FEATURE_FLAG_AUTONEG
 * Original name OFPPF_AUTONEG
 */
#define OF_PORT_FEATURE_FLAG_AUTONEG_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_FEATURE_FLAG_AUTONEG_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x200, 0x2000, 0x2000, 0x2000)

#define OF_PORT_FEATURE_FLAG_AUTONEG_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_FEATURE_FLAG_AUTONEG_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_AUTONEG_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_FEATURE_FLAG_AUTONEG_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_AUTONEG_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_FEATURE_FLAG_AUTONEG_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_AUTONEG_GENERIC 311

/*
 * Defines for OF_PORT_FEATURE_FLAG_COPPER
 * Original name OFPPF_COPPER
 */
#define OF_PORT_FEATURE_FLAG_COPPER_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_FEATURE_FLAG_COPPER_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x80, 0x800, 0x800, 0x800)

#define OF_PORT_FEATURE_FLAG_COPPER_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_FEATURE_FLAG_COPPER_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_COPPER_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_FEATURE_FLAG_COPPER_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_COPPER_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_FEATURE_FLAG_COPPER_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_COPPER_GENERIC 312

/*
 * Defines for OF_PORT_FEATURE_FLAG_FIBER
 * Original name OFPPF_FIBER
 */
#define OF_PORT_FEATURE_FLAG_FIBER_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_FEATURE_FLAG_FIBER_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x100, 0x1000, 0x1000, 0x1000)

#define OF_PORT_FEATURE_FLAG_FIBER_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_FEATURE_FLAG_FIBER_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_FIBER_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_FEATURE_FLAG_FIBER_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_FIBER_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_FEATURE_FLAG_FIBER_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_FIBER_GENERIC 313

/*
 * Defines for OF_PORT_FEATURE_FLAG_OTHER
 * Original name OFPPF_OTHER
 */
#define OF_PORT_FEATURE_FLAG_OTHER_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_PORT_FEATURE_FLAG_OTHER (0x400)
#define OF_PORT_FEATURE_FLAG_OTHER_BY_VERSION(version) (0x400)

#define OF_PORT_FEATURE_FLAG_OTHER_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_FEATURE_FLAG_OTHER_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_OTHER_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_FEATURE_FLAG_OTHER_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_OTHER_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_FEATURE_FLAG_OTHER_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_OTHER_GENERIC 314

/*
 * Defines for OF_PORT_FEATURE_FLAG_PAUSE
 * Original name OFPPF_PAUSE
 */
#define OF_PORT_FEATURE_FLAG_PAUSE_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_FEATURE_FLAG_PAUSE_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x400, 0x4000, 0x4000, 0x4000)

#define OF_PORT_FEATURE_FLAG_PAUSE_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_FEATURE_FLAG_PAUSE_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_PAUSE_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_FEATURE_FLAG_PAUSE_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_PAUSE_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_FEATURE_FLAG_PAUSE_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_PAUSE_GENERIC 315

/*
 * Defines for OF_PORT_FEATURE_FLAG_PAUSE_ASYM
 * Original name OFPPF_PAUSE_ASYM
 */
#define OF_PORT_FEATURE_FLAG_PAUSE_ASYM_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_FEATURE_FLAG_PAUSE_ASYM_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x800, 0x8000, 0x8000, 0x8000)

#define OF_PORT_FEATURE_FLAG_PAUSE_ASYM_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_FEATURE_FLAG_PAUSE_ASYM_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_PAUSE_ASYM_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_FEATURE_FLAG_PAUSE_ASYM_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_PAUSE_ASYM_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_FEATURE_FLAG_PAUSE_ASYM_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_PAUSE_ASYM_GENERIC 316

/****************************************************************
 * Identifiers from ofp_port_mod_failed_code
 *****************************************************************/

/*
 * Defines for OF_PORT_MOD_FAILED_BAD_ADVERTISE
 * Original name OFPPMFC_BAD_ADVERTISE
 */
#define OF_PORT_MOD_FAILED_BAD_ADVERTISE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_PORT_MOD_FAILED_BAD_ADVERTISE (0x3)
#define OF_PORT_MOD_FAILED_BAD_ADVERTISE_BY_VERSION(version) (0x3)
#define OF_PORT_MOD_FAILED_BAD_ADVERTISE_GENERIC 317

/*
 * Defines for OF_PORT_MOD_FAILED_BAD_CONFIG
 * Original name OFPPMFC_BAD_CONFIG
 */
#define OF_PORT_MOD_FAILED_BAD_CONFIG_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_PORT_MOD_FAILED_BAD_CONFIG (0x2)
#define OF_PORT_MOD_FAILED_BAD_CONFIG_BY_VERSION(version) (0x2)
#define OF_PORT_MOD_FAILED_BAD_CONFIG_GENERIC 318

/*
 * Defines for OF_PORT_MOD_FAILED_BAD_HW_ADDR
 * Original name OFPPMFC_BAD_HW_ADDR
 */
#define OF_PORT_MOD_FAILED_BAD_HW_ADDR_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_MOD_FAILED_BAD_HW_ADDR (0x1)
#define OF_PORT_MOD_FAILED_BAD_HW_ADDR_BY_VERSION(version) (0x1)
#define OF_PORT_MOD_FAILED_BAD_HW_ADDR_GENERIC 319

/*
 * Defines for OF_PORT_MOD_FAILED_BAD_PORT
 * Original name OFPPMFC_BAD_PORT
 */
#define OF_PORT_MOD_FAILED_BAD_PORT_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_MOD_FAILED_BAD_PORT (0x0)
#define OF_PORT_MOD_FAILED_BAD_PORT_BY_VERSION(version) (0x0)
#define OF_PORT_MOD_FAILED_BAD_PORT_GENERIC 320

/*
 * Defines for OF_PORT_MOD_FAILED_EPERM
 * Original name OFPPMFC_EPERM
 */
#define OF_PORT_MOD_FAILED_EPERM_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_PORT_MOD_FAILED_EPERM (0x4)
#define OF_PORT_MOD_FAILED_EPERM_BY_VERSION(version) (0x4)
#define OF_PORT_MOD_FAILED_EPERM_GENERIC 321

/****************************************************************
 * Identifiers from ofp_port_reason
 *****************************************************************/

/*
 * Defines for OF_PORT_CHANGE_REASON_ADD
 * Original name OFPPR_ADD
 */
#define OF_PORT_CHANGE_REASON_ADD_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_CHANGE_REASON_ADD (0x0)
#define OF_PORT_CHANGE_REASON_ADD_BY_VERSION(version) (0x0)
#define OF_PORT_CHANGE_REASON_ADD_GENERIC 322

/*
 * Defines for OF_PORT_CHANGE_REASON_DELETE
 * Original name OFPPR_DELETE
 */
#define OF_PORT_CHANGE_REASON_DELETE_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_CHANGE_REASON_DELETE (0x1)
#define OF_PORT_CHANGE_REASON_DELETE_BY_VERSION(version) (0x1)
#define OF_PORT_CHANGE_REASON_DELETE_GENERIC 323

/*
 * Defines for OF_PORT_CHANGE_REASON_MODIFY
 * Original name OFPPR_MODIFY
 */
#define OF_PORT_CHANGE_REASON_MODIFY_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_CHANGE_REASON_MODIFY (0x2)
#define OF_PORT_CHANGE_REASON_MODIFY_BY_VERSION(version) (0x2)
#define OF_PORT_CHANGE_REASON_MODIFY_GENERIC 324

/****************************************************************
 * Identifiers from ofp_port_state
 *****************************************************************/

/*
 * Defines for OF_PORT_STATE_FLAG_BLOCKED
 * Original name OFPPS_BLOCKED
 */
#define OF_PORT_STATE_FLAG_BLOCKED_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_PORT_STATE_FLAG_BLOCKED (0x2)
#define OF_PORT_STATE_FLAG_BLOCKED_BY_VERSION(version) (0x2)

#define OF_PORT_STATE_FLAG_BLOCKED_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_STATE_FLAG_BLOCKED_BY_VERSION(version))
#define OF_PORT_STATE_FLAG_BLOCKED_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_STATE_FLAG_BLOCKED_BY_VERSION(version))
#define OF_PORT_STATE_FLAG_BLOCKED_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_STATE_FLAG_BLOCKED_BY_VERSION(version))
#define OF_PORT_STATE_FLAG_BLOCKED_GENERIC 325

/*
 * Defines for OF_PORT_STATE_FLAG_LINK_DOWN
 * Original name OFPPS_LINK_DOWN
 */
#define OF_PORT_STATE_FLAG_LINK_DOWN_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_STATE_FLAG_LINK_DOWN (0x1)
#define OF_PORT_STATE_FLAG_LINK_DOWN_BY_VERSION(version) (0x1)

#define OF_PORT_STATE_FLAG_LINK_DOWN_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_STATE_FLAG_LINK_DOWN_BY_VERSION(version))
#define OF_PORT_STATE_FLAG_LINK_DOWN_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_STATE_FLAG_LINK_DOWN_BY_VERSION(version))
#define OF_PORT_STATE_FLAG_LINK_DOWN_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_STATE_FLAG_LINK_DOWN_BY_VERSION(version))
#define OF_PORT_STATE_FLAG_LINK_DOWN_GENERIC 326

/*
 * Defines for OF_PORT_STATE_FLAG_LIVE
 * Original name OFPPS_LIVE
 */
#define OF_PORT_STATE_FLAG_LIVE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_PORT_STATE_FLAG_LIVE (0x4)
#define OF_PORT_STATE_FLAG_LIVE_BY_VERSION(version) (0x4)

#define OF_PORT_STATE_FLAG_LIVE_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_STATE_FLAG_LIVE_BY_VERSION(version))
#define OF_PORT_STATE_FLAG_LIVE_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_STATE_FLAG_LIVE_BY_VERSION(version))
#define OF_PORT_STATE_FLAG_LIVE_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_STATE_FLAG_LIVE_BY_VERSION(version))
#define OF_PORT_STATE_FLAG_LIVE_GENERIC 327

/*
 * Defines for OF_PORT_STATE_FLAG_STP_BLOCK
 * Original name OFPPS_STP_BLOCK
 */
#define OF_PORT_STATE_FLAG_STP_BLOCK_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_PORT_STATE_FLAG_STP_BLOCK (0x300)
#define OF_PORT_STATE_FLAG_STP_BLOCK_BY_VERSION(version) (0x300)

#define OF_PORT_STATE_FLAG_STP_BLOCK_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_STATE_FLAG_STP_BLOCK_BY_VERSION(version))
#define OF_PORT_STATE_FLAG_STP_BLOCK_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_STATE_FLAG_STP_BLOCK_BY_VERSION(version))
#define OF_PORT_STATE_FLAG_STP_BLOCK_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_STATE_FLAG_STP_BLOCK_BY_VERSION(version))
#define OF_PORT_STATE_FLAG_STP_BLOCK_GENERIC 328

/*
 * Defines for OF_PORT_STATE_FLAG_STP_FORWARD
 * Original name OFPPS_STP_FORWARD
 */
#define OF_PORT_STATE_FLAG_STP_FORWARD_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_PORT_STATE_FLAG_STP_FORWARD (0x200)
#define OF_PORT_STATE_FLAG_STP_FORWARD_BY_VERSION(version) (0x200)

#define OF_PORT_STATE_FLAG_STP_FORWARD_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_STATE_FLAG_STP_FORWARD_BY_VERSION(version))
#define OF_PORT_STATE_FLAG_STP_FORWARD_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_STATE_FLAG_STP_FORWARD_BY_VERSION(version))
#define OF_PORT_STATE_FLAG_STP_FORWARD_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_STATE_FLAG_STP_FORWARD_BY_VERSION(version))
#define OF_PORT_STATE_FLAG_STP_FORWARD_GENERIC 329

/*
 * Defines for OF_PORT_STATE_FLAG_STP_LEARN
 * Original name OFPPS_STP_LEARN
 */
#define OF_PORT_STATE_FLAG_STP_LEARN_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_PORT_STATE_FLAG_STP_LEARN (0x100)
#define OF_PORT_STATE_FLAG_STP_LEARN_BY_VERSION(version) (0x100)

#define OF_PORT_STATE_FLAG_STP_LEARN_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_STATE_FLAG_STP_LEARN_BY_VERSION(version))
#define OF_PORT_STATE_FLAG_STP_LEARN_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_STATE_FLAG_STP_LEARN_BY_VERSION(version))
#define OF_PORT_STATE_FLAG_STP_LEARN_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_STATE_FLAG_STP_LEARN_BY_VERSION(version))
#define OF_PORT_STATE_FLAG_STP_LEARN_GENERIC 330

/*
 * Defines for OF_PORT_STATE_FLAG_STP_LISTEN
 * Original name OFPPS_STP_LISTEN
 */
#define OF_PORT_STATE_FLAG_STP_LISTEN_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_PORT_STATE_FLAG_STP_LISTEN (0x0)
#define OF_PORT_STATE_FLAG_STP_LISTEN_BY_VERSION(version) (0x0)
#define OF_PORT_STATE_FLAG_STP_LISTEN_GENERIC 331

/*
 * Defines for OF_PORT_STATE_FLAG_STP_MASK
 * Original name OFPPS_STP_MASK
 */
#define OF_PORT_STATE_FLAG_STP_MASK_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_PORT_STATE_FLAG_STP_MASK (0x300)
#define OF_PORT_STATE_FLAG_STP_MASK_BY_VERSION(version) (0x300)

#define OF_PORT_STATE_FLAG_STP_MASK_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_STATE_FLAG_STP_MASK_BY_VERSION(version))
#define OF_PORT_STATE_FLAG_STP_MASK_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_STATE_FLAG_STP_MASK_BY_VERSION(version))
#define OF_PORT_STATE_FLAG_STP_MASK_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_STATE_FLAG_STP_MASK_BY_VERSION(version))
#define OF_PORT_STATE_FLAG_STP_MASK_GENERIC 332

/****************************************************************
 * Identifiers from ofp_queue_op_failed_code
 *****************************************************************/

/*
 * Defines for OF_QUEUE_OP_FAILED_BAD_PORT
 * Original name OFPQOFC_BAD_PORT
 */
#define OF_QUEUE_OP_FAILED_BAD_PORT_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_QUEUE_OP_FAILED_BAD_PORT (0x0)
#define OF_QUEUE_OP_FAILED_BAD_PORT_BY_VERSION(version) (0x0)
#define OF_QUEUE_OP_FAILED_BAD_PORT_GENERIC 333

/*
 * Defines for OF_QUEUE_OP_FAILED_BAD_QUEUE
 * Original name OFPQOFC_BAD_QUEUE
 */
#define OF_QUEUE_OP_FAILED_BAD_QUEUE_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_QUEUE_OP_FAILED_BAD_QUEUE (0x1)
#define OF_QUEUE_OP_FAILED_BAD_QUEUE_BY_VERSION(version) (0x1)
#define OF_QUEUE_OP_FAILED_BAD_QUEUE_GENERIC 334

/*
 * Defines for OF_QUEUE_OP_FAILED_EPERM
 * Original name OFPQOFC_EPERM
 */
#define OF_QUEUE_OP_FAILED_EPERM_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_QUEUE_OP_FAILED_EPERM (0x2)
#define OF_QUEUE_OP_FAILED_EPERM_BY_VERSION(version) (0x2)
#define OF_QUEUE_OP_FAILED_EPERM_GENERIC 335

/****************************************************************
 * Identifiers from ofp_queue_properties
 *****************************************************************/

/*
 * Defines for OF_QUEUE_PROPERTY_EXPERIMENTER
 * Original name OFPQT_EXPERIMENTER
 */
#define OF_QUEUE_PROPERTY_EXPERIMENTER_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_QUEUE_PROPERTY_EXPERIMENTER (0xffff)
#define OF_QUEUE_PROPERTY_EXPERIMENTER_BY_VERSION(version) (0xffff)
#define OF_QUEUE_PROPERTY_EXPERIMENTER_GENERIC 336

/*
 * Defines for OF_QUEUE_PROPERTY_MAX_RATE
 * Original name OFPQT_MAX_RATE
 */
#define OF_QUEUE_PROPERTY_MAX_RATE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_QUEUE_PROPERTY_MAX_RATE (0x2)
#define OF_QUEUE_PROPERTY_MAX_RATE_BY_VERSION(version) (0x2)
#define OF_QUEUE_PROPERTY_MAX_RATE_GENERIC 337

/*
 * Defines for OF_QUEUE_PROPERTY_MIN_RATE
 * Original name OFPQT_MIN_RATE
 */
#define OF_QUEUE_PROPERTY_MIN_RATE_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_QUEUE_PROPERTY_MIN_RATE (0x1)
#define OF_QUEUE_PROPERTY_MIN_RATE_BY_VERSION(version) (0x1)
#define OF_QUEUE_PROPERTY_MIN_RATE_GENERIC 338

/*
 * Defines for OF_QUEUE_PROPERTY_NONE
 * Original name OFPQT_NONE
 */
#define OF_QUEUE_PROPERTY_NONE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1))
#define OF_QUEUE_PROPERTY_NONE (0x0)
#define OF_QUEUE_PROPERTY_NONE_BY_VERSION(version) (0x0)
#define OF_QUEUE_PROPERTY_NONE_GENERIC 339

/****************************************************************
 * Identifiers from ofp_role_request_failed_code
 *****************************************************************/

/*
 * Defines for OF_ROLE_REQUEST_FAILED_BAD_ROLE
 * Original name OFPRRFC_BAD_ROLE
 */
#define OF_ROLE_REQUEST_FAILED_BAD_ROLE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_ROLE_REQUEST_FAILED_BAD_ROLE (0x2)
#define OF_ROLE_REQUEST_FAILED_BAD_ROLE_BY_VERSION(version) (0x2)
#define OF_ROLE_REQUEST_FAILED_BAD_ROLE_GENERIC 340

/*
 * Defines for OF_ROLE_REQUEST_FAILED_STALE
 * Original name OFPRRFC_STALE
 */
#define OF_ROLE_REQUEST_FAILED_STALE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_ROLE_REQUEST_FAILED_STALE (0x0)
#define OF_ROLE_REQUEST_FAILED_STALE_BY_VERSION(version) (0x0)
#define OF_ROLE_REQUEST_FAILED_STALE_GENERIC 341

/*
 * Defines for OF_ROLE_REQUEST_FAILED_UNSUP
 * Original name OFPRRFC_UNSUP
 */
#define OF_ROLE_REQUEST_FAILED_UNSUP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_ROLE_REQUEST_FAILED_UNSUP (0x1)
#define OF_ROLE_REQUEST_FAILED_UNSUP_BY_VERSION(version) (0x1)
#define OF_ROLE_REQUEST_FAILED_UNSUP_GENERIC 342

/****************************************************************
 * Identifiers from ofp_stats_reply_flags
 *****************************************************************/

/*
 * Defines for OF_STATS_REPLY_FLAG_REPLY_MORE
 * Original name OFPSF_REPLY_MORE
 */
#define OF_STATS_REPLY_FLAG_REPLY_MORE_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_STATS_REPLY_FLAG_REPLY_MORE (0x1)
#define OF_STATS_REPLY_FLAG_REPLY_MORE_BY_VERSION(version) (0x1)

#define OF_STATS_REPLY_FLAG_REPLY_MORE_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_STATS_REPLY_FLAG_REPLY_MORE_BY_VERSION(version))
#define OF_STATS_REPLY_FLAG_REPLY_MORE_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_STATS_REPLY_FLAG_REPLY_MORE_BY_VERSION(version))
#define OF_STATS_REPLY_FLAG_REPLY_MORE_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_STATS_REPLY_FLAG_REPLY_MORE_BY_VERSION(version))
#define OF_STATS_REPLY_FLAG_REPLY_MORE_GENERIC 343

/****************************************************************
 * Identifiers from ofp_stats_request_flags
 *****************************************************************/

/*
 * Defines for OF_STATS_REPLY_FLAG_REQ_MORE
 * Original name OFPSF_REQ_MORE
 */
#define OF_STATS_REPLY_FLAG_REQ_MORE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_STATS_REPLY_FLAG_REQ_MORE (0x1)
#define OF_STATS_REPLY_FLAG_REQ_MORE_BY_VERSION(version) (0x1)

#define OF_STATS_REPLY_FLAG_REQ_MORE_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_STATS_REPLY_FLAG_REQ_MORE_BY_VERSION(version))
#define OF_STATS_REPLY_FLAG_REQ_MORE_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_STATS_REPLY_FLAG_REQ_MORE_BY_VERSION(version))
#define OF_STATS_REPLY_FLAG_REQ_MORE_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_STATS_REPLY_FLAG_REQ_MORE_BY_VERSION(version))
#define OF_STATS_REPLY_FLAG_REQ_MORE_GENERIC 344

/****************************************************************
 * Identifiers from ofp_stats_type
 *****************************************************************/

/*
 * Defines for OF_STATS_TYPE_AGGREGATE
 * Original name OFPST_AGGREGATE
 */
#define OF_STATS_TYPE_AGGREGATE_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_STATS_TYPE_AGGREGATE (0x2)
#define OF_STATS_TYPE_AGGREGATE_BY_VERSION(version) (0x2)
#define OF_STATS_TYPE_AGGREGATE_GENERIC 345

/*
 * Defines for OF_STATS_TYPE_DESC
 * Original name OFPST_DESC
 */
#define OF_STATS_TYPE_DESC_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_STATS_TYPE_DESC (0x0)
#define OF_STATS_TYPE_DESC_BY_VERSION(version) (0x0)
#define OF_STATS_TYPE_DESC_GENERIC 346

/*
 * Defines for OF_STATS_TYPE_EXPERIMENTER
 * Original name OFPST_EXPERIMENTER
 */
#define OF_STATS_TYPE_EXPERIMENTER_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_STATS_TYPE_EXPERIMENTER (0xffff)
#define OF_STATS_TYPE_EXPERIMENTER_BY_VERSION(version) (0xffff)
#define OF_STATS_TYPE_EXPERIMENTER_GENERIC 347

/*
 * Defines for OF_STATS_TYPE_FLOW
 * Original name OFPST_FLOW
 */
#define OF_STATS_TYPE_FLOW_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_STATS_TYPE_FLOW (0x1)
#define OF_STATS_TYPE_FLOW_BY_VERSION(version) (0x1)
#define OF_STATS_TYPE_FLOW_GENERIC 348

/*
 * Defines for OF_STATS_TYPE_GROUP
 * Original name OFPST_GROUP
 */
#define OF_STATS_TYPE_GROUP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_STATS_TYPE_GROUP (0x6)
#define OF_STATS_TYPE_GROUP_BY_VERSION(version) (0x6)
#define OF_STATS_TYPE_GROUP_GENERIC 349

/*
 * Defines for OF_STATS_TYPE_GROUP_DESC
 * Original name OFPST_GROUP_DESC
 */
#define OF_STATS_TYPE_GROUP_DESC_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_STATS_TYPE_GROUP_DESC (0x7)
#define OF_STATS_TYPE_GROUP_DESC_BY_VERSION(version) (0x7)
#define OF_STATS_TYPE_GROUP_DESC_GENERIC 350

/*
 * Defines for OF_STATS_TYPE_GROUP_FEATURES
 * Original name OFPST_GROUP_FEATURES
 */
#define OF_STATS_TYPE_GROUP_FEATURES_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_STATS_TYPE_GROUP_FEATURES (0x8)
#define OF_STATS_TYPE_GROUP_FEATURES_BY_VERSION(version) (0x8)
#define OF_STATS_TYPE_GROUP_FEATURES_GENERIC 351

/*
 * Defines for OF_STATS_TYPE_METER
 * Original name OFPST_METER
 */
#define OF_STATS_TYPE_METER_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_STATS_TYPE_METER (0x9)
#define OF_STATS_TYPE_METER_BY_VERSION(version) (0x9)
#define OF_STATS_TYPE_METER_GENERIC 352

/*
 * Defines for OF_STATS_TYPE_METER_CONFIG
 * Original name OFPST_METER_CONFIG
 */
#define OF_STATS_TYPE_METER_CONFIG_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_STATS_TYPE_METER_CONFIG (0xa)
#define OF_STATS_TYPE_METER_CONFIG_BY_VERSION(version) (0xa)
#define OF_STATS_TYPE_METER_CONFIG_GENERIC 353

/*
 * Defines for OF_STATS_TYPE_METER_FEATURES
 * Original name OFPST_METER_FEATURES
 */
#define OF_STATS_TYPE_METER_FEATURES_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_STATS_TYPE_METER_FEATURES (0xb)
#define OF_STATS_TYPE_METER_FEATURES_BY_VERSION(version) (0xb)
#define OF_STATS_TYPE_METER_FEATURES_GENERIC 354

/*
 * Defines for OF_STATS_TYPE_PORT
 * Original name OFPST_PORT
 */
#define OF_STATS_TYPE_PORT_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_STATS_TYPE_PORT (0x4)
#define OF_STATS_TYPE_PORT_BY_VERSION(version) (0x4)
#define OF_STATS_TYPE_PORT_GENERIC 355

/*
 * Defines for OF_STATS_TYPE_PORT_DESC
 * Original name OFPST_PORT_DESC
 */
#define OF_STATS_TYPE_PORT_DESC_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_STATS_TYPE_PORT_DESC (0xd)
#define OF_STATS_TYPE_PORT_DESC_BY_VERSION(version) (0xd)
#define OF_STATS_TYPE_PORT_DESC_GENERIC 356

/*
 * Defines for OF_STATS_TYPE_QUEUE
 * Original name OFPST_QUEUE
 */
#define OF_STATS_TYPE_QUEUE_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_STATS_TYPE_QUEUE (0x5)
#define OF_STATS_TYPE_QUEUE_BY_VERSION(version) (0x5)
#define OF_STATS_TYPE_QUEUE_GENERIC 357

/*
 * Defines for OF_STATS_TYPE_TABLE
 * Original name OFPST_TABLE
 */
#define OF_STATS_TYPE_TABLE_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_STATS_TYPE_TABLE (0x3)
#define OF_STATS_TYPE_TABLE_BY_VERSION(version) (0x3)
#define OF_STATS_TYPE_TABLE_GENERIC 358

/*
 * Defines for OF_STATS_TYPE_TABLE_FEATURES
 * Original name OFPST_TABLE_FEATURES
 */
#define OF_STATS_TYPE_TABLE_FEATURES_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_STATS_TYPE_TABLE_FEATURES (0xc)
#define OF_STATS_TYPE_TABLE_FEATURES_BY_VERSION(version) (0xc)
#define OF_STATS_TYPE_TABLE_FEATURES_GENERIC 359

/****************************************************************
 * Identifiers from ofp_switch_config_failed_code
 *****************************************************************/

/*
 * Defines for OF_SWITCH_CONFIG_FAILED_BAD_FLAGS
 * Original name OFPSCFC_BAD_FLAGS
 */
#define OF_SWITCH_CONFIG_FAILED_BAD_FLAGS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_SWITCH_CONFIG_FAILED_BAD_FLAGS (0x0)
#define OF_SWITCH_CONFIG_FAILED_BAD_FLAGS_BY_VERSION(version) (0x0)
#define OF_SWITCH_CONFIG_FAILED_BAD_FLAGS_GENERIC 360

/*
 * Defines for OF_SWITCH_CONFIG_FAILED_BAD_LEN
 * Original name OFPSCFC_BAD_LEN
 */
#define OF_SWITCH_CONFIG_FAILED_BAD_LEN_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_SWITCH_CONFIG_FAILED_BAD_LEN (0x1)
#define OF_SWITCH_CONFIG_FAILED_BAD_LEN_BY_VERSION(version) (0x1)
#define OF_SWITCH_CONFIG_FAILED_BAD_LEN_GENERIC 361

/*
 * Defines for OF_SWITCH_CONFIG_FAILED_EPERM
 * Original name OFPSCFC_EPERM
 */
#define OF_SWITCH_CONFIG_FAILED_EPERM_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_SWITCH_CONFIG_FAILED_EPERM (0x2)
#define OF_SWITCH_CONFIG_FAILED_EPERM_BY_VERSION(version) (0x2)
#define OF_SWITCH_CONFIG_FAILED_EPERM_GENERIC 362

/****************************************************************
 * Identifiers from ofp_table
 *****************************************************************/

/*
 * Defines for OF_TABLE_ALL
 * Original name OFPTT_ALL
 */
#define OF_TABLE_ALL_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_TABLE_ALL (0xff)
#define OF_TABLE_ALL_BY_VERSION(version) (0xff)
#define OF_TABLE_ALL_GENERIC 363

/*
 * Defines for OF_TABLE_MAX
 * Original name OFPTT_MAX
 */
#define OF_TABLE_MAX_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_TABLE_MAX (0xfe)
#define OF_TABLE_MAX_BY_VERSION(version) (0xfe)
#define OF_TABLE_MAX_GENERIC 364

/****************************************************************
 * Identifiers from ofp_table_config
 *****************************************************************/

/*
 * Defines for OF_TABLE_CONFIG_DEPRECATED_MASK
 * Original name OFPTC_DEPRECATED_MASK
 */
#define OF_TABLE_CONFIG_DEPRECATED_MASK_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_TABLE_CONFIG_DEPRECATED_MASK (0x3)
#define OF_TABLE_CONFIG_DEPRECATED_MASK_BY_VERSION(version) (0x3)

#define OF_TABLE_CONFIG_DEPRECATED_MASK_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_TABLE_CONFIG_DEPRECATED_MASK_BY_VERSION(version))
#define OF_TABLE_CONFIG_DEPRECATED_MASK_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_TABLE_CONFIG_DEPRECATED_MASK_BY_VERSION(version))
#define OF_TABLE_CONFIG_DEPRECATED_MASK_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_TABLE_CONFIG_DEPRECATED_MASK_BY_VERSION(version))
#define OF_TABLE_CONFIG_DEPRECATED_MASK_GENERIC 365

/*
 * Defines for OF_TABLE_CONFIG_TABLE_MISS_CONTINUE
 * Original name OFPTC_TABLE_MISS_CONTINUE
 */
#define OF_TABLE_CONFIG_TABLE_MISS_CONTINUE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2))
#define OF_TABLE_CONFIG_TABLE_MISS_CONTINUE (0x1)
#define OF_TABLE_CONFIG_TABLE_MISS_CONTINUE_BY_VERSION(version) (0x1)

#define OF_TABLE_CONFIG_TABLE_MISS_CONTINUE_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_TABLE_CONFIG_TABLE_MISS_CONTINUE_BY_VERSION(version))
#define OF_TABLE_CONFIG_TABLE_MISS_CONTINUE_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_TABLE_CONFIG_TABLE_MISS_CONTINUE_BY_VERSION(version))
#define OF_TABLE_CONFIG_TABLE_MISS_CONTINUE_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_TABLE_CONFIG_TABLE_MISS_CONTINUE_BY_VERSION(version))
#define OF_TABLE_CONFIG_TABLE_MISS_CONTINUE_GENERIC 366

/*
 * Defines for OF_TABLE_CONFIG_TABLE_MISS_CONTROLLER
 * Original name OFPTC_TABLE_MISS_CONTROLLER
 */
#define OF_TABLE_CONFIG_TABLE_MISS_CONTROLLER_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2))
#define OF_TABLE_CONFIG_TABLE_MISS_CONTROLLER (0x0)
#define OF_TABLE_CONFIG_TABLE_MISS_CONTROLLER_BY_VERSION(version) (0x0)
#define OF_TABLE_CONFIG_TABLE_MISS_CONTROLLER_GENERIC 367

/*
 * Defines for OF_TABLE_CONFIG_TABLE_MISS_DROP
 * Original name OFPTC_TABLE_MISS_DROP
 */
#define OF_TABLE_CONFIG_TABLE_MISS_DROP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2))
#define OF_TABLE_CONFIG_TABLE_MISS_DROP (0x2)
#define OF_TABLE_CONFIG_TABLE_MISS_DROP_BY_VERSION(version) (0x2)

#define OF_TABLE_CONFIG_TABLE_MISS_DROP_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_TABLE_CONFIG_TABLE_MISS_DROP_BY_VERSION(version))
#define OF_TABLE_CONFIG_TABLE_MISS_DROP_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_TABLE_CONFIG_TABLE_MISS_DROP_BY_VERSION(version))
#define OF_TABLE_CONFIG_TABLE_MISS_DROP_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_TABLE_CONFIG_TABLE_MISS_DROP_BY_VERSION(version))
#define OF_TABLE_CONFIG_TABLE_MISS_DROP_GENERIC 368

/*
 * Defines for OF_TABLE_CONFIG_TABLE_MISS_MASK
 * Original name OFPTC_TABLE_MISS_MASK
 */
#define OF_TABLE_CONFIG_TABLE_MISS_MASK_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2))
#define OF_TABLE_CONFIG_TABLE_MISS_MASK (0x3)
#define OF_TABLE_CONFIG_TABLE_MISS_MASK_BY_VERSION(version) (0x3)

#define OF_TABLE_CONFIG_TABLE_MISS_MASK_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_TABLE_CONFIG_TABLE_MISS_MASK_BY_VERSION(version))
#define OF_TABLE_CONFIG_TABLE_MISS_MASK_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_TABLE_CONFIG_TABLE_MISS_MASK_BY_VERSION(version))
#define OF_TABLE_CONFIG_TABLE_MISS_MASK_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_TABLE_CONFIG_TABLE_MISS_MASK_BY_VERSION(version))
#define OF_TABLE_CONFIG_TABLE_MISS_MASK_GENERIC 369

/****************************************************************
 * Identifiers from ofp_table_feature_prop_type
 *****************************************************************/

/*
 * Defines for OF_TABLE_FEATURE_APPLY_ACTIONS
 * Original name OFPTFPT_APPLY_ACTIONS
 */
#define OF_TABLE_FEATURE_APPLY_ACTIONS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_TABLE_FEATURE_APPLY_ACTIONS (0x6)
#define OF_TABLE_FEATURE_APPLY_ACTIONS_BY_VERSION(version) (0x6)
#define OF_TABLE_FEATURE_APPLY_ACTIONS_GENERIC 370

/*
 * Defines for OF_TABLE_FEATURE_APPLY_ACTIONS_MISS
 * Original name OFPTFPT_APPLY_ACTIONS_MISS
 */
#define OF_TABLE_FEATURE_APPLY_ACTIONS_MISS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_TABLE_FEATURE_APPLY_ACTIONS_MISS (0x7)
#define OF_TABLE_FEATURE_APPLY_ACTIONS_MISS_BY_VERSION(version) (0x7)
#define OF_TABLE_FEATURE_APPLY_ACTIONS_MISS_GENERIC 371

/*
 * Defines for OF_TABLE_FEATURE_APPLY_SETFIELD
 * Original name OFPTFPT_APPLY_SETFIELD
 */
#define OF_TABLE_FEATURE_APPLY_SETFIELD_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_TABLE_FEATURE_APPLY_SETFIELD (0xe)
#define OF_TABLE_FEATURE_APPLY_SETFIELD_BY_VERSION(version) (0xe)
#define OF_TABLE_FEATURE_APPLY_SETFIELD_GENERIC 372

/*
 * Defines for OF_TABLE_FEATURE_APPLY_SETFIELD_MISS
 * Original name OFPTFPT_APPLY_SETFIELD_MISS
 */
#define OF_TABLE_FEATURE_APPLY_SETFIELD_MISS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_TABLE_FEATURE_APPLY_SETFIELD_MISS (0xf)
#define OF_TABLE_FEATURE_APPLY_SETFIELD_MISS_BY_VERSION(version) (0xf)
#define OF_TABLE_FEATURE_APPLY_SETFIELD_MISS_GENERIC 373

/*
 * Defines for OF_TABLE_FEATURE_EXPERIMENTER
 * Original name OFPTFPT_EXPERIMENTER
 */
#define OF_TABLE_FEATURE_EXPERIMENTER_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_TABLE_FEATURE_EXPERIMENTER (0xfffe)
#define OF_TABLE_FEATURE_EXPERIMENTER_BY_VERSION(version) (0xfffe)
#define OF_TABLE_FEATURE_EXPERIMENTER_GENERIC 374

/*
 * Defines for OF_TABLE_FEATURE_EXPERIMENTER_MISS
 * Original name OFPTFPT_EXPERIMENTER_MISS
 */
#define OF_TABLE_FEATURE_EXPERIMENTER_MISS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_TABLE_FEATURE_EXPERIMENTER_MISS (0xffff)
#define OF_TABLE_FEATURE_EXPERIMENTER_MISS_BY_VERSION(version) (0xffff)
#define OF_TABLE_FEATURE_EXPERIMENTER_MISS_GENERIC 375

/*
 * Defines for OF_TABLE_FEATURE_INSTRUCTIONS
 * Original name OFPTFPT_INSTRUCTIONS
 */
#define OF_TABLE_FEATURE_INSTRUCTIONS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_TABLE_FEATURE_INSTRUCTIONS (0x0)
#define OF_TABLE_FEATURE_INSTRUCTIONS_BY_VERSION(version) (0x0)
#define OF_TABLE_FEATURE_INSTRUCTIONS_GENERIC 376

/*
 * Defines for OF_TABLE_FEATURE_INSTRUCTIONS_MISS
 * Original name OFPTFPT_INSTRUCTIONS_MISS
 */
#define OF_TABLE_FEATURE_INSTRUCTIONS_MISS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_TABLE_FEATURE_INSTRUCTIONS_MISS (0x1)
#define OF_TABLE_FEATURE_INSTRUCTIONS_MISS_BY_VERSION(version) (0x1)
#define OF_TABLE_FEATURE_INSTRUCTIONS_MISS_GENERIC 377

/*
 * Defines for OF_TABLE_FEATURE_MATCH
 * Original name OFPTFPT_MATCH
 */
#define OF_TABLE_FEATURE_MATCH_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_TABLE_FEATURE_MATCH (0x8)
#define OF_TABLE_FEATURE_MATCH_BY_VERSION(version) (0x8)
#define OF_TABLE_FEATURE_MATCH_GENERIC 378

/*
 * Defines for OF_TABLE_FEATURE_NEXT_TABLES
 * Original name OFPTFPT_NEXT_TABLES
 */
#define OF_TABLE_FEATURE_NEXT_TABLES_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_TABLE_FEATURE_NEXT_TABLES (0x2)
#define OF_TABLE_FEATURE_NEXT_TABLES_BY_VERSION(version) (0x2)
#define OF_TABLE_FEATURE_NEXT_TABLES_GENERIC 379

/*
 * Defines for OF_TABLE_FEATURE_NEXT_TABLES_MISS
 * Original name OFPTFPT_NEXT_TABLES_MISS
 */
#define OF_TABLE_FEATURE_NEXT_TABLES_MISS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_TABLE_FEATURE_NEXT_TABLES_MISS (0x3)
#define OF_TABLE_FEATURE_NEXT_TABLES_MISS_BY_VERSION(version) (0x3)
#define OF_TABLE_FEATURE_NEXT_TABLES_MISS_GENERIC 380

/*
 * Defines for OF_TABLE_FEATURE_WILDCARDS
 * Original name OFPTFPT_WILDCARDS
 */
#define OF_TABLE_FEATURE_WILDCARDS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_TABLE_FEATURE_WILDCARDS (0xa)
#define OF_TABLE_FEATURE_WILDCARDS_BY_VERSION(version) (0xa)
#define OF_TABLE_FEATURE_WILDCARDS_GENERIC 381

/*
 * Defines for OF_TABLE_FEATURE_WRITE_ACTIONS
 * Original name OFPTFPT_WRITE_ACTIONS
 */
#define OF_TABLE_FEATURE_WRITE_ACTIONS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_TABLE_FEATURE_WRITE_ACTIONS (0x4)
#define OF_TABLE_FEATURE_WRITE_ACTIONS_BY_VERSION(version) (0x4)
#define OF_TABLE_FEATURE_WRITE_ACTIONS_GENERIC 382

/*
 * Defines for OF_TABLE_FEATURE_WRITE_ACTIONS_MISS
 * Original name OFPTFPT_WRITE_ACTIONS_MISS
 */
#define OF_TABLE_FEATURE_WRITE_ACTIONS_MISS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_TABLE_FEATURE_WRITE_ACTIONS_MISS (0x5)
#define OF_TABLE_FEATURE_WRITE_ACTIONS_MISS_BY_VERSION(version) (0x5)
#define OF_TABLE_FEATURE_WRITE_ACTIONS_MISS_GENERIC 383

/*
 * Defines for OF_TABLE_FEATURE_WRITE_SETFIELD
 * Original name OFPTFPT_WRITE_SETFIELD
 */
#define OF_TABLE_FEATURE_WRITE_SETFIELD_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_TABLE_FEATURE_WRITE_SETFIELD (0xc)
#define OF_TABLE_FEATURE_WRITE_SETFIELD_BY_VERSION(version) (0xc)
#define OF_TABLE_FEATURE_WRITE_SETFIELD_GENERIC 384

/*
 * Defines for OF_TABLE_FEATURE_WRITE_SETFIELD_MISS
 * Original name OFPTFPT_WRITE_SETFIELD_MISS
 */
#define OF_TABLE_FEATURE_WRITE_SETFIELD_MISS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_TABLE_FEATURE_WRITE_SETFIELD_MISS (0xd)
#define OF_TABLE_FEATURE_WRITE_SETFIELD_MISS_BY_VERSION(version) (0xd)
#define OF_TABLE_FEATURE_WRITE_SETFIELD_MISS_GENERIC 385

/****************************************************************
 * Identifiers from ofp_table_features_failed_code
 *****************************************************************/

/*
 * Defines for OF_TABLE_REQUEST_FAILED_BAD_ARGUMENT
 * Original name OFPTFFC_BAD_ARGUMENT
 */
#define OF_TABLE_REQUEST_FAILED_BAD_ARGUMENT_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_TABLE_REQUEST_FAILED_BAD_ARGUMENT (0x4)
#define OF_TABLE_REQUEST_FAILED_BAD_ARGUMENT_BY_VERSION(version) (0x4)
#define OF_TABLE_REQUEST_FAILED_BAD_ARGUMENT_GENERIC 386

/*
 * Defines for OF_TABLE_REQUEST_FAILED_BAD_LEN
 * Original name OFPTFFC_BAD_LEN
 */
#define OF_TABLE_REQUEST_FAILED_BAD_LEN_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_TABLE_REQUEST_FAILED_BAD_LEN (0x3)
#define OF_TABLE_REQUEST_FAILED_BAD_LEN_BY_VERSION(version) (0x3)
#define OF_TABLE_REQUEST_FAILED_BAD_LEN_GENERIC 387

/*
 * Defines for OF_TABLE_REQUEST_FAILED_BAD_METADATA
 * Original name OFPTFFC_BAD_METADATA
 */
#define OF_TABLE_REQUEST_FAILED_BAD_METADATA_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_TABLE_REQUEST_FAILED_BAD_METADATA (0x1)
#define OF_TABLE_REQUEST_FAILED_BAD_METADATA_BY_VERSION(version) (0x1)
#define OF_TABLE_REQUEST_FAILED_BAD_METADATA_GENERIC 388

/*
 * Defines for OF_TABLE_REQUEST_FAILED_BAD_TABLE
 * Original name OFPTFFC_BAD_TABLE
 */
#define OF_TABLE_REQUEST_FAILED_BAD_TABLE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_TABLE_REQUEST_FAILED_BAD_TABLE (0x0)
#define OF_TABLE_REQUEST_FAILED_BAD_TABLE_BY_VERSION(version) (0x0)
#define OF_TABLE_REQUEST_FAILED_BAD_TABLE_GENERIC 389

/*
 * Defines for OF_TABLE_REQUEST_FAILED_BAD_TYPE
 * Original name OFPTFFC_BAD_TYPE
 */
#define OF_TABLE_REQUEST_FAILED_BAD_TYPE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_TABLE_REQUEST_FAILED_BAD_TYPE (0x2)
#define OF_TABLE_REQUEST_FAILED_BAD_TYPE_BY_VERSION(version) (0x2)
#define OF_TABLE_REQUEST_FAILED_BAD_TYPE_GENERIC 390

/*
 * Defines for OF_TABLE_REQUEST_FAILED_EPERM
 * Original name OFPTFFC_EPERM
 */
#define OF_TABLE_REQUEST_FAILED_EPERM_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_TABLE_REQUEST_FAILED_EPERM (0x5)
#define OF_TABLE_REQUEST_FAILED_EPERM_BY_VERSION(version) (0x5)
#define OF_TABLE_REQUEST_FAILED_EPERM_GENERIC 391

/****************************************************************
 * Identifiers from ofp_table_mod_failed_code
 *****************************************************************/

/*
 * Defines for OF_TABLE_MOD_FAILED_BAD_CONFIG
 * Original name OFPTMFC_BAD_CONFIG
 */
#define OF_TABLE_MOD_FAILED_BAD_CONFIG_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_TABLE_MOD_FAILED_BAD_CONFIG (0x1)
#define OF_TABLE_MOD_FAILED_BAD_CONFIG_BY_VERSION(version) (0x1)
#define OF_TABLE_MOD_FAILED_BAD_CONFIG_GENERIC 392

/*
 * Defines for OF_TABLE_MOD_FAILED_BAD_TABLE
 * Original name OFPTMFC_BAD_TABLE
 */
#define OF_TABLE_MOD_FAILED_BAD_TABLE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_TABLE_MOD_FAILED_BAD_TABLE (0x0)
#define OF_TABLE_MOD_FAILED_BAD_TABLE_BY_VERSION(version) (0x0)
#define OF_TABLE_MOD_FAILED_BAD_TABLE_GENERIC 393

/*
 * Defines for OF_TABLE_MOD_FAILED_EPERM
 * Original name OFPTMFC_EPERM
 */
#define OF_TABLE_MOD_FAILED_EPERM_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_TABLE_MOD_FAILED_EPERM (0x2)
#define OF_TABLE_MOD_FAILED_EPERM_BY_VERSION(version) (0x2)
#define OF_TABLE_MOD_FAILED_EPERM_GENERIC 394

/****************************************************************
 * Identifiers from ofp_type
 *****************************************************************/

/*
 * Defines for OF_OBJ_TYPE_BARRIER_REPLY
 * Original name OFPT_BARRIER_REPLY
 */
#define OF_OBJ_TYPE_BARRIER_REPLY_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_OBJ_TYPE_BARRIER_REPLY_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x13, 0x15, 0x15, 0x15)
#define OF_OBJ_TYPE_BARRIER_REPLY_GENERIC 395

/*
 * Defines for OF_OBJ_TYPE_BARRIER_REQUEST
 * Original name OFPT_BARRIER_REQUEST
 */
#define OF_OBJ_TYPE_BARRIER_REQUEST_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_OBJ_TYPE_BARRIER_REQUEST_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x12, 0x14, 0x14, 0x14)
#define OF_OBJ_TYPE_BARRIER_REQUEST_GENERIC 396

/*
 * Defines for OF_OBJ_TYPE_ECHO_REPLY
 * Original name OFPT_ECHO_REPLY
 */
#define OF_OBJ_TYPE_ECHO_REPLY_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_OBJ_TYPE_ECHO_REPLY (0x3)
#define OF_OBJ_TYPE_ECHO_REPLY_BY_VERSION(version) (0x3)
#define OF_OBJ_TYPE_ECHO_REPLY_GENERIC 397

/*
 * Defines for OF_OBJ_TYPE_ECHO_REQUEST
 * Original name OFPT_ECHO_REQUEST
 */
#define OF_OBJ_TYPE_ECHO_REQUEST_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_OBJ_TYPE_ECHO_REQUEST (0x2)
#define OF_OBJ_TYPE_ECHO_REQUEST_BY_VERSION(version) (0x2)
#define OF_OBJ_TYPE_ECHO_REQUEST_GENERIC 398

/*
 * Defines for OF_OBJ_TYPE_ERROR
 * Original name OFPT_ERROR
 */
#define OF_OBJ_TYPE_ERROR_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_OBJ_TYPE_ERROR (0x1)
#define OF_OBJ_TYPE_ERROR_BY_VERSION(version) (0x1)
#define OF_OBJ_TYPE_ERROR_GENERIC 399

/*
 * Defines for OF_OBJ_TYPE_EXPERIMENTER
 * Original name OFPT_EXPERIMENTER
 */
#define OF_OBJ_TYPE_EXPERIMENTER_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_OBJ_TYPE_EXPERIMENTER (0x4)
#define OF_OBJ_TYPE_EXPERIMENTER_BY_VERSION(version) (0x4)
#define OF_OBJ_TYPE_EXPERIMENTER_GENERIC 400

/*
 * Defines for OF_OBJ_TYPE_FEATURES_REPLY
 * Original name OFPT_FEATURES_REPLY
 */
#define OF_OBJ_TYPE_FEATURES_REPLY_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_OBJ_TYPE_FEATURES_REPLY (0x6)
#define OF_OBJ_TYPE_FEATURES_REPLY_BY_VERSION(version) (0x6)
#define OF_OBJ_TYPE_FEATURES_REPLY_GENERIC 401

/*
 * Defines for OF_OBJ_TYPE_FEATURES_REQUEST
 * Original name OFPT_FEATURES_REQUEST
 */
#define OF_OBJ_TYPE_FEATURES_REQUEST_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_OBJ_TYPE_FEATURES_REQUEST (0x5)
#define OF_OBJ_TYPE_FEATURES_REQUEST_BY_VERSION(version) (0x5)
#define OF_OBJ_TYPE_FEATURES_REQUEST_GENERIC 402

/*
 * Defines for OF_OBJ_TYPE_FLOW_MOD
 * Original name OFPT_FLOW_MOD
 */
#define OF_OBJ_TYPE_FLOW_MOD_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_OBJ_TYPE_FLOW_MOD (0xe)
#define OF_OBJ_TYPE_FLOW_MOD_BY_VERSION(version) (0xe)
#define OF_OBJ_TYPE_FLOW_MOD_GENERIC 403

/*
 * Defines for OF_OBJ_TYPE_FLOW_REMOVED
 * Original name OFPT_FLOW_REMOVED
 */
#define OF_OBJ_TYPE_FLOW_REMOVED_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_OBJ_TYPE_FLOW_REMOVED (0xb)
#define OF_OBJ_TYPE_FLOW_REMOVED_BY_VERSION(version) (0xb)
#define OF_OBJ_TYPE_FLOW_REMOVED_GENERIC 404

/*
 * Defines for OF_OBJ_TYPE_GET_ASYNC_REPLY
 * Original name OFPT_GET_ASYNC_REPLY
 */
#define OF_OBJ_TYPE_GET_ASYNC_REPLY_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_OBJ_TYPE_GET_ASYNC_REPLY (0x1b)
#define OF_OBJ_TYPE_GET_ASYNC_REPLY_BY_VERSION(version) (0x1b)
#define OF_OBJ_TYPE_GET_ASYNC_REPLY_GENERIC 405

/*
 * Defines for OF_OBJ_TYPE_GET_ASYNC_REQUEST
 * Original name OFPT_GET_ASYNC_REQUEST
 */
#define OF_OBJ_TYPE_GET_ASYNC_REQUEST_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_OBJ_TYPE_GET_ASYNC_REQUEST (0x1a)
#define OF_OBJ_TYPE_GET_ASYNC_REQUEST_BY_VERSION(version) (0x1a)
#define OF_OBJ_TYPE_GET_ASYNC_REQUEST_GENERIC 406

/*
 * Defines for OF_OBJ_TYPE_GET_CONFIG_REPLY
 * Original name OFPT_GET_CONFIG_REPLY
 */
#define OF_OBJ_TYPE_GET_CONFIG_REPLY_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_OBJ_TYPE_GET_CONFIG_REPLY (0x8)
#define OF_OBJ_TYPE_GET_CONFIG_REPLY_BY_VERSION(version) (0x8)
#define OF_OBJ_TYPE_GET_CONFIG_REPLY_GENERIC 407

/*
 * Defines for OF_OBJ_TYPE_GET_CONFIG_REQUEST
 * Original name OFPT_GET_CONFIG_REQUEST
 */
#define OF_OBJ_TYPE_GET_CONFIG_REQUEST_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_OBJ_TYPE_GET_CONFIG_REQUEST (0x7)
#define OF_OBJ_TYPE_GET_CONFIG_REQUEST_BY_VERSION(version) (0x7)
#define OF_OBJ_TYPE_GET_CONFIG_REQUEST_GENERIC 408

/*
 * Defines for OF_OBJ_TYPE_GROUP_MOD
 * Original name OFPT_GROUP_MOD
 */
#define OF_OBJ_TYPE_GROUP_MOD_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_OBJ_TYPE_GROUP_MOD (0xf)
#define OF_OBJ_TYPE_GROUP_MOD_BY_VERSION(version) (0xf)
#define OF_OBJ_TYPE_GROUP_MOD_GENERIC 409

/*
 * Defines for OF_OBJ_TYPE_HELLO
 * Original name OFPT_HELLO
 */
#define OF_OBJ_TYPE_HELLO_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_OBJ_TYPE_HELLO (0x0)
#define OF_OBJ_TYPE_HELLO_BY_VERSION(version) (0x0)
#define OF_OBJ_TYPE_HELLO_GENERIC 410

/*
 * Defines for OF_OBJ_TYPE_METER_MOD
 * Original name OFPT_METER_MOD
 */
#define OF_OBJ_TYPE_METER_MOD_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_OBJ_TYPE_METER_MOD (0x1d)
#define OF_OBJ_TYPE_METER_MOD_BY_VERSION(version) (0x1d)
#define OF_OBJ_TYPE_METER_MOD_GENERIC 411

/*
 * Defines for OF_OBJ_TYPE_PACKET_IN
 * Original name OFPT_PACKET_IN
 */
#define OF_OBJ_TYPE_PACKET_IN_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_OBJ_TYPE_PACKET_IN (0xa)
#define OF_OBJ_TYPE_PACKET_IN_BY_VERSION(version) (0xa)
#define OF_OBJ_TYPE_PACKET_IN_GENERIC 412

/*
 * Defines for OF_OBJ_TYPE_PACKET_OUT
 * Original name OFPT_PACKET_OUT
 */
#define OF_OBJ_TYPE_PACKET_OUT_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_OBJ_TYPE_PACKET_OUT (0xd)
#define OF_OBJ_TYPE_PACKET_OUT_BY_VERSION(version) (0xd)
#define OF_OBJ_TYPE_PACKET_OUT_GENERIC 413

/*
 * Defines for OF_OBJ_TYPE_PORT_MOD
 * Original name OFPT_PORT_MOD
 */
#define OF_OBJ_TYPE_PORT_MOD_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_OBJ_TYPE_PORT_MOD_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0xf, 0x10, 0x10, 0x10)
#define OF_OBJ_TYPE_PORT_MOD_GENERIC 414

/*
 * Defines for OF_OBJ_TYPE_PORT_STATUS
 * Original name OFPT_PORT_STATUS
 */
#define OF_OBJ_TYPE_PORT_STATUS_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_OBJ_TYPE_PORT_STATUS (0xc)
#define OF_OBJ_TYPE_PORT_STATUS_BY_VERSION(version) (0xc)
#define OF_OBJ_TYPE_PORT_STATUS_GENERIC 415

/*
 * Defines for OF_OBJ_TYPE_QUEUE_GET_CONFIG_REPLY
 * Original name OFPT_QUEUE_GET_CONFIG_REPLY
 */
#define OF_OBJ_TYPE_QUEUE_GET_CONFIG_REPLY_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_OBJ_TYPE_QUEUE_GET_CONFIG_REPLY_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x15, 0x17, 0x17, 0x17)
#define OF_OBJ_TYPE_QUEUE_GET_CONFIG_REPLY_GENERIC 416

/*
 * Defines for OF_OBJ_TYPE_QUEUE_GET_CONFIG_REQUEST
 * Original name OFPT_QUEUE_GET_CONFIG_REQUEST
 */
#define OF_OBJ_TYPE_QUEUE_GET_CONFIG_REQUEST_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_OBJ_TYPE_QUEUE_GET_CONFIG_REQUEST_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x14, 0x16, 0x16, 0x16)
#define OF_OBJ_TYPE_QUEUE_GET_CONFIG_REQUEST_GENERIC 417

/*
 * Defines for OF_OBJ_TYPE_ROLE_REPLY
 * Original name OFPT_ROLE_REPLY
 */
#define OF_OBJ_TYPE_ROLE_REPLY_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_OBJ_TYPE_ROLE_REPLY (0x19)
#define OF_OBJ_TYPE_ROLE_REPLY_BY_VERSION(version) (0x19)
#define OF_OBJ_TYPE_ROLE_REPLY_GENERIC 418

/*
 * Defines for OF_OBJ_TYPE_ROLE_REQUEST
 * Original name OFPT_ROLE_REQUEST
 */
#define OF_OBJ_TYPE_ROLE_REQUEST_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_OBJ_TYPE_ROLE_REQUEST (0x18)
#define OF_OBJ_TYPE_ROLE_REQUEST_BY_VERSION(version) (0x18)
#define OF_OBJ_TYPE_ROLE_REQUEST_GENERIC 419

/*
 * Defines for OF_OBJ_TYPE_SET_ASYNC
 * Original name OFPT_SET_ASYNC
 */
#define OF_OBJ_TYPE_SET_ASYNC_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_OBJ_TYPE_SET_ASYNC (0x1c)
#define OF_OBJ_TYPE_SET_ASYNC_BY_VERSION(version) (0x1c)
#define OF_OBJ_TYPE_SET_ASYNC_GENERIC 420

/*
 * Defines for OF_OBJ_TYPE_SET_CONFIG
 * Original name OFPT_SET_CONFIG
 */
#define OF_OBJ_TYPE_SET_CONFIG_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_OBJ_TYPE_SET_CONFIG (0x9)
#define OF_OBJ_TYPE_SET_CONFIG_BY_VERSION(version) (0x9)
#define OF_OBJ_TYPE_SET_CONFIG_GENERIC 421

/*
 * Defines for OF_OBJ_TYPE_STATS_REPLY
 * Original name OFPT_STATS_REPLY
 */
#define OF_OBJ_TYPE_STATS_REPLY_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_OBJ_TYPE_STATS_REPLY_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x11, 0x13, 0x13, 0x13)
#define OF_OBJ_TYPE_STATS_REPLY_GENERIC 422

/*
 * Defines for OF_OBJ_TYPE_STATS_REQUEST
 * Original name OFPT_STATS_REQUEST
 */
#define OF_OBJ_TYPE_STATS_REQUEST_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_OBJ_TYPE_STATS_REQUEST_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x10, 0x12, 0x12, 0x12)
#define OF_OBJ_TYPE_STATS_REQUEST_GENERIC 423

/*
 * Defines for OF_OBJ_TYPE_TABLE_MOD
 * Original name OFPT_TABLE_MOD
 */
#define OF_OBJ_TYPE_TABLE_MOD_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_OBJ_TYPE_TABLE_MOD (0x11)
#define OF_OBJ_TYPE_TABLE_MOD_BY_VERSION(version) (0x11)
#define OF_OBJ_TYPE_TABLE_MOD_GENERIC 424

/****************************************************************
 * Identifiers from ofp_vlan_id
 *****************************************************************/

/*
 * Defines for OF_VLAN_TAG_ANY
 * Original name OFPVID_ANY
 */
#define OF_VLAN_TAG_ANY_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1))
#define OF_VLAN_TAG_ANY (0xfffe)
#define OF_VLAN_TAG_ANY_BY_VERSION(version) (0xfffe)
#define OF_VLAN_TAG_ANY_GENERIC 425

/*
 * Defines for OF_VLAN_TAG_NONE
 * Original name OFPVID_NONE
 */
#define OF_VLAN_TAG_NONE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_VLAN_TAG_NONE_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x0, 0xffff, 0x0, 0x0)
#define OF_VLAN_TAG_NONE_GENERIC 426

/*
 * Defines for OF_VLAN_TAG_PRESENT
 * Original name OFPVID_PRESENT
 */
#define OF_VLAN_TAG_PRESENT_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_VLAN_TAG_PRESENT (0x1000)
#define OF_VLAN_TAG_PRESENT_BY_VERSION(version) (0x1000)
#define OF_VLAN_TAG_PRESENT_GENERIC 427

#endif /* Loci identifiers header file */
